(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var ABackDrop = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(ABackDrop, _AppeaserComponentBas);

  var _super = _createSuper(ABackDrop);

  /**
   * Constructor, will run before page loaded
   */
  function ABackDrop() {
    var _this;

    _classCallCheck(this, ABackDrop);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(ABackDrop, [{
    key: "destroy",
    value: function destroy() {
      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(ABackDrop.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {}
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: onDOMReady');

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._setGradient = this._setGradient.bind(this);
      this._show = this._show.bind(this);
      this._hide = this._hide.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.ACTION.SET_BACKDROP, this._setGradient);
      this.subscribe(_Enums.default.ACTION.SHOW_BACKDROP, this._show);
      this.subscribe(_Enums.default.ACTION.HIDE_BACKDROP, this._hide);
      this.subscribe(_Enums.default.ACTION.ANIMATE_BACKDROP, this._animate);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady);
      this.unsubscribe(_Enums.default.ACTION.SET_BACKDROP, this._setGradient);
      this.unsubscribe(_Enums.default.ACTION.SHOW_BACKDROP, this._show);
      this.unsubscribe(_Enums.default.ACTION.HIDE_BACKDROP, this._hide);
      this.unsubscribe(_Enums.default.ACTION.ANIMATE_BACKDROP, this._animate);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {}
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Sets the backdrop gradient
     * @param args {gradientClass: NAME_OF_CLASS, gradientHex: HEX_VALUES}
     * @private
     */

  }, {
    key: "_setGradient",
    value: function _setGradient(args) {
      if (args.gradientClass) {
        this.$el.addClass(args.gradientClass);
      }

      if (args.gradientHex) {
        this.$el.css('background', args.gradientHex);
      }
    }
    /**
     * Show the backdrop
     * @private
     */

  }, {
    key: "_show",
    value: function _show() {
      this.$el.addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
    }
    /**
     * Hide the backdrop
     * @private
     */

  }, {
    key: "_hide",
    value: function _hide() {
      this.$el.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
    }
    /**
     * Animates the backdrop gradient
     * @param args {gradientClass: NAME_OF_CLASS, gradientHex: HEX_VALUES}
     * @private
     */

  }, {
    key: "_animate",
    value: function _animate(args) {
      _Logger.default.INFO(this.constructor.name, ':: _animate');

      if (args) {
        if (!this.$el.hasClass(args.gradientClass) && this.$el.css('background') != args.gradientHex) {
          var $clone = this.$el.eq(0).clone();
          var $parent = this.$el.parent();
          var hexClass = args.gradientClass || '';
          $clone.css('opacity', 1);
          this.$el.addClass('is-fading-out').css('opacity', 1).delay(600).queue(function (next) {
            $(this).remove();
            next();
          });
          $clone.prop('class', 'a-backdrop ' + _Enums.default.CLASS.IS_VISIBLE_STATE + ' ' + hexClass).css('background', args.gradientHex || '');
          $parent.prepend($clone);
          this.$el = $clone;
        }
      }
    }
  }]);

  return ABackDrop;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = ABackDrop;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],2:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var ABackgroundImage = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(ABackgroundImage, _AppeaserComponentBas);

  var _super = _createSuper(ABackgroundImage);

  function ABackgroundImage() {
    var _this;

    _classCallCheck(this, ABackgroundImage);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady);

    return _this;
  }

  _createClass(ABackgroundImage, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachSubscribers();

      _get(_getPrototypeOf(ABackgroundImage.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.DATA_BACKGROUND = 'data-background';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._attachSubscribers();

      this._setBackground();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady);
      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_setBackground",
    value: function _setBackground() {
      var url = this.$el.attr(this.DATA_BACKGROUND);

      if (url) {
        this.$el.css('background-image', 'url(' + url + ')');
      }
    }
  }]);

  return ABackgroundImage;
}(_appeaserComponentBase.default);

module.exports = ABackgroundImage;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],3:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var AOverlay = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(AOverlay, _AppeaserComponentBas);

  var _super = _createSuper(AOverlay);

  /**
   * Constructor, will run before page loaded
   */
  function AOverlay() {
    var _this;

    _classCallCheck(this, AOverlay);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(AOverlay, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(AOverlay.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.CLASS_IS_CLOSING = 'is-closing';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this.rmClasses = null;

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._show = this._show.bind(this);
      this._hide = this._hide.bind(this);
      this._onClick = this._onClick.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.ACTION.SHOW_OVERLAY, this._show);
      this.subscribe(_Enums.default.ACTION.HIDE_OVERLAY, this._hide);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.ACTION.SHOW_OVERLAY, this._show);
      this.unsubscribe(_Enums.default.ACTION.HIDE_OVERLAY, this._hide);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$el.on('click', this._onClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$el.off('click', this._onClick);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     *
     * @param options - not mandatory
     * @private
     */

  }, {
    key: "_show",
    value: function _show() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        keepScroll: false,
        scrollCompensation: 0
      };
      // In case we delayed the closing for animation purposes we need to close hard now
      this.$el.removeClass(this.rmClasses).removeClass(this.CLASS_IS_CLOSING);
      clearTimeout(this.delayTimer);
      this.$el.addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);

      if (options.classes) {
        this.rmClasses = options.classes;
        this.$el.addClass(options.classes);
      }

      if (!options.keepScroll) {
        this.publish(_Enums.default.ACTION.DISABLE_SCROLL, {
          scrollCompensation: options.scrollCompensation
        });
      }

      this.publish(_Enums.default.EVENT.ON_OVERLAY_SHOW);
    }
    /**
     *
     * @private
     */

  }, {
    key: "_hide",
    value: function _hide() {
      var _this2 = this;

      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      if (options.animating) {
        this.$el.addClass(this.CLASS_IS_CLOSING).removeClass(options.opacityClass);
        this.delayTimer = setTimeout(function () {
          _this2.$el.removeClass(_this2.CLASS_IS_CLOSING);

          _this2._close();
        }, options.delay);
      } else {
        this._close();
      }

      this.publish(_Enums.default.ACTION.ENABLE_SCROLL);
      this.publish(_Enums.default.EVENT.ON_OVERLAY_HIDE);
    }
    /**
     * Closes the overlay and removes any added classes
     * @private
     */

  }, {
    key: "_close",
    value: function _close() {
      this.$el.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);

      if (this.rmClasses) {
        this.$el.removeClass(this.rmClasses);
        this.rmClasses = null;
      }
    }
    /**
     *
     * @private
     */

  }, {
    key: "_onClick",
    value: function _onClick() {
      this.publish(_Enums.default.EVENT.ON_OVERLAY_CLICKED);
    }
  }]);

  return AOverlay;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = AOverlay;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],4:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var APicture = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(APicture, _AppeaserComponentBas);

  var _super = _createSuper(APicture);

  /**
   * Constructor, will run before page loaded
   */
  function APicture() {
    var _this;

    _classCallCheck(this, APicture);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();

    _this._jQueryScopeBinding();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(APicture, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(APicture.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.BACKGROUND = '.a-image';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._onImageLoad();
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$background = this.$el.find(this.BACKGROUND);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onImageLoad = this._onImageLoad.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$background.on('load', this._onImageLoad);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$background.off('load', this._onImageLoad);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * When the responsive image changes source we update to use the same in our background css
     * @private
     */

  }, {
    key: "_onImageLoad",
    value: function _onImageLoad() {
      var backgroundHolder = this.$el.data('background');

      if (backgroundHolder) {
        var imageUrl = this.$background.get(0).currentSrc || this.$background.attr('srcset') || this.$background.attr('src');
        this.$el.closest('.' + backgroundHolder).css('background-image', 'url(' + imageUrl + ')');
      }
    }
  }]);

  return APicture;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = APicture;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],5:[function(require,module,exports){
(function (global){(function (){
'use strict'; // import each component (remember to register with ComponentLoader below)

var _Enums = _interopRequireDefault(require('./../themes/p11/enums.js'));

var _Rimd = _interopRequireDefault(require('./../js/base/rimd.js'));

var _stickyComponent = _interopRequireDefault(require('./../js/base/sticky-component.js'));

var _SkeletonLoading = _interopRequireDefault(require('./../js/base/skeleton-loading.js'));

var _SiteEntryLocator = _interopRequireDefault(require('./../js/base/site-entry-locator.js'));

var _index = _interopRequireDefault(require("./atoms/a-overlay/index"));

var _index2 = _interopRequireDefault(require("./atoms/a-backdrop/index"));

var _index3 = _interopRequireDefault(require("./atoms/a-background-image/index"));

var _index4 = _interopRequireDefault(require("./atoms/a-picture/index"));

var _index5 = _interopRequireDefault(require("./molecules/m-input/index"));

var _index6 = _interopRequireDefault(require("./molecules/m-link-toggle/index"));

var _index7 = _interopRequireDefault(require("./molecules/m-tablist/index"));

var _index8 = _interopRequireDefault(require("./molecules/m-swatches/index"));

var _index9 = _interopRequireDefault(require("./molecules/m-copy-link/index"));

var _index10 = _interopRequireDefault(require("./molecules/m-product-image/index"));

var _index11 = _interopRequireDefault(require("./molecules/m-radio-button-selector/index"));

var _index12 = _interopRequireDefault(require("./molecules/m-product-markers/index"));

var _index13 = _interopRequireDefault(require("./molecules/m-product-markers-cofs/index"));

var _index14 = _interopRequireDefault(require("./molecules/m-outofstock-cart/index"));

var _index15 = _interopRequireDefault(require("./organisms/o-page/index"));

var _index16 = _interopRequireDefault(require("./organisms/o-page-content/index"));

var _index17 = _interopRequireDefault(require("./organisms/o-example/index"));

var _index18 = _interopRequireDefault(require("./organisms/o-remove-confirm/index"));

var _index19 = _interopRequireDefault(require("./organisms/o-address-box-edit/index"));

var _index20 = _interopRequireDefault(require("./organisms/o-form/index"));

var _index21 = _interopRequireDefault(require("./organisms/o-cart-discount-code/index"));

var _index22 = _interopRequireDefault(require("./organisms/o-filter-badges/index"));

var _index23 = _interopRequireDefault(require("./organisms/o-grid-controller/index"));

var _index24 = _interopRequireDefault(require("./organisms/o-blog-hero/index"));

var _index25 = _interopRequireDefault(require("./organisms/o-map/index"));

var _index26 = _interopRequireDefault(require("./organisms/o-add-element/index"));

var _index27 = _interopRequireDefault(require("./organisms/o-payment-checkout/index"));

var _index28 = _interopRequireDefault(require("./organisms/o-olapic-gallery/index"));

var _index29 = _interopRequireDefault(require("./organisms/o-olapic-slider/index"));

var _index30 = _interopRequireDefault(require("./organisms/o-olapic-slide/index"));

var _index31 = _interopRequireDefault(require("./organisms/o-lightbox/index"));

var _index32 = _interopRequireDefault(require("./organisms/o-address-box-add/index"));

var _index33 = _interopRequireDefault(require("./organisms/o-pickup-location/index"));

var _index34 = _interopRequireDefault(require("./organisms/o-home-delivery/index"));

var _index35 = _interopRequireDefault(require("./organisms/o-checkout/index"));

var _index36 = _interopRequireDefault(require("./organisms/o-lazy-load/index"));

var _index37 = _interopRequireDefault(require("./organisms/o-slider-cofs/index"));

var _index38 = _interopRequireDefault(require("./organisms/o-loader-overlay/index"));

var _index39 = _interopRequireDefault(require("./organisms/o-newsletter-signup/index"));

var _index40 = _interopRequireDefault(require("./organisms/o-pra/index"));

var _index41 = _interopRequireDefault(require("./organisms/o-social-sign-in/index"));

var _index42 = _interopRequireDefault(require("./organisms/o-my-linked-accounts/index"));

var _index43 = _interopRequireDefault(require("./organisms/o-social-sign-in-popup/index"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Shared components utils
// Project atoms
// Project molecules
// Project organisms
// Add common imports
global.commonImports = {
  OPage: _index15.default,
  OPageContent: _index16.default,
  AOverlay: _index.default,
  oExample: _index17.default,
  ABackDrop: _index2.default,
  MInput: _index5.default,
  MLinkToggle: _index6.default,
  ORemoveConfirm: _index18.default,
  OAddressBoxEdit: _index19.default,
  MTablist: _index7.default,
  MSwatches: _index8.default,
  MCopyLink: _index9.default,
  MOutOfStockCart: _index14.default,
  ABackgroundImage: _index3.default,
  MProductImage: _index10.default,
  OForm: _index20.default,
  APicture: _index4.default,
  OCartDiscountCode: _index21.default,
  MRadioButtonSelector: _index11.default,
  OFilterBadges: _index22.default,
  StickyComponent: _stickyComponent.default,
  OGridController: _index23.default,
  OBlogHero: _index24.default,
  OMap: _index25.default,
  OAddElement: _index26.default,
  OlapicGalleryBase: _index28.default,
  OOlapicStyleSlider: _index29.default,
  OOlapicStyleSlide: _index30.default,
  OPaymentCheckout: _index27.default,
  OLightbox: _index31.default,
  OAddressBoxAdd: _index32.default,
  OPickupLocation: _index33.default,
  OHomeDelivery: _index34.default,
  OCheckout: _index35.default,
  OLazyLoad: _index36.default,
  OSliderCofs: _index37.default,
  OLoaderOverlay: _index38.default,
  MProductMarkers: _index12.default,
  MProductMarkersCofs: _index13.default,
  ONewsletterSignUp: _index39.default,
  SkeletonLoading: _SkeletonLoading.default,
  SiteEntryLocator: _SiteEntryLocator.default,
  OPraCommon: _index40.default,
  OSocialSignIn: _index41.default,
  OMyLinkedAccounts: _index42.default,
  OSocialSignInPopup: _index43.default,
  Rimd: _Rimd.default
};
/**
 * Add functions accessible with appeaser.Utils
 * @usage appeaser.Utils
 */

global.utils = {
  Utils: {
    isMobile: function isMobile() {
      return Modernizr.mq(_Enums.default.MQ.IS_MOBILE);
    },
    isTablet: function isTablet() {
      return Modernizr.mq(_Enums.default.MQ.IS_TABLET);
    }
  }
};
/**
 * Log function for handlebars
 * @usage {{log data}}
 */

Handlebars.registerHelper('log', function (message) {
  console.log(message);
});
/**
 * Stringify data for handlebars
 * @usage {{stringify data}}
 */

Handlebars.registerHelper('stringify', function (data) {
  return JSON.stringify(data);
});
Handlebars.registerHelper('if_eq', function (a, b, opts) {
  if (a == b) {
    return opts.fn(this);
  } else {
    return opts.inverse(this);
  }
});
/** toLowerCase **/

Handlebars.registerHelper('toLowerCase', function (text) {
  return text.toLowerCase();
});
/** toUpperCase **/

Handlebars.registerHelper('toUpperCase', function (text) {
  return text.toUpperCase();
});

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./../js/base/rimd.js":54,"./../js/base/site-entry-locator.js":55,"./../js/base/skeleton-loading.js":56,"./../js/base/sticky-component.js":57,"./../themes/p11/enums.js":66,"./atoms/a-backdrop/index":1,"./atoms/a-background-image/index":2,"./atoms/a-overlay/index":3,"./atoms/a-picture/index":4,"./molecules/m-copy-link/index":6,"./molecules/m-input/index":7,"./molecules/m-link-toggle/index":8,"./molecules/m-outofstock-cart/index":9,"./molecules/m-product-image/index":10,"./molecules/m-product-markers-cofs/index":11,"./molecules/m-product-markers/index":12,"./molecules/m-radio-button-selector/index":13,"./molecules/m-swatches/index":14,"./molecules/m-tablist/index":15,"./organisms/o-add-element/index":16,"./organisms/o-address-box-add/index":17,"./organisms/o-address-box-edit/index":18,"./organisms/o-blog-hero/index":19,"./organisms/o-cart-discount-code/index":20,"./organisms/o-checkout/index":21,"./organisms/o-example/index":22,"./organisms/o-filter-badges/index":23,"./organisms/o-form/index":24,"./organisms/o-grid-controller/index":25,"./organisms/o-home-delivery/index":26,"./organisms/o-lazy-load/index":27,"./organisms/o-lightbox/index":28,"./organisms/o-loader-overlay/index":29,"./organisms/o-map/index":30,"./organisms/o-my-linked-accounts/index":32,"./organisms/o-newsletter-signup/index":33,"./organisms/o-olapic-gallery/index":34,"./organisms/o-olapic-slide/index":35,"./organisms/o-olapic-slider/index":36,"./organisms/o-page-content/index":37,"./organisms/o-page/index":38,"./organisms/o-payment-checkout/index":39,"./organisms/o-pickup-location/index":40,"./organisms/o-pra/index":41,"./organisms/o-remove-confirm/index":42,"./organisms/o-slider-cofs/index":43,"./organisms/o-social-sign-in-popup/index":44,"./organisms/o-social-sign-in/index":45}],6:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MCopyLink = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(MCopyLink, _AppeaserComponentBas);

  var _super = _createSuper(MCopyLink);

  /**
   * Constructor, will run before page loaded
   */
  function MCopyLink() {
    var _this;

    _classCallCheck(this, MCopyLink);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MCopyLink, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(MCopyLink.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_COPYLINK = '.js-copylink';
      this.SELECTOR_COPYTEXT = '.js-copytext';
      this.SELECTOR_TOOLTIP = '.js-tooltip';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this.$copylink = this.$el.find(this.SELECTOR_COPYLINK);
      this.$copytext = this.$el.find(this.SELECTOR_COPYTEXT);
      this.$tooltip = this.$el.find(this.SELECTOR_TOOLTIP);

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onCopyLinkClick = this._onCopyLinkClick.bind(this);
      this._onLinkMouseleave = this._onLinkMouseleave.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$copylink.on('click', this._onCopyLinkClick);
      this.$copylink.on('mouseleave', this._onLinkMouseleave);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$copylink.off('click', this._onCopyLinkClick);
      this.$copylink.off('mouseleave', this._onLinkMouseleave);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Callback function onCopyLinkClick
     * @param e
     * @private
     */

  }, {
    key: "_onCopyLinkClick",
    value: function _onCopyLinkClick(e) {
      this.$copytext.select();

      try {
        var successful = document.execCommand('copy');
        var msg = successful ? 1 : 0;

        if (msg == 1) {
          this.$tooltip.addClass('is-clicked');
          this.$tooltip.attr('data-title', 'Link copied!');
        } else {
          this.$tooltip.attr('data-title', 'Press Ctrl+C to copy');
        }
      } catch (err) {
        this.$tooltip.attr('data-title', 'Sorry, unable to copy');
      }
    }
    /**
     * Callback function onLinkMouseleave
     * @private
     */

  }, {
    key: "_onLinkMouseleave",
    value: function _onLinkMouseleave() {
      this.$tooltip.attr('data-title', 'Copy link to clipboard');
      this.$tooltip.removeClass('is-clicked');
    }
  }]);

  return MCopyLink;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = MCopyLink;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],7:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

var _Utils = _interopRequireDefault(require('./../../../themes/p11/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MInput = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(MInput, _AppeaserComponentBas);

  var _super = _createSuper(MInput);

  /**
   * Constructor, will run before page loaded
   */
  function MInput() {
    var _this;

    _classCallCheck(this, MInput);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MInput, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(MInput.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_INPUT = '.js-a-input';
      this.SELECTOR_PLACEHOLDER = '.a-label:last-of-type';
      this.SELECTOR_TOGGLE_PASSWORD = '.toggle-password-state';
      this.SELECTOR_A_INPUT = '.a-input';
      this.SELECTOR_HELP_TIP = '.help-tip';
      this.SELECTOR_HELP_TIP_ERROR = '.help-tip.has-error';
      this.SELECTOR_MINIMUM_CHAR = '.min-chars-check';
      this.SELECTOR_UPPERCASE = '.uppercase-check';
      this.SELECTOR_NUMBER = '.number-check';
      this.SELECTOR_LOWERCASE = '.lowercase-check';
      this.SELECTOR_ERROR = '.has-error';
      this.SELECTOR_HELP_TEXT = '.help-text';
      this.SELECTOR_O_FORM = '.o-form';
      this.CLASS_IS_VISIBLE = 'is-visible';
      this.CLASS_RESET = 'passed has-error';
      this.CLASS_PASSWORD_TOGGLE = 'password-visible  password-hidden';
      this.CLASS_PASSED = 'passed';
      this.CLASS_ERROR = 'has-error';
      this.CLASS_PASSWORD = 'password';
      this.CLASS_INPUT_WITH_HELPTEXT = 'input-with-helptext';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this.$input = this.$el.find(this.SELECTOR_INPUT);
      this.$placeholder = this.$el.find(this.SELECTOR_PLACEHOLDER);
      this.placeholderVal = this.$placeholder.text();
      this.hasBeenFocused = false;
      this.$togglePasswordField = this.$el.find(this.SELECTOR_TOGGLE_PASSWORD);
      this.$password = this.$el.hasClass(this.CLASS_PASSWORD);
      this.$helpText = this.$el.find(this.SELECTOR_HELP_TEXT);
      this.$form = this.$el.parents(this.SELECTOR_O_FORM);

      if (this.$input.length && this.$input.val()) {
        this.$el.addClass(_Enums.default.CLASS.IS_FILLED);
      }

      if (this.$el.data('validation-match-field')) {
        this.$matchField = $('#' + this.$el.data('validation-match-field') + ' ' + this.SELECTOR_INPUT);
      }

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onFocus = this._onFocus.bind(this);
      this._onBlur = this._onBlur.bind(this);
      this._onInvalid = this._onInvalid.bind(this);
      this._togglePasswordState = this._togglePasswordState.bind(this);
      this._onSubmit = this._onSubmit.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.ACTION.SET_INPUT_ERROR_MESSAGE, this._onSetErrorMessage);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.ACTION.SET_INPUT_ERROR_MESSAGE, this._onSetErrorMessage);
      this.unsubscribe(_Enums.default.EVENT.ON_KEY_UP, this._onKeyUp);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$input.on('focus', this._onFocus);
      this.$input.on('blur', this._onBlur);
      this.$input.on('invalid', this._onInvalid);
      this.$togglePasswordField.on('click', this._togglePasswordState);
      this.$form.on('submit', this._onSubmit);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$input.off('focus', this._onFocus);
      this.$input.off('blur', this._onBlur);
      this.$input.off('invalid', this._onInvalid);
      this.$togglePasswordField.off('click', this._togglePasswordState);

      if (this.$matchField) {
        this.$matchField.off('blur', this._onBlur);
      }
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Callback for the event SET_INPUT_ERROR_MESSAGE
     * @param args Object with name of input and the error message {inputName: NAME_OF_INPUT, message: MESSAGE}
     * @private
     */

  }, {
    key: "_onSetErrorMessage",
    value: function _onSetErrorMessage(args) {
      if (this.$input.attr('name') == args.inputName) {
        this.$el.addClass(_Enums.default.CLASS.HAS_ERROR);

        this._displayErrorMessage(args.message);

        _Utils.default.Accessibility.show(this.$placeholder);
      }
    }
    /**
     * Callback for when input field is focused
     * @private
     */

  }, {
    key: "_onFocus",
    value: function _onFocus() {
      if (!this.hasBeenFocused) {
        //The first time a input for repeating password is focused, attach listener to the matching password input.
        if (this.$matchField) {
          this.$matchField.on('blur', this._onBlur);
        }

        this.hasBeenFocused = true;
      }

      if (this.$password && this.$helpText.length) {
        this.$helpText.addClass(this.CLASS_IS_VISIBLE);
        this.$el.addClass(this.CLASS_INPUT_WITH_HELPTEXT);

        if (this.$el.hasClass(this.CLASS_ERROR) && this.$helpText.find(this.SELECTOR_ERROR).length) {
          this.$helpText.find(this.SELECTOR_HELP_TIP).removeClass(this.CLASS_ERROR);
          this.$placeholder.text(this.$placeholder.data('placeholder'));
        }
      }

      this.subscribe(_Enums.default.EVENT.ON_KEY_DOWN, this._onKeyPress);
      this.subscribe(_Enums.default.EVENT.ON_KEY_UP, this._onKeyUp);
      this.$el.addClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
    }
    /**
     * Callback function when input field is blurred
     * @private
     */

  }, {
    key: "_onBlur",
    value: function _onBlur() {
      this.unsubscribe(_Enums.default.EVENT.ON_KEY_DOWN, this._onKeyPress);

      if (!this.$input.val() && !this.$input.attr('readonly')) {
        this.$el.removeClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
        this.$el.removeClass(_Enums.default.CLASS.IS_FILLED);
      } else if (this.$input.val()) {
        this.$el.removeClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
        this.$el.addClass(_Enums.default.CLASS.IS_FILLED);
      }

      if (this._checkIfInvalid()) {
        this.$el.addClass(_Enums.default.CLASS.HAS_ERROR);

        _Utils.default.Accessibility.show(this.$placeholder);
      } else {
        this.$el.removeClass(_Enums.default.CLASS.HAS_ERROR);

        _Utils.default.Accessibility.hide(this.$placeholder);
      }

      if (this.$helpText.length && this.$password && this.$el.find(this.SELECTOR_A_INPUT).val() === '') {
        this.$helpText.removeClass(this.CLASS_IS_VISIBLE);
        this.$helpText.find(this.SELECTOR_HELP_TIP).removeClass(this.CLASS_RESET);
      }
    }
  }, {
    key: "_onInvalid",
    value: function _onInvalid(event) {
      event.preventDefault();

      if (this._checkIfInvalid()) {
        this.$el.addClass(_Enums.default.CLASS.HAS_ERROR);

        _Utils.default.Accessibility.show(this.$placeholder);
      } else {
        this.$el.removeClass(_Enums.default.CLASS.HAS_ERROR);

        _Utils.default.Accessibility.hide(this.$placeholder);
      }
    }
    /**
     * Callback function when starts to type in an input field
     * @private
     */

  }, {
    key: "_onKeyPress",
    value: function _onKeyPress() {
      this.$el.removeClass(_Enums.default.CLASS.HAS_ERROR);

      _Utils.default.Accessibility.hide(this.$placeholder);
    }
  }, {
    key: "_onKeyUp",
    value: function _onKeyUp() {
      if (this.$password && this.$helpText.length) {
        this._passwordValidation(this.$el);
      }
    }
    /**
     * Checks if input has invalid state and if so provides the appropriate feedback message.
     * @return true if there is a validation error
     * @private
     */

  }, {
    key: "_checkIfInvalid",
    value: function _checkIfInvalid() {
      // REQUIRED
      if (this.$input[0].validity.valueMissing) {
        var errorText = this.$input.data('validation-required-text-below') ? this.$input.data('validation-required-text-below') : this.$input.data('validation-required-text');

        this._displayErrorMessage(errorText);
      } // MATCH ANOTHER FIELD
      else if (this.$matchField && this.$input.val() != this.$matchField.val()) {
          this.$input[0].setCustomValidity('error');

          this._displayErrorMessage(this.$input.data('validation-match-field-text'));
        } // MATCH A REGEX PATTERN OR TYPE
        else if (this.$input[0].validity.patternMismatch || this.$input[0].validity.typeMismatch) {
            this._displayErrorMessage(this.$input.data('validation-pattern-text'));
          } // MAX LENGTH
          else if (this.$input[0].validity.tooLong) {
              this._displayErrorMessage(this.$input.data('validation-maxlen-text'));
            } // MIN VALUE
            else if (this.$input[0].validity.rangeUnderflow) {
                this._displayErrorMessage(this.$input.data('validation-maxval-text'));
              } // MAX VALUE
              else if (this.$input[0].validity.rangeOverflow) {
                  this._displayErrorMessage(this.$input.data('validation-minval-text'));
                } // NO VALIDATION ERRORS FOUND
                else {
                    // Clear any custom validation
                    this.$input[0].setCustomValidity('');
                    this.$placeholder.text(this.placeholderVal);
                    if (this.placeholderVal.length < 1) _Utils.default.Accessibility.hide(this.$placeholder);
                    return false;
                  }

      return true;
    }
  }, {
    key: "_displayErrorMessage",
    value: function _displayErrorMessage(errormessage) {
      this.$placeholder.text(errormessage);

      _Utils.default.Accessibility.show(this.$placeholder);
    }
    /**
     * Checks the password according to eligibility criterion and adds class accordingly
     * @private
     */

  }, {
    key: "_passwordValidation",
    value: function _passwordValidation(obj) {
      var $minCharField = $(obj).find(this.SELECTOR_MINIMUM_CHAR),
          $upperCaseField = $(obj).find(this.SELECTOR_UPPERCASE),
          $numberField = $(obj).find(this.SELECTOR_NUMBER),
          $lowerCaseField = $(obj).find(this.SELECTOR_LOWERCASE),
          $inputVal = $(obj).find(this.SELECTOR_A_INPUT).val();
      $inputVal.length >= 8 ? $minCharField.removeClass(this.CLASS_ERROR).addClass(this.CLASS_PASSED) : $minCharField.removeClass(this.CLASS_PASSED);
      this._validateRegex($inputVal, _Enums.default.REGEX.UPPERCASE_CHAR) ? $upperCaseField.removeClass(this.CLASS_ERROR).addClass(this.CLASS_PASSED) : $upperCaseField.removeClass(this.CLASS_PASSED);
      this._validateRegex($inputVal, _Enums.default.REGEX.LOWERCASE_CHAR) ? $lowerCaseField.removeClass(this.CLASS_ERROR).addClass(this.CLASS_PASSED) : $lowerCaseField.removeClass(this.CLASS_PASSED);
      this._validateRegex($inputVal, _Enums.default.REGEX.DIGITS) ? $numberField.removeClass(this.CLASS_ERROR).addClass(this.CLASS_PASSED) : $numberField.removeClass(this.CLASS_PASSED);
    }
    /**
     * Validates the Regex and returns the result
     * @private
     */

  }, {
    key: "_validateRegex",
    value: function _validateRegex(val, reg) {
      return reg.test(val);
    }
    /**
     * Toggles password input field to text on each click on Show/Hide
     * @private
     */

  }, {
    key: "_togglePasswordState",
    value: function _togglePasswordState(e) {
      e.preventDefault();
      var $event = $(e.target),
          $passwordInput = $event.siblings(this.SELECTOR_A_INPUT);
      $event.toggleClass(this.CLASS_PASSWORD_TOGGLE);

      if ($passwordInput[0].type === 'password') {
        $passwordInput[0].type = 'text';
        $event.text($event.data('hide-text'));
      } else {
        $passwordInput[0].type = 'password';
        $event.text($event.data('show-text'));
      }
    }
    /**
     * Triggers on submit of form and handles the error state for password help text.
     * @private
     */

  }, {
    key: "_onSubmit",
    value: function _onSubmit() {
      if (this.$password) {
        if (this.$el.find(this.SELECTOR_HELP_TIP_ERROR).length) {
          this._displayErrorMessage(this.$el.find(this.SELECTOR_A_INPUT).data('password-error-text'));
        }
      }
    }
  }]);

  return MInput;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = MInput;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66,"./../../../themes/p11/utils.js":113}],8:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

var _Utils = _interopRequireDefault(require('./../../../themes/p11/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MLinkToggle = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(MLinkToggle, _AppeaserComponentBas);

  var _super = _createSuper(MLinkToggle);

  /**
   * Constructor, will run before page loaded
   */
  function MLinkToggle() {
    var _this;

    _classCallCheck(this, MLinkToggle);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MLinkToggle, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(MLinkToggle.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_LINK = '.js-a-link';
      this.LINK_TOGGLE_BLOCK = '.m-link-toggle-block';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this.$link = this.$el.find(this.SELECTOR_LINK);
      this.$linkToggleBLock = this.$el.find(this.LINK_TOGGLE_BLOCK);

      this._attachSubscribers();

      this._attachDOMListeners();

      if (!this.$el.hasClass(_Enums.default.CLASS.IS_VISIBLE_STATE)) {
        _Utils.default.Accessibility.hide(this.$linkToggleBLock.find(_Enums.default.SELECTOR.FOCUSABLE_AREAS));

        _Utils.default.Accessibility.preventFocus(this.$linkToggleBLock.find(_Enums.default.SELECTOR.FOCUSABLE_AREAS));
      }
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onClick = this._onClick.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$link.on('click', this._onClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$link.off('click', this._onClick);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * @param event - standard JS event listener param.
     * @private
     */

  }, {
    key: "_onClick",
    value: function _onClick(event) {
      event.preventDefault();
      this.$el.toggleClass(_Enums.default.CLASS.IS_VISIBLE_STATE);

      if (this.$el.hasClass(_Enums.default.CLASS.IS_VISIBLE_STATE)) {
        _Utils.default.Accessibility.show(this.$linkToggleBLock.find(_Enums.default.SELECTOR.FOCUSABLE_AREAS));

        _Utils.default.Accessibility.allowFocus(this.$linkToggleBLock.find(_Enums.default.SELECTOR.FOCUSABLE_AREAS));
      } else {
        _Utils.default.Accessibility.hide(this.$linkToggleBLock.find(_Enums.default.SELECTOR.FOCUSABLE_AREAS));

        _Utils.default.Accessibility.preventFocus(this.$linkToggleBLock.find(_Enums.default.SELECTOR.FOCUSABLE_AREAS));
      }
    }
  }]);

  return MLinkToggle;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = MLinkToggle;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66,"./../../../themes/p11/utils.js":113}],9:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MOutOfStockCart = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(MOutOfStockCart, _AppeaserComponentBas);

  var _super = _createSuper(MOutOfStockCart);

  /**
   * Constructor, will run before page loaded
   */
  function MOutOfStockCart() {
    var _this;

    _classCallCheck(this, MOutOfStockCart);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();

    _this._jQueryScopeBinding();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MOutOfStockCart, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      this._detachMQHandlers();

      _get(_getPrototypeOf(MOutOfStockCart.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_A_OVERLAY = '.a-overlay';
      this.SELECTOR_A_ICON_CLOSE = '.a-icon-close';
      this.CLASS_IS_VISIBLE = 'is-visible';
      this.CLASS_IS_STOCK_OVERLAY = 'is-stock-overlay';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$window = $(window);
      this.$aOverlay = $(this.SELECTOR_A_OVERLAY);
      this.$closeOutOfStock = this.$el.find(this.SELECTOR_A_ICON_CLOSE);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._showOverlay = this._showOverlay.bind(this);
      this._onCloseIconClick = this._onCloseIconClick.bind(this);
      this._hideOverlay = this._hideOverlay.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_PRODUCT_OUT_OF_STOCK, this._onProductOutOfStock);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_PRODUCT_OUT_OF_STOCK, this._onProductOutOfStock);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$closeOutOfStock.on('click', this._onCloseIconClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$closeOutOfStock.off('click', this._onCloseIconClick);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_onProductOutOfStock",
    value: function _onProductOutOfStock(data) {
      this._showOverlay();

      this.$el.addClass(this.CLASS_IS_VISIBLE);
      this.$el.find('.a-paragraph').text(data.msg);
    }
  }, {
    key: "_showOverlay",
    value: function _showOverlay() {
      this.publish(_Enums.default.ACTION.SHOW_OVERLAY);
      this.$aOverlay.addClass(this.CLASS_IS_STOCK_OVERLAY);
    }
  }, {
    key: "_hideOverlay",
    value: function _hideOverlay() {
      this.publish(_Enums.default.ACTION.HIDE_OVERLAY);
      this.$aOverlay.removeClass(this.CLASS_IS_STOCK_OVERLAY);
    }
  }, {
    key: "_onCloseIconClick",
    value: function _onCloseIconClick() {
      this._hideOverlay();

      this.$el.removeClass(this.CLASS_IS_VISIBLE);
    }
  }]);

  return MOutOfStockCart;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = MOutOfStockCart;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],10:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MProductImage = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(MProductImage, _AppeaserComponentBas);

  var _super = _createSuper(MProductImage);

  /**
   * Constructor, will run before page loaded
   */
  function MProductImage() {
    var _this;

    _classCallCheck(this, MProductImage);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    _this.subscribe(_Enums.default.ACTION.ON_OLAPIC_NO_MEDIA_FETCHED, _this._onDOMReady);

    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MProductImage, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(MProductImage.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {}
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onClick = this._onClick.bind(this);
      this._onMouseDown = this._onMouseDown.bind(this);
      this._onMouseMove = this._onMouseMove.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.ACTION.ON_OLAPIC_NO_MEDIA_FETCHED, this._onDOMReady);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$el.on('mousedown', this._onMouseDown);
      this.$el.on('mousemove', this._onMouseMove);
      this.$el.on('mouseup', this._onClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$el.off('mousedown', this._onMouseDown);
      this.$el.off('mousemove', this._onMouseMove);
      this.$el.off('mouseup', this._onClick);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * On mouse down event
     * @private
     */

  }, {
    key: "_onMouseDown",
    value: function _onMouseDown() {
      this.isDragging = false;
    }
    /**
     * On mouse move listener to catch drag
     * @private
     */

  }, {
    key: "_onMouseMove",
    value: function _onMouseMove() {
      this.isDragging = true;
    }
    /**
     * @param event - standard JS event listener param.
     * @private
     */

  }, {
    key: "_onClick",
    value: function _onClick(event) {
      event.preventDefault();

      if (!this.isDragging) {
        this.publish(_Enums.default.ACTION.SHOW_ZOOMED_IMAGE, this.$el.attr('data-zoom-image-src'), event.currentTarget.src);
      }
    }
  }]);

  return MProductImage;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = MProductImage;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],11:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

var _Utils = _interopRequireDefault(require('./../../../themes/p11/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MProductMarkersCofs = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(MProductMarkersCofs, _AppeaserComponentBas);

  var _super = _createSuper(MProductMarkersCofs);

  /**
   * Constructor, will run before page loaded
   */
  function MProductMarkersCofs() {
    var _this;

    _classCallCheck(this, MProductMarkersCofs);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MProductMarkersCofs, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(MProductMarkersCofs.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_CLOSE = '.a-icon-close';
      this.SELECTOR_PROMO_INFOBOX = '.promo-infobox';
      this.SELECTOR_PROMO_ICON = '.promo-marker';
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$closeElement = this.$el.find(this.SELECTOR_CLOSE);
      this.$promoInfoboxElement = this.$el.find(this.SELECTOR_PROMO_INFOBOX);
      this.$promoIconElement = this.$el.find(this.SELECTOR_PROMO_ICON);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._close = this._close.bind(this);
      this._onPromoIconClick = this._onPromoIconClick.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$closeElement.on('click', this._close);
      this.$promoIconElement.on('click', this._onPromoIconClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$closeElement.off('click', this._close);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Close the Promo Infobox popup
     * @param e
     * @private
     */

  }, {
    key: "_close",
    value: function _close(e) {
      e.stopPropagation();
      this.$promoInfoboxElement.removeClass(_Enums.default.CLASS.IS_OPEN_STATE);
    }
    /**
     * This function open promo info box for mobile and tablet
     * @param e
     * @private
     */

  }, {
    key: "_onPromoIconClick",
    value: function _onPromoIconClick(e) {
      if (Modernizr.mq(_Enums.default.MQ.MOBILE_AND_TABLET_RANGE) && this.$promoInfoboxElement.length > 0) {
        this.$promoInfoboxElement.toggleClass(_Enums.default.CLASS.IS_OPEN_STATE);
      }
    }
  }]);

  return MProductMarkersCofs;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = MProductMarkersCofs;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66,"./../../../themes/p11/utils.js":113}],12:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MProductMarkers = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(MProductMarkers, _AppeaserComponentBas);

  var _super = _createSuper(MProductMarkers);

  /**
   * Constructor, will run before page loaded
   */
  function MProductMarkers() {
    var _this;

    _classCallCheck(this, MProductMarkers);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MProductMarkers, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(MProductMarkers.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_CLOSE = '.a-icon-global-close';
      this.SELECTOR_PROMO_INFOBOX = '.promo-infobox';
      this.SELECTOR_PROMO_ICON = '.promo-marker';
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$closeElement = this.$el.find(this.SELECTOR_CLOSE);
      this.$promoInfoboxElement = this.$el.find(this.SELECTOR_PROMO_INFOBOX);
      this.$promoIconElement = this.$el.find(this.SELECTOR_PROMO_ICON);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._close = this._close.bind(this);
      this._onPromoIconClick = this._onPromoIconClick.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$closeElement.on('click', this._close);
      this.$promoIconElement.on('click', this._onPromoIconClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$closeElement = this.$el.find(this.SELECTOR_CLOSE);
      this.$closeElement.off('click', this._close);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Close the Promo Infobox popup
     * @param e
     * @private
     */

  }, {
    key: "_close",
    value: function _close(e) {
      e.stopPropagation();
      this.$promoInfoboxElement.removeClass(_Enums.default.CLASS.IS_OPEN_STATE);
    }
    /**
     * This function open promo info box for mobile and tablet
     * @param e
     * @private
     */

  }, {
    key: "_onPromoIconClick",
    value: function _onPromoIconClick(e) {
      if (Modernizr.mq(_Enums.default.MQ.MOBILE_AND_TABLET_RANGE) && this.$promoInfoboxElement.length > 0) {
        this.$promoInfoboxElement.toggleClass(_Enums.default.CLASS.IS_OPEN_STATE);
      }
    }
  }]);

  return MProductMarkers;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = MProductMarkers;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],13:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

var _Utils = _interopRequireDefault(require('./../../../themes/p11/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MRadioButtonSelector = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(MRadioButtonSelector, _AppeaserComponentBas);

  var _super = _createSuper(MRadioButtonSelector);

  /**
   * Constructor, will run before page loaded
   */
  function MRadioButtonSelector() {
    var _this;

    _classCallCheck(this, MRadioButtonSelector);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MRadioButtonSelector, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(MRadioButtonSelector.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SHOW_ANIMATION_DELAY = 20;
      this.HIDE_ANIMATION_DELAY = 500;
      this.SELECTOR_RADIO_BUTTON = '.a-radio-button';
      this.SELECTOR_CUSTOM_RADIO_BUTTONS = '.custom-radio, .label-text';
      this.CLASS_SHOW = 'show';
      this.CLASS_FADE_IN = 'fade-in';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Caching DOM elements for performance
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      var _this2 = this;

      this.$radioButtons = this.$el.find(this.SELECTOR_CUSTOM_RADIO_BUTTONS);
      this.toggleElements = [];
      this.$radioButtons.each(function (index, element) {
        _this2.toggleElements.push($($(element).siblings(_this2.SELECTOR_RADIO_BUTTON).data('toggle')));
      });
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onRadioButtonClick = this._onRadioButtonClick.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$radioButtons.on('click', this._onRadioButtonClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$radioButtons.off('click', this._onRadioButtonClick);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_onRadioButtonClick",
    value: function _onRadioButtonClick(event) {
      var _this3 = this;

      var $target = $(event.currentTarget),
          $currentRadio = $target.siblings(this.SELECTOR_RADIO_BUTTON);

      if (!$currentRadio.prop('disabled')) {
        this.toggleElements.forEach(function (element) {
          element.removeClass(_this3.CLASS_SHOW).removeClass(_this3.CLASS_FADE_IN);
        });
        var $elementToShow = $($currentRadio.data('toggle'));
        $elementToShow.addClass(this.CLASS_SHOW);

        _Utils.default.Accessibility.show($elementToShow);

        _Utils.default.Accessibility.hide($elementToShow.siblings());

        setTimeout(function () {
          $elementToShow.addClass(_this3.CLASS_FADE_IN);
        }, this.SHOW_ANIMATION_DELAY);
      }
    }
  }]);

  return MRadioButtonSelector;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = MRadioButtonSelector;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66,"./../../../themes/p11/utils.js":113}],14:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MSwatches = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(MSwatches, _AppeaserComponentBas);

  var _super = _createSuper(MSwatches);

  /**
   * Constructor, will run before page loaded
   */
  function MSwatches() {
    var _this;

    _classCallCheck(this, MSwatches);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();

    _this._jQueryScopeBinding();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MSwatches, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(MSwatches.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      //SELECTORS
      this.SELECTOR_SWATCH = '.js-swatch';
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onSwatchClick = this._onSwatchClick.bind(this);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady'); //ELEMENTS


      this.$swatch = this.$el.find(this.SELECTOR_SWATCH);

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$swatch.on('click', this._onSwatchClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$swatch.off('click', this._onSwatchClick);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_onSwatchClick",
    value: function _onSwatchClick(e) {
      var $target = $(e.currentTarget);

      if (!$target.hasClass(_Enums.default.CLASS.IS_DISABLED_STATE)) {
        this.$swatch.removeClass(_Enums.default.CLASS.IS_SELECTED);
        $target.addClass(_Enums.default.CLASS.IS_SELECTED);
      }
    }
  }]);

  return MSwatches;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = MSwatches;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],15:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

var _Utils = _interopRequireDefault(require('./../../../themes/p11/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MTablist = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(MTablist, _AppeaserComponentBas);

  var _super = _createSuper(MTablist);

  /**
   * Constructor, will run before page loaded
   */
  function MTablist() {
    var _this;

    _classCallCheck(this, MTablist);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MTablist, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(MTablist.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_TABLIST_CONTENT = '.tablist-content';
      this.SELECTOR_CONTENT = '.content';
      this.SELECTOR_TAB = 'li';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      var connectionID = this.$el.data('tablist-for');
      this.$listItems = this.$el.find(this.SELECTOR_TAB);
      this.$tablistContentBox = $("".concat(this.SELECTOR_TABLIST_CONTENT, "[data-content-for=\"").concat(connectionID, "\"]"));

      _Utils.default.Accessibility.allowFocus(this.$listItems);

      this._onPageloadShowActiveTabContent();

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onListItemClick = this._onListItemClick.bind(this);
      this._onKeystrokeEnter = this._onKeystrokeEnter.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$listItems.on('click', this._onListItemClick);
      this.$listItems.on('keydown', this._onKeystrokeEnter);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$listItems.off('click', this._onListItemClick);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * @param e - standard JS event param.
     * @private
     */

  }, {
    key: "_onListItemClick",
    value: function _onListItemClick(e) {
      e.preventDefault();
      var $currentTarget = $(e.currentTarget);

      this._toggleTabs($currentTarget.attr('data-toggle'));

      $currentTarget.addClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
    }
  }, {
    key: "_onKeystrokeEnter",
    value: function _onKeystrokeEnter(e) {
      if (e.key.match(_Enums.default.KEYSTROKE.ENTER)) {
        e.preventDefault();

        this._onListItemClick(e);
      }
    }
    /**
     * Shows active tabs
     * @param id
     * @private
     */

  }, {
    key: "_toggleTabs",
    value: function _toggleTabs(id) {
      this.$listItems.removeClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
      this.$tablistContentBox.find(this.SELECTOR_CONTENT).removeClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
      this.$tablistContentBox.find(id).addClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
    }
    /**
     * Sets active tablist on pageload based on browser url hashtag
     * @private
     */

  }, {
    key: "_onPageloadShowActiveTabContent",
    value: function _onPageloadShowActiveTabContent() {
      var hashTag = location.hash;

      if (hashTag !== '') {
        var $activeTab = this.$el.find(this.SELECTOR_TAB + '[data-toggle="' + hashTag + '"]');

        if ($activeTab.length) {
          this._toggleTabs(hashTag);

          $activeTab.addClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
        }
      }
    }
  }]);

  return MTablist;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = MTablist;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66,"./../../../themes/p11/utils.js":113}],16:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OAddElement = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OAddElement, _AppeaserComponentBas);

  var _super = _createSuper(OAddElement);

  /**
   * Constructor, will run before page loaded
   */
  function OAddElement() {
    var _this;

    _classCallCheck(this, OAddElement);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OAddElement, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OAddElement.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_ADD_ELEMENT_BUTTON = '.o-add-element-button';
      this.SELECTOR_EDIT_BLOCK = '.edit-block';
      this.SELECTOR_CANCEL = '.js-cancel';
      this.SELECTOR_INPUT = '.a-input';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this.$addButton = this.$el.find(this.SELECTOR_ADD_ELEMENT_BUTTON);
      this.$editBlock = this.$el.find(this.SELECTOR_EDIT_BLOCK);
      this.$inputs = this.$el.find(this.SELECTOR_INPUT);

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onClickAddNewElement = this._onClickAddNewElement.bind(this);
      this._onClickCancel = this._onClickCancel.bind(this);
      this._onRadioClicked = this._onRadioClicked.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.ACTION.HIDE_ADDRESS_BOX_ADD, this._close);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.ACTION.HIDE_ADDRESS_BOX_ADD, this._close);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$addButton.on('click', this._onClickAddNewElement);
      this.$el.on('click', this.SELECTOR_CANCEL, this._onClickCancel);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$addButton.on('click', this._onClickAddNewElement);
      this.$el.off('click', this.SELECTOR_CANCEL, this._onClickCancel);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_onClickAddNewElement",
    value: function _onClickAddNewElement(e) {
      this._open();
    }
  }, {
    key: "_onClickCancel",
    value: function _onClickCancel(e) {
      e.preventDefault();

      this._close();
    }
  }, {
    key: "_onRadioClicked",
    value: function _onRadioClicked() {
      if (!this.$addButton.prop('checked')) {
        this._close();
      }
    }
  }, {
    key: "_open",
    value: function _open() {
      this.$editBlock.slideDown().removeClass(_Enums.default.CLASS.IS_HIDDEN_STATE).addClass(_Enums.default.CLASS.IS_OPEN_STATE);
      this.$addButton.addClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
      this.$inputs.prop('disabled', false);
    }
  }, {
    key: "_close",
    value: function _close() {
      this.$editBlock.slideUp().removeClass(_Enums.default.CLASS.IS_OPEN_STATE).addClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
      this.$addButton.removeClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
      this.$inputs.attr('disabled', 'disabled');
    }
  }]);

  return OAddElement;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OAddElement;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],17:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

var _Utils = _interopRequireDefault(require('./../../../themes/p11/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OAddressBoxAdd = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OAddressBoxAdd, _AppeaserComponentBas);

  var _super = _createSuper(OAddressBoxAdd);

  /**
   * Constructor, will run before page loaded
   */
  function OAddressBoxAdd() {
    var _this;

    _classCallCheck(this, OAddressBoxAdd);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OAddressBoxAdd, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OAddressBoxAdd.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_ADD_ELEMENT_BUTTON = '.o-add-element-button';
      this.SELECTOR_CANCEL = '.js-cancel';
      this.SELECTOR_INPUT = '.a-input';
      this.SELECTOR_RADIO_BUTTON = '.a-radio-button';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this.$addRadio = this.$el.find(this.SELECTOR_ADD_ELEMENT_BUTTON);
      this.$radioButtons = this.$el.parent().find(this.SELECTOR_RADIO_BUTTON);
      this.$editBlock = this.$el.next();
      this.$inputs = this.$editBlock.find(this.SELECTOR_INPUT);

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onRadioChanged = this._onRadioChanged.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$radioButtons.on('change', this._onRadioChanged);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$radioButtons.off('change', this._onRadioChanged);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_onRadioChanged",
    value: function _onRadioChanged() {
      if (!this.$addRadio.prop('checked')) {
        this._close();
      } else {
        this._open();
      }
    }
  }, {
    key: "_open",
    value: function _open() {
      this.$editBlock.slideDown().removeClass(_Enums.default.CLASS.IS_HIDDEN_STATE).addClass(_Enums.default.CLASS.IS_OPEN_STATE);

      _Utils.default.Accessibility.show(this.$editBlock);

      this.$addRadio.addClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
      this.$inputs.prop('disabled', false);
    }
  }, {
    key: "_close",
    value: function _close() {
      this.$editBlock.slideUp().removeClass(_Enums.default.CLASS.IS_OPEN_STATE).addClass(_Enums.default.CLASS.IS_HIDDEN_STATE);

      _Utils.default.Accessibility.hide(this.$editBlock);

      this.$addRadio.removeClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
      this.$inputs.attr('disabled', 'disabled');
    }
  }]);

  return OAddressBoxAdd;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OAddressBoxAdd;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66,"./../../../themes/p11/utils.js":113}],18:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OAddressBoxEdit = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OAddressBoxEdit, _AppeaserComponentBas);

  var _super = _createSuper(OAddressBoxEdit);

  /**
   * Constructor, will run before page loaded
   */
  function OAddressBoxEdit() {
    var _this;

    _classCallCheck(this, OAddressBoxEdit);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();

    _this._jQueryScopeBinding();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OAddressBoxEdit, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OAddressBoxEdit.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_ADDRESS_EDIT = '.js-address-edit';
      this.SELECTOR_CANCEL_BUTTON = '.js-cancel';
      this.SELECTOR_INPUT = '.m-input input';
      this.SELECTOR_CTA = '.m-cta';
      this.SELECTOR_CTA_TEXT = '.m-cta .text';
      this.SELECTOR_ADDRESS_FORM = '.address-form';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this.$editBtn = this.$el.find(this.SELECTOR_ADDRESS_EDIT);
      this.$cancelBtn = this.$el.find(this.SELECTOR_CANCEL_BUTTON);
      this.$input = this.$el.find(this.SELECTOR_INPUT);
      this.$cta = this.$el.find(this.SELECTOR_CTA);
      this.$ctaTextSpan = this.$el.find(this.SELECTOR_CTA_TEXT);
      this.$addressForm = this.$el.find(this.SELECTOR_ADDRESS_FORM);
      this.isEditing = false;

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onEditBtnClick = this._onEditBtnClick.bind(this);
      this._onCancelBtnClick = this._onCancelBtnClick.bind(this);
      this._onInputInput = this._onInputInput.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$editBtn.on('click', this._onEditBtnClick);
      this.$cancelBtn.on('click', this._onCancelBtnClick);
      this.$input.on('input', this._onInputInput);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$editBtn.off('click', this._onEditBtnClick);
      this.$cancelBtn.off('click', this._onCancelBtnClick);
      this.$input.off('input', this._onInputInput);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * onInputFocus Callback Function
     * @private
     */

  }, {
    key: "_onInputInput",
    value: function _onInputInput() {
      if (this.$cta.hasClass(_Enums.default.CLASS.IS_HOVER_STATE)) {
        this.$cta.removeClass(_Enums.default.CLASS.IS_HOVER_STATE); //The current solution for setting the CTA text is storing the text values in data-attributes.
        //This solution might need some improvement.

        this.$ctaTextSpan.html(this.$cta.data('default-state-text'));
      }
    }
    /**
     * onEditAddress Callback Function
     * @param e
     * @private
     */

  }, {
    key: "_onEditBtnClick",
    value: function _onEditBtnClick(e) {
      e.preventDefault();

      if (!this.isEditing) {
        this.$el.wrap("<div class='edit-block is-open'></div>");
        this.isEditing = true;
        this.$addressForm.slideToggle();
      } else {
        this._onCancelBtnClick(e);
      }
    }
  }, {
    key: "_onCancelBtnClick",
    value: function _onCancelBtnClick(e) {
      e.preventDefault();

      if (this.isEditing) {
        this.$el.unwrap();
        this.$addressForm.slideToggle();
        this.isEditing = false;
      }
    }
  }]);

  return OAddressBoxEdit;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OAddressBoxEdit;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],19:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OBlogHero = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OBlogHero, _AppeaserComponentBas);

  var _super = _createSuper(OBlogHero);

  /**
   * Constructor, will run before page loaded
   */
  function OBlogHero() {
    var _this;

    _classCallCheck(this, OBlogHero);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OBlogHero, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachMQHandlers();

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OBlogHero.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_SLIDER = '.slider';
      this.CLASS_SLICK_ARROW_PREV = 'slick-arrow slick-prev';
      this.CLASS_SLICK_ARROW_NEXT = 'slick-arrow slick-next';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._initSlider();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._attachMQHandlers();
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$slider = this.$el.find(this.SELECTOR_SLIDER);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_PAGE_CONTENT_SHOW, this._refresh);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_PAGE_CONTENT_SHOW, this._refresh);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {}
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
    /**
     * Attach media query handlers
     * @private
     */

  }, {
    key: "_attachMQHandlers",
    value: function _attachMQHandlers() {}
    /**
     * Detach media query handlers
     * @private
     */

  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {}
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Initializes the slider
     * @private
     */

  }, {
    key: "_initSlider",
    value: function _initSlider() {
      this.$slider.slick({
        prevArrow: "<div class='" + this.CLASS_SLICK_ARROW_PREV + "'></div>",
        nextArrow: "<div class='" + this.CLASS_SLICK_ARROW_NEXT + "'></div>",
        speed: 300
      });
      this.slick = this.$slider.slick('getSlick');
    }
  }]);

  return OBlogHero;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OBlogHero;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],20:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

var _Utils = _interopRequireDefault(require('./../../../themes/p11/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OCartDiscountCode = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OCartDiscountCode, _AppeaserComponentBas);

  var _super = _createSuper(OCartDiscountCode);

  /**
   * Constructor, will run before page loaded
   */
  function OCartDiscountCode() {
    var _this;

    _classCallCheck(this, OCartDiscountCode);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OCartDiscountCode, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OCartDiscountCode.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.CLASS_HAS_ERROR = 'has-error';
      this.CLASS_HAS_DISCOUNT = 'has-discount';
      this.SELECTOR_TITLE = '.title';
      this.SELECTOR_REMOVE = '.remove';
      this.SELECTOR_M_INPUT = '.m-input';
      this.SELECTOR_DISCOUNT_CODE = '.discount-code .added-code';
      this.SELECTOR_CANCEL = '.cancel';
      this.CLASS_IS_DISABLED = 'is-disabled';
      this.SELECTOR_INPUT = '.a-input';
      this.SELECTOR_ADD_BUTTON = '.add';
      this.SELECTOR_BTN_GET_DISCOUNT = '.a-button';
      this.ERROR_MESSAGE_TIMEOUT = 4000;
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._disableDiscountButton();

      this._attachSubscribers();

      this._attachDOMListeners();

      if (!this.$el.hasClass(_Enums.default.CLASS.IS_ACTIVE_STATE)) {
        _Utils.default.Accessibility.hide(this.$el.find(this.SELECTOR_INPUT));

        _Utils.default.Accessibility.preventFocus(this.$el.find(this.SELECTOR_INPUT));

        _Utils.default.Accessibility.hide(this.$el.find(this.SELECTOR_ADD_BUTTON));

        _Utils.default.Accessibility.preventFocus(this.$el.find(this.SELECTOR_ADD_BUTTON));
      }
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._toggleOpenClose = this._toggleOpenClose.bind(this);
      this._remove = this._remove.bind(this);
      this._disableDiscountButton = this._disableDiscountButton.bind(this);
      this._onInputChange = this._onInputChange.bind(this);
      this._onAddDiscountErrorMsg = this._onAddDiscountErrorMsg.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_VOUCHER_CODE_ADDED, this._onVoucherCodeAdded);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_VOUCHER_CODE_ADDED, this._onVoucherCodeAdded);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$openClose.on('click', this._toggleOpenClose);
      this.$remove.on('click', this._remove);
      this.$input.on('input', this._onInputChange);
      this.$btnGetDiscount.on('click', this._onAddDiscountErrorMsg);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$openClose.off('click', this._toggleOpenClose);
      this.$remove.off('click', this._remove);
      this.$input.off('input', this._onInputChange);
      this.$btnGetDiscount.on('click', this._onAddDiscountErrorMsg);
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$openClose = this.$el.find(this.SELECTOR_TITLE + ',' + this.SELECTOR_CANCEL);
      this.$remove = this.$el.find(this.SELECTOR_REMOVE);
      this.$mInput = this.$el.find(this.SELECTOR_M_INPUT);
      this.$discountCode = this.$el.find(this.SELECTOR_DISCOUNT_CODE);
      this.$mAddBtn = this.$el.find(this.SELECTOR_ADD_BUTTON);
      this.$input = this.$el.find(this.SELECTOR_INPUT);
      this.$btnGetDiscount = this.$el.find(this.SELECTOR_BTN_GET_DISCOUNT);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * On removal of voucher code
     * @param e
     * @private
     */

  }, {
    key: "_remove",
    value: function _remove(e) {
      e.preventDefault();
      this.$mInput.removeClass(this.CLASS_HAS_ERROR);
      this.$el.removeClass(this.CLASS_HAS_DISCOUNT).removeClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
      this.$input.val('').removeClass(_Enums.default.CLASS.IS_FILLED);
    }
    /**
     * On addition of valid voucher code
     * @param code
     * @private
     */

  }, {
    key: "_onVoucherCodeAdded",
    value: function _onVoucherCodeAdded(code) {
      this.$mInput.removeClass(_Enums.default.CLASS.HAS_ERROR);
      this.$discountCode.text(code);
      this.$el.addClass(this.CLASS_HAS_DISCOUNT);
    }
    /**
     * Toggles the visibility of the voucher code form
     * @private
     */

  }, {
    key: "_toggleOpenClose",
    value: function _toggleOpenClose() {
      this.$el.toggleClass(_Enums.default.CLASS.IS_ACTIVE_STATE);

      if (this.$el.hasClass(_Enums.default.CLASS.IS_ACTIVE_STATE)) {
        this.publish(_Enums.default.EVENT.ON_DISCOUNT_SECTION_EXPAND);

        _Utils.default.Accessibility.clear(this.$el.find(this.SELECTOR_INPUT));

        _Utils.default.Accessibility.clear(this.$el.find(this.SELECTOR_ADD_BUTTON));

        this.$input.focus();
      } else {
        this.publish(_Enums.default.EVENT.ON_DISCOUNT_SECTION_COLLAPSE);

        _Utils.default.Accessibility.hide(this.$el.find(this.SELECTOR_INPUT));

        _Utils.default.Accessibility.preventFocus(this.$el.find(this.SELECTOR_INPUT));

        _Utils.default.Accessibility.hide(this.$el.find(this.SELECTOR_ADD_BUTTON));

        _Utils.default.Accessibility.preventFocus(this.$el.find(this.SELECTOR_ADD_BUTTON));
      }
    }
    /**
     * function for add discount error message
     * @private
     */

  }, {
    key: "_onAddDiscountErrorMsg",
    value: function _onAddDiscountErrorMsg(e) {
      var _this2 = this;

      if (this.$btnGetDiscount.hasClass(_Enums.default.CLASS.IS_DISABLED_STATE)) {
        e.preventDefault();
        e.stopPropagation();
        this.$el.addClass(_Enums.default.CLASS.HAS_ERROR);
        setTimeout(function () {
          _this2.$el.removeClass(_Enums.default.CLASS.HAS_ERROR);
        }, this.ERROR_MESSAGE_TIMEOUT);
      } else {
        this.$el.removeClass(_Enums.default.CLASS.HAS_ERROR);
      }
    }
    /**
     * Toggles enabled or disabled status of the add-discount button
     * @param e
     * @private
     */

  }, {
    key: "_onInputChange",
    value: function _onInputChange(e) {
      if ($(e.currentTarget).val().length > 0) {
        this.$mAddBtn.removeClass(this.CLASS_IS_DISABLED);

        if (!this.$btnGetDiscount.hasClass(_Enums.default.CLASS.IS_DISABLED_STATE)) {
          this.$el.removeClass(_Enums.default.CLASS.HAS_ERROR);
        }
      } else {
        this._disableDiscountButton();
      }
    }
    /**
     * Disables the add-discount button
     * @private
     */

  }, {
    key: "_disableDiscountButton",
    value: function _disableDiscountButton() {
      this.$mAddBtn.addClass(this.CLASS_IS_DISABLED);
    }
  }]);

  return OCartDiscountCode;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OCartDiscountCode;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66,"./../../../themes/p11/utils.js":113}],21:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OCheckout = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OCheckout, _AppeaserComponentBas);

  var _super = _createSuper(OCheckout);

  /**
   * Constructor, will run before page loaded
   */
  function OCheckout() {
    var _this;

    _classCallCheck(this, OCheckout);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OCheckout, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OCheckout.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      //SELECTORS
      this.SELECTOR_EDIT_LINK = '.edit';
      this.SELECTOR_CANCEL_LINK = '.cancel';
      this.SELECTOR_SECTION = '.section';
      this.SELECTOR_SCROLL_ELEMENT = 'body,html';
      this.SELECTOR_ACTIVE_SECTION = '.section:not(.' + _Enums.default.CLASS.IS_DISABLED_STATE + '):not(.' + _Enums.default.CLASS.IS_CLOSED_STATE + ')';
      this.SELECTOR_NOTIFICATION_CHECKBOX = '.o-delivery #delivery-sms .a-checkbox';
      this.SELECTOR_M_PHONE_INPUT = '.o-delivery .m-input-phone-number';
      this.SELECTOR_ABOUT_YOU_SECTION = '[data-section-name="o-about-you"]';
      this.SELECTOR_DELIVERY_SECTION = '[data-section-name="o-delivery"]';
      this.SELECTOR_TABLIST_LOGIN_TAB = '.tabsHeading .login-heading';
      this.SELECTOR_TABLIST_REGISTER_TAB = '.tabsHeading .register-heading';
      this.SELECTOR_TABLIST_CONTENT = '.tablist-content .content';
      this.CLASS_IS_CLOSED = 'is-closed';
      this.CLASS_IS_DISABLED = 'is-disabled';
      this.CLASS_IS_EDITABLE = 'is-editable';
      this.CLASS_IS_TICKED = 'ticked';
      this.SCROLL_DURATION = 500;
      this.SCROLL_DELAY = 0;
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Caching DOM elements for performance
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$editLink = this.$el.find(this.SELECTOR_EDIT_LINK);
      this.$cancelLink = this.$el.find(this.SELECTOR_CANCEL_LINK);
      this.$scrollElement = $(this.SELECTOR_SCROLL_ELEMENT);
      this.$notificationCheckbox = this.$el.find(this.SELECTOR_NOTIFICATION_CHECKBOX);
      this.$phoneInput = this.$el.find(this.SELECTOR_M_PHONE_INPUT);
      this.$aboutYouSection = this.$el.find(this.SELECTOR_ABOUT_YOU_SECTION);
      this.$deliverySection = this.$el.find(this.SELECTOR_DELIVERY_SECTION);
      this.$logintab = this.$el.find(this.SELECTOR_TABLIST_LOGIN_TAB);
      this.$registertab = this.$el.find(this.SELECTOR_TABLIST_REGISTER_TAB);
      this.$content = this.$el.find(this.SELECTOR_TABLIST_CONTENT);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onEditClick = this._onEditClick.bind(this);
      this._onCancelClick = this._onCancelClick.bind(this);
      this._onNotificationCheckboxTick = this._onNotificationCheckboxTick.bind(this);
      this._onLoginTabClick = this._onLoginTabClick.bind(this);
      this._onRegisterTabClick = this._onRegisterTabClick.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_CHECKOUT_SECTION_COMPLETED, this._onSectionCompleted);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_CHECKOUT_SECTION_COMPLETED, this._onSectionCompleted);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$editLink.on('click', this._onEditClick);
      this.$cancelLink.on('click', this._onCancelClick);
      this.$notificationCheckbox.on('change', this._onNotificationCheckboxTick);
      this.$logintab.on('click', this._onLoginTabClick);
      this.$registertab.on('click', this._onRegisterTabClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$editLink.off('click', this._onEditClick);
      this.$cancelLink.off('click', this._onCancelClick);
      this.$notificationCheckbox.off('change', this._onNotificationCheckboxTick);
      this.$logintab.off('click', this._onLoginTabClick);
      this.$registertab.off('click', this._onRegisterTabClick);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Edit link callback
     * Opens edit mode
     * @param event
     * @private
     */

  }, {
    key: "_onEditClick",
    value: function _onEditClick(e) {
      e.preventDefault();
      var $currentTarget = $(e.currentTarget),
          $currentSection = $currentTarget.closest(this.SELECTOR_SECTION);
      $currentSection.removeClass(this.CLASS_IS_CLOSED).removeClass(this.CLASS_IS_DISABLED).addClass(this.CLASS_IS_EDITABLE).nextAll(this.SELECTOR_SECTION).removeClass(this.CLASS_IS_CLOSED).removeClass(this.CLASS_IS_EDITABLE).addClass(this.CLASS_IS_DISABLED);
      this.publish(_Enums.default.EVENT.ON_CHECKOUT_SECTION_EDIT, $currentSection);
    }
    /**
     * Cancel link callback
     * Closes edit mode
     * @param e
     * @private
     */

  }, {
    key: "_onCancelClick",
    value: function _onCancelClick(e) {
      e.preventDefault();
      var $currentTarget = $(e.currentTarget),
          $currentSection = $currentTarget.closest(this.SELECTOR_SECTION),
          $nextSection = $currentSection.next(this.SELECTOR_SECTION);
      $currentSection.removeClass(this.CLASS_IS_DISABLED).removeClass(this.CLASS_IS_EDITABLE).addClass(this.CLASS_IS_CLOSED);
      $nextSection.removeClass(this.CLASS_IS_DISABLED);
      this.publish(_Enums.default.EVENT.ON_CHECKOUT_SECTION_CANCEL, $currentSection);
    }
    /**
     * On section completed
     * @private
     */

  }, {
    key: "_onSectionCompleted",
    value: function _onSectionCompleted() {
      var $activeSection = this.$el.find(this.SELECTOR_ACTIVE_SECTION),
          $nextSection = $activeSection.next();
      $activeSection.addClass(_Enums.default.CLASS.IS_CLOSED_STATE);
      $nextSection.removeClass(_Enums.default.CLASS.IS_DISABLED_STATE);

      this._scrollToSection($nextSection);
    }
  }, {
    key: "_onNotificationCheckboxTick",
    value: function _onNotificationCheckboxTick() {
      if (this.$notificationCheckbox.prop('checked')) {
        this.$phoneInput.addClass(this.CLASS_IS_TICKED);
      } else {
        this.$phoneInput.removeClass(this.CLASS_IS_TICKED);
      }
    }
    /**
     * Scrolls to a section.
     * @param $section
     * @private
     */

  }, {
    key: "_scrollToSection",
    value: function _scrollToSection($section) {
      this.$scrollElement.delay(this.SCROLL_DELAY).animate({
        scrollTop: $section.offset().top - this._getCurrentScrollOffset()
      }, this.SCROLL_DURATION);
    }
    /**
     * @returns {number} The correct scroll offset depending on breakpoint
     * @private
     */

  }, {
    key: "_getCurrentScrollOffset",
    value: function _getCurrentScrollOffset() {
      return 0;
    }
  }, {
    key: "_onLoginTabClick",
    value: function _onLoginTabClick() {
      this.$registertab.removeClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
      this.$content.removeClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
      this.$logintab.addClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
      this.$el.find('#login').addClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
    }
  }, {
    key: "_onRegisterTabClick",
    value: function _onRegisterTabClick() {
      this.$registertab.addClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
      this.$content.removeClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
      this.$logintab.removeClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
      this.$el.find('#register').addClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
    }
  }]);

  return OCheckout;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OCheckout;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],22:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

var _animateWithClass = _interopRequireDefault(require('./../../../js/utils/animate-with-class.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var oExample = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(oExample, _AppeaserComponentBas);

  var _super = _createSuper(oExample);

  /**
   * Constructor
   */
  function oExample() {
    var _this;

    _classCallCheck(this, oExample);

    _this = _super.apply(this, arguments);
    console.log('Example :: constructor', _this.$el); // Contants
    // ---------------------------------------
    // Constants should always be UPPERCASE.
    // Make sure to save strings such as selectors and classes up here,
    // so we can configure this class just by tweaking its constructor.

    _this.ANIMATE_CLASS = 'a-button-animate'; // Elements
    // ---------------------------------------
    // this.$el is your component scope that you get for free from componentLoader.
    // This is the DOM element with the "data-component" attribute set.
    // Always stick to your component scope.

    _this.$button = _this.$el.find('.js-button'); // note the .js- prefix!
    // Bindings
    // ---------------------------------------
    // Note they start with '_' indicating that they are "private" or "protected"
    // meaning its designed not to be accessible by outside.
    // This is just a notation for ourselves.

    _this._onButtonClick = _this._onButtonClick.bind(_assertThisInitialized(_this));
    _this._onAnimationDone = _this._onAnimationDone.bind(_assertThisInitialized(_this));
    _this._animateButton = _this._animateButton.bind(_assertThisInitialized(_this));
    _this._onEnterViewport = _this._onEnterViewport.bind(_assertThisInitialized(_this));
    _this._onExitViewport = _this._onExitViewport.bind(_assertThisInitialized(_this)); // Event listeners
    // ---------------------------------------
    // It's a good idea to only add the ones you really need and add additional ones later

    _this.$el.on('click', _this._onButtonClick); // Mediator subscriptions


    _this.subscribe(_Enums.default.ACTION.EXAMPLE, _this._onActionExample);

    _this.subscribe(_Enums.default.EVENT.ON_EXAMPLE, _this._onEventExample); // scrollMonitor
    // ---------------------------------------
    // If you need functionality to happen only when this component
    // is visible in the screen, such as an animation,
    // we use scrollMonitor to detect that.
    //
    // See: https://github.com/sakabako/scrollMonitor
    // Create a watcher with this context


    _this.scrollWatcher = scrollMonitor.create(_this.$el); // Pass the callbacks

    _this.scrollWatcher.enterViewport(_this._onEnterViewport);

    _this.scrollWatcher.exitViewport(_this._onExitViewport); // Media queries
    // ---------------------------------------
    // Say you want something specific to happen only when it reaches
    // an specific breakpoint, you can use enquire.js for this.
    //
    // See: http://wicky.nillia.ms/enquire.js/
    //
    // Note that deferSetup default to false.
    // If set to true, defers execution the setup function
    // until the media query is first matched. still triggered just once.
    //
    // Example of using enquire to register a callback on a "medium" media query match:


    _this.MQMediumHandler = {
      deferSetup: true,
      setup: _this._onMQMediumSetup,
      match: _this._onMQMediumMatch,
      unmatch: _this._onMQMediumUnmatch,
      destroy: _this._onMQMediumDestroy
    };
    enquire.register(_Enums.default.MQ.IS_DESKTOP, _this.MQMediumHandler);
    return _this;
  }
  /**
   * Animates the button to show the animWithClass functionality.
   */


  _createClass(oExample, [{
    key: "_animateButton",
    value: function _animateButton() {
      // animateWithClass (
      // 	el: the element to be animated,
      // 	name: the class that will cause the animation,
      // 	cb: the callback to run once its done,
      // 	nowait: should the callback run immediately even before the animation is done or not? (default false),
      // 	child: child element in case it's a child of 'el'
      // )
      (0, _animateWithClass.default)(this.$el, this.ANIMATE_CLASS, this._onAnimationDone);
    }
    /**
     * Callback for when the above animation is done.
     */

  }, {
    key: "_onAnimationDone",
    value: function _onAnimationDone() {
      alert('Done!');
    }
    /**
     * Callback to run any kind of setup just before the media query matches.
     * Triggered once immediately upon registration of the handler (unless defered).
     */

  }, {
    key: "_onMQMediumSetup",
    value: function _onMQMediumSetup() {
      // E.g:
      // Show a loading spinner?
      // Make an Ajax call?
      console.log('Example :: _onMQMediumSetup');
    }
    /**
     * Callback for when the media query is matched.
     * Triggered when the media query transitions
     * from an unmatched to a matched state.
     */

  }, {
    key: "_onMQMediumMatch",
    value: function _onMQMediumMatch() {
      // Add additional logic for this media query here
      // E.g some event additional listeners etc
      console.log('Example :: _onMQMediumMatch');
    }
    /**
     * Callback for when the media query exists and is not matched anymore.
     * If supplied, triggered when the media query transitions
     * from a matched state to an unmatched state.
     * Also may be called when handler is unregistered (if destroy is not available).
     */

  }, {
    key: "_onMQMediumUnmatch",
    value: function _onMQMediumUnmatch() {
      console.log('Example :: _onMQMediumUnmatch');
    }
    /**
     * Callback for when when handler is unregistered. Place cleanup code here.
     */

  }, {
    key: "_onMQMediumDestroy",
    value: function _onMQMediumDestroy() {
      console.log('Example :: _onMQMediumDestroy');
    }
    /**
     * Callback for when the button gets clicked so we can do stuff...
     */

  }, {
    key: "_onButtonClick",
    value: function _onButtonClick() {
      console.log('_onButtonClick!!');

      this._animateButton(); // Let's also publish an event to our componentLoader,
      // just because.


      this.publish(_Enums.default.EVENT.ON_EXAMPLE);
    }
    /**
     * onEventExample happens because...
     * @param  {Object} data Data passed with the event
     */

  }, {
    key: "_onEventExample",
    value: function _onEventExample(data) {
      // Somebody published an EVENT through the mediator,
      // this is the callback for it.
      console.log('Example :: _onEventExample', data);
    }
    /**
     * onActionExample happens because...
     * @param  {Object} data Data passed with the event
     */

  }, {
    key: "_onActionExample",
    value: function _onActionExample(data) {
      // Somebody published an ACTION through the mediator,
      // this is the callback for it.
      console.log('Example :: _onActionExample', data);
    }
    /**
     * onEnterViewport gets called when this component is visible in the viewport.
     */

  }, {
    key: "_onEnterViewport",
    value: function _onEnterViewport() {
      console.log('Example :: _onEnterViewport');
    }
    /**
     * onExitViewport gets called when this component is not visible in the viewport anymore.
     */

  }, {
    key: "_onExitViewport",
    value: function _onExitViewport() {
      console.log('Example :: _onExitViewport');
    }
    /**
     * Destructor
     */

  }, {
    key: "destroy",
    value: function destroy() {
      // Call our base component to be destroyed
      _get(_getPrototypeOf(oExample.prototype), "destroy", this).call(this); // Remove event listeners


      this.$el.off('click', this._onButtonClick);
      this.unsubscribe(_Enums.default.ACTION.EXAMPLE, this._onActionExample);
      this.unsubscribe(_Enums.default.EVENT.ON_EXAMPLE, this._onEventExample); // Destroy our watcher

      if (this.scrollWatcher) this.scrollWatcher.destroy();
      enquire.unregister(_Enums.default.MQ.IS_DESKTOP, this.MQMediumHandler);
    }
  }]);

  return oExample;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = oExample;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/utils/animate-with-class.js":60,"./../../../themes/p11/enums.js":66}],23:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OFilterBadges = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OFilterBadges, _AppeaserComponentBas);

  var _super = _createSuper(OFilterBadges);

  /**
   * Constructor, will run before page loaded
   */
  function OFilterBadges() {
    var _this;

    _classCallCheck(this, OFilterBadges);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OFilterBadges, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OFilterBadges.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.HANDLEBAR_SOURCE = '#m-filter-badge';
      this.SELECTOR_FILTER_BADGE = '.m-filter-badge';
      this.CLASS_IS_CATEGORY = 'is-category';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Caching DOM elements for performance
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$filterBadgeTemplate = $(this.HANDLEBAR_SOURCE).html();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onFilterBadgeClick = this._onFilterBadgeClick.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$el.on('click', this.SELECTOR_FILTER_BADGE, this._onFilterBadgeClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$el.off('click', this.SELECTOR_FILTER_BADGE, this._onFilterBadgeClick);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Callback for filter badge click
     * @param e
     * @private
     */

  }, {
    key: "_onFilterBadgeClick",
    value: function _onFilterBadgeClick(e) {
      var $target = $(e.currentTarget);

      if ($target.hasClass(this.CLASS_IS_CATEGORY)) {
        this.publish(_Enums.default.EVENT.ON_FILTER_BADGE_REMOVE, {
          clearAll: true
        });
      } else {
        this.publish(_Enums.default.EVENT.ON_FILTER_BADGE_REMOVE, {
          filterId: $target.attr('id').replace('badge-', '')
        });
      }
    }
  }]);

  return OFilterBadges;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OFilterBadges;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],24:[function(require,module,exports){
"use strict";

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

var _Utils = _interopRequireDefault(require('./../../../themes/p11/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OForm = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OForm, _AppeaserComponentBas);

  var _super = _createSuper(OForm);

  /**
   * Constructor
   */
  function OForm() {
    var _this;

    _classCallCheck(this, OForm);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();

    _this._jQueryScopeBinding();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OForm, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OForm.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      // CONSTANTS
      this.SELECTOR_FORM_BUTTON = 'button[type="submit"]';
      this.CLASS_IS_TOUCHED = 'is-touched';
      this.CLASS_NAV_BY_TAB = 'nav-by-tab';
      this.SELECTOR_TABINDEX = 'label[tabindex]';
      this.SELECTOR_ERROR_MESSAGE = '.m-error .has-error';
      this.SELECTOR_NAV_BY_TAB = '.nav-by-tab';
      this.SELECTOR_A_CHECKBOX = '.a-checkbox';
      this.SELECTOR_M_CHECKBOX = '.m-checkbox';
      this.SELECTOR_BODY = 'body';
      this.SELECTOR_ERROR_SECTION = '#errorBox, .m-error';
      this.SELECTOR_PLACEHOLDER = '.a-label:last-child';
      this.SELECTOR_CHECKBOX_ERROR_LABEL = '.a-label.js-a-input';
      this.SELECTOR_CUSTOM_RADIO = '.custom-radio';
      this.CLASS_FORM_DETAILS = 'o-form o-my-details';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this.notifyOnLeave = this.$el.data('notify-unsaved-changes');
      this.showGlobalErrorMessage = true;

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      _Utils.default.Accessibility.allowFocus(this.$el.find(this.SELECTOR_CUSTOM_RADIO).first());
    }
    /**
     * Caching DOM elements for performance
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$cta = this.$el.find(this.SELECTOR_FORM_BUTTON);
      this.$tabIndexes = this.$el.find(this.SELECTOR_TABINDEX);
      this.$checkboxes = this.$el.find(this.SELECTOR_A_CHECKBOX);
      this.$body = $(this.SELECTOR_BODY);
      this.$errorMessage = this.$el.find(this.SELECTOR_ERROR_MESSAGE);
      this.$errorSection = this.$el.find(this.SELECTOR_ERROR_SECTION);
      this.$radios = this.$el.find(this.SELECTOR_CUSTOM_RADIO);
      this.$window = $(window);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onSubmitClick = this._onSubmitClick.bind(this);
      this._onFormSubmit = this._onFormSubmit.bind(this);
      this._onKeyUp = this._onKeyUp.bind(this);
      this._onKeyDown = this._onKeyDown.bind(this);
      this._onReset = this._onReset.bind(this);
      this._checkSpaceBar = this._checkSpaceBar.bind(this);
      this._onCheckboxInputChange = this._onCheckboxInputChange.bind(this);
      this._showError = this._showError.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.ACTION.SET_FORM_ERROR_MESSAGE, this._setErrorMessage);
      this.subscribe(_Enums.default.EVENT.ON_PROFILE_RESET, this._clearGlobalErrorMessges);
      this.subscribe(_Enums.default.EVENT.ON_DETAILS_SAVED, this._clearGlobalErrorMessges);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.ACTION.SET_FORM_ERROR_MESSAGE, this._setErrorMessage);
      this.unsubscribe(_Enums.default.EVENT.ON_PROFILE_RESET, this._clearGlobalErrorMessges);
      this.unsubscribe(_Enums.default.EVENT.ON_DETAILS_SAVED, this._clearGlobalErrorMessges);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$cta.on('click', this._onSubmitClick);
      this.$el.on('submit', this._onFormSubmit);
      this.$el.on('keyup', this._onKeyUp);
      this.$el.on('reset', this._onReset);
      this.$checkboxes.on('change', this._onCheckboxInputChange);
      this.$tabIndexes.on('keydown', this._checkSpaceBar);
      this.$radios.on('keydown', this._onKeyDown);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$cta.off('click', this._onSubmitClick);
      this.$el.off('submit', this._onFormSubmit);
      this.$el.off('keyup', this._onKeyUp);
      this.$el.off('reset', this._onReset);
      this.$checkboxes.off('change', this._onCheckboxInputChange);
      this.$tabIndexes.off('keydown', this._checkSpaceBar);
      this.$radios.off('keydown', this._onKeyDown);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Removes error state of m-checkbox if the checkbox input is valid.
     * @param e
     */

  }, {
    key: "_onCheckboxInputChange",
    value: function _onCheckboxInputChange(e) {
      if (e.currentTarget.checkValidity()) {
        var checkbox = $(e.currentTarget).closest(this.SELECTOR_M_CHECKBOX);
        checkbox.removeClass(_Enums.default.CLASS.HAS_ERROR);

        _Utils.default.Accessibility.hide(checkbox.find(this.SELECTOR_CHECKBOX_ERROR_LABEL));
      }
    }
    /**
     * Checks if form is invalid on submit button click and if so takes an appropriate action
     * @private
     */

  }, {
    key: "_onSubmitClick",
    value: function _onSubmitClick(e) {
      e.preventDefault();
      $(e.currentTarget).closest('form').submit();
    }
  }, {
    key: "_onFormSubmit",
    value: function _onFormSubmit(e, forceSubmission) {
      var form = $(e.currentTarget);
      var self = this;

      if (form.data('manually-submit')) {
        $(window).off('beforeunload');

        if (!forceSubmission) {
          e.preventDefault();
          e.stopPropagation();
          this.publish(_Enums.default.EVENT.ON_FORM_SUBMISSION, e, form);
        }

        if (this.$el.closest("form").hasClass(this.CLASS_FORM_DETAILS)) {
          this.$window.scrollTop(0);
        }
      } else {
        this.publish(_Enums.default.ACTION.FORM_VALIDATION, form, function (isValid) {
          if (!isValid) {
            e.preventDefault();
            e.stopPropagation();
          } else {
            $(window).off('beforeunload');

            if (e !== null && _typeof($(e.currentTarget)) !== undefined && _typeof($(e.currentTarget).closest('form')) !== undefined && $(e.currentTarget).closest('form').action !== null) {
              var endUrl = $(e.currentTarget).closest('form').attr('action');
              var regex = new RegExp(/[a-z]*_[A-Z]*/i);
              var locale = window.location.pathname.match(regex);

              if (null === locale) {
                locale = 'en';
              }

              if (endUrl.indexOf('/register/newcustomer') !== -1) {
                e.preventDefault();
                var data = $(e.currentTarget).closest('form').serialize();
                var dataObject = JSON.parse('{"' + data.replace(/&/g, '","').replace(/=/g, '":"') + '"}', function (key, value) {
                  return key === '' ? value : decodeURIComponent(value);
                });

                if (dataObject.hmNewsSubscription) {
                  dataObject.hmNewsSubscription = true;
                }

                if (dataObject.termsAndConditions) {
                  dataObject.termsAndConditions = true;
                }

                $.ajax({
                  url: endUrl,
                  type: 'POST',
                  dataType: 'json',
                  contentType: 'application/json; charset=utf-8',
                  data: JSON.stringify(dataObject),
                  success: function success(tableData) {
                    if (tableData.redirect) {
                      window.location.href = '/' + locale + tableData.redirect;
                    } else if (tableData.errors) {
                      self._showError(tableData.errors);
                    }
                  }
                });
              }
            }
          }
        });
      }
    }
    /**
     * Check if the form is empty or filled
     * @private
     */

  }, {
    key: "_onKeyUp",
    value: function _onKeyUp() {
      this.$el.addClass(this.CLASS_IS_TOUCHED);

      if (this.notifyOnLeave) {
        $(window).on('beforeunload', this._onBeforeLeave);
      }

      this.$el.off('keyup', this._onKeyUp);
    }
  }, {
    key: "_onKeyDown",
    value: function _onKeyDown(event) {
      var $currentTarget = $(event.currentTarget),
          flag = false;
      var $customRadios = this.$el.find(this.SELECTOR_CUSTOM_RADIO);

      if (event.key.match(_Enums.default.KEYSTROKE.SPACEBAR) || event.key.match(_Enums.default.KEYSTROKE.ENTER)) {
        _Utils.default.Radio.setChecked(event.currentTarget, $customRadios);

        $currentTarget.trigger('click');
        flag = true;
      } else if (event.key.match(_Enums.default.KEYSTROKE.ARROW_RIGHT)) {
        _Utils.default.Radio.setCheckedToNextItem(event.currentTarget, $customRadios);

        flag = true;
      } else if (event.key.match(_Enums.default.KEYSTROKE.ARROW_LEFT)) {
        _Utils.default.Radio.setCheckedToPreviousItem(event.currentTarget, $customRadios);

        flag = true;
      } else if (event.key.match(_Enums.default.KEYSTROKE.ARROW_DOWN)) {
        _Utils.default.Radio.setCheckedToNextItem(event.currentTarget, $customRadios);

        flag = true;
      } else if (event.key.match(_Enums.default.KEYSTROKE.ARROW_UP)) {
        _Utils.default.Radio.setCheckedToPreviousItem(event.currentTarget, $customRadios);

        flag = true;
      }

      if (flag) {
        event.stopPropagation();
        event.preventDefault();
      }
    }
    /**
     * Adds one or more error messages to m-error.
     * @param args
     *
     * Use the following format:
     * {
     *      formId: (String) the id of the form
     *      messages: (Array) an array with the messages to display
     * }
     *
     * @private
     */

  }, {
    key: "_setErrorMessage",
    value: function _setErrorMessage(args) {
      if (this.$el.is('#' + args.formId) && args.messages.length) {
        //Sanitize the messages.
        if (this._isStringValid(args.messages.join())) {
          //Inject the messages.
          this.$errorMessage.html(args.messages.join('<br>')); //Display the messages.

          this.$errorSection.removeClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
        }
      }
    }
    /**
     * Clears the global error messages at the top of the form.
     * @private
     */

  }, {
    key: "_clearGlobalErrorMessges",
    value: function _clearGlobalErrorMessges() {
      this.$errorMessage.html('');
      this.$errorSection.addClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
    }
    /**
     * Validates a given string. This is done by making sure it does not contain any illegal characters.
     * @param str
     * @returns {boolean}
     * @private
     */

  }, {
    key: "_isStringValid",
    value: function _isStringValid(str) {
      return str.match(_Enums.default.REGEX.PLAIN_TEXT) === null;
    }
    /**
     * On form reset handler
     * @private
     */

  }, {
    key: "_onReset",
    value: function _onReset() {
      this.$el.removeClass(this.CLASS_IS_TOUCHED);
      $(window).off('beforeunload', this._onBeforeLeave);
      this.$el.on('keyup', this._onKeyUp);
    }
  }, {
    key: "_onBeforeLeave",
    value: function _onBeforeLeave(e) {
      e.returnValue = 'Your changes will be lost if you close this section. to save your information click on the save button before closing';
      return e.returnValue;
    }
    /**
     * function used on label[tabindex] to check if space is pressed, it also tags the element by nav-by-tab class for proper highlighting
     * @param e
     * @private
     */

  }, {
    key: "_checkSpaceBar",
    value: function _checkSpaceBar(e) {
      var $currentTarget = $(e.currentTarget);
      $(this.SELECTOR_NAV_BY_TAB).removeClass(this.CLASS_NAV_BY_TAB); // clear all selected

      $currentTarget.addClass(this.CLASS_NAV_BY_TAB); // mark this since we navigated here by tab

      if (e.key.match(_Enums.default.KEYSTROKE.SPACEBAR)) {
        e.preventDefault();
        $currentTarget.trigger('click');
      }
    }
    /** shows error message from server after successful ajax post
     * @param err
     * @private
     * */

  }, {
    key: "_showError",
    value: function _showError(err) {
      this.$errorSection.removeClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
      this.$errorMessage.text(err.registerForm.email);
    }
  }]);

  return OForm;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OForm;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66,"./../../../themes/p11/utils.js":113}],25:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

var _animateWithClass = _interopRequireDefault(require('./../../../js/utils/animate-with-class.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OGridController = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OGridController, _AppeaserComponentBas);

  var _super = _createSuper(OGridController);

  /**
   * Constructor, will run before page loaded
   */
  function OGridController() {
    var _this;

    _classCallCheck(this, OGridController);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();

    _this._jQueryScopeBinding();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OGridController, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OGridController.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {}
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      if (this.$el.hasClass('overlay')) {
        this._cacheDOMElements();

        this._attachDOMListeners();

        this.originalPosition = parseInt(this.$teaser.css('margin-top'));
        this.scrollTop = this.$window.scrollTop();

        if (this.$teaser.length) {
          this._checkPosition(); // make sure everything is initialized


          this._onResize();
        }
      }

      this._attachSubscribers();
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$teaser = this.$el.find('.m-free-tile');
      this.scrollTop = 0;
      this.$window = $(window);

      if (this.$teaser.length) {
        this.teaser_offset = this.$teaser.offset().top;
        this.position = this.$window.height() - this.teaser_offset;
        this.$holder = this.$teaser.parent();
      }
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onScroll = this._onScroll.bind(this);
      this._onResize = this._onResize.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      if (typeof this.$teaser !== 'undefined' && this.$teaser.length) {
        this.$window.on('scroll resize', this._onScroll);
        this.$window.on('resize', this._onResize);
      }
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      if (typeof this.$teaser !== 'undefined' && this.$teaser.length) {
        this.$window.off('scroll', this._onScroll);
        this.$window.off('resize', this._onResize);
      }
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * CheckPosition of element on screen according to how we scroll (parallalax)
     * @private
     */

  }, {
    key: "_checkPosition",
    value: function _checkPosition() {
      var newPos = this.originalPosition + this.scrollTop - this.position - 20;
      var newValue = 0; // check if we're close to the actual element

      if (this.scrollTop > 0) {
        newValue = newPos > 0 ? 0 : newPos * 0.6; // if not make sure we reposition even if we scroll fast
      } else {
        newValue = newPos < this.originalPosition ? this.originalPosition : newPos > 0 ? 0 : newPos * 0.6;
      }

      this._rePosition(newValue);
    }
    /**
     * Reposition the element
     * @private
     */

  }, {
    key: "_rePosition",
    value: function _rePosition(value) {
      // set new position
      if (parseInt(this.$teaser.css('margin-top')) != value) {
        this.$teaser.css('margin-top', value);
      }

      if (value < 0) this.$teaser.addClass('is-animating');else this.$teaser.removeClass('is-animating');
    }
    /**
     * Listen to the onScroll event
     * @private
     */

  }, {
    key: "_onScroll",
    value: function _onScroll() {
      this.scrollTop = this.$window.scrollTop();

      if (this.scrollTop < this.teaser_offset) {
        this._checkPosition();
      } else {
        this._rePosition(0);
      }
    }
  }, {
    key: "_onResize",
    value: function _onResize() {
      this.$holder.height(this.$teaser.height());
    }
  }]);

  return OGridController;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OGridController;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../js/utils/animate-with-class.js":60,"./../../../themes/p11/enums.js":66}],26:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OHomeDelivery = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OHomeDelivery, _AppeaserComponentBas);

  var _super = _createSuper(OHomeDelivery);

  /**
   * Constructor, will run before page loaded
   */
  function OHomeDelivery() {
    var _this;

    _classCallCheck(this, OHomeDelivery);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OHomeDelivery, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OHomeDelivery.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_CHANGE_ADDRESS_LINK = '.change-address';
      this.SELECTOR_CANCEL_CHANGE_ADDRESS_LINK = '.js-cancel-change';
      this.SELECTOR_ADD_ADDRESS_BUTTON = '.o-add-element-button';
      this.SELECTOR_NEW_ADDRESS_RADIO = '.o-address-box-add .a-radio-button';
      this.SELECTOR_ADDRESS_RADIO = '.o-account-box .a-radio-button';
      this.SELECTOR_CHANGE_ADDRESS_SECTION = '.delivery-change-address-section';
      this.SELECTOR_SAVE_NEW_ADDRESS_BUTTON = this.SELECTOR_CHANGE_ADDRESS_SECTION + ' .a-button.is-primary';
      this.SELECTOR_TEXT_INPUT = '.m-input';
      this.CLASS_IS_CHANGING_ADDRESS = 'is-changing-address';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Caching DOM elements for performance
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$changeAddressLink = this.$el.find(this.SELECTOR_CHANGE_ADDRESS_LINK);
      this.$cancelLink = this.$el.find(this.SELECTOR_CANCEL_CHANGE_ADDRESS_LINK);
      this.$addAddressButton = this.$el.find(this.SELECTOR_ADD_ADDRESS_BUTTON);
      this.$newAddressRadio = this.$el.find(this.SELECTOR_NEW_ADDRESS_RADIO);
      this.$addressRadio = this.$el.find(this.SELECTOR_ADDRESS_RADIO);
      this.$saveNewAddressBtn = this.$el.find(this.SELECTOR_SAVE_NEW_ADDRESS_BUTTON);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onChangeAddressLinkClick = this._onChangeAddressLinkClick.bind(this);
      this._onCancelLinkClick = this._onCancelLinkClick.bind(this);
      this._onAddressButtonClick = this._onAddressButtonClick.bind(this);
      this._onAddressRadioChange = this._onAddressRadioChange.bind(this);
      this._onSaveAddress = this._onSaveAddress.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$changeAddressLink.on('click', this._onChangeAddressLinkClick);
      this.$cancelLink.on('click', this._onCancelLinkClick);
      this.$addAddressButton.on('click', this._onAddressButtonClick);
      this.$addressRadio.on('change', this._onAddressRadioChange);
      this.$saveNewAddressBtn.on('click', this._onSaveAddress);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$changeAddressLink.off('click', this._onChangeAddressLinkClick);
      this.$cancelLink.off('click', this._onCancelLinkClick);
      this.$addAddressButton.off('click', this._onAddressButtonClick);
      this.$addressRadio.off('change', this._onAddressRadioChange);
      this.$saveNewAddressBtn.off('click', this._onSaveAddress);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Callback for when user wants to save a address.
     */

  }, {
    key: "_onSaveAddress",
    value: function _onSaveAddress() {
      var _this2 = this;

      var inputs = this.$el.find(this.SELECTOR_CHANGE_ADDRESS_SECTION + ' ' + this.SELECTOR_TEXT_INPUT + ' input');
      inputs.each(function (index, element) {
        if (!element.checkValidity()) {
          var $element = $(element);
          $element.closest(_this2.SELECTOR_TEXT_INPUT).addClass(_Enums.default.CLASS.HAS_ERROR);

          _this2.publish(_Enums.default.ACTION.SCROLL_TO_FORM_ERROR_MSG, $element.closest('.o-form'));

          return false;
        }
      });
    }
  }, {
    key: "_onAddressRadioChange",
    value: function _onAddressRadioChange() {
      if (!this.$newAddressRadio.prop('checked')) {
        this.publish(_Enums.default.ACTION.HIDE_ADDRESS_BOX_ADD);
      }
    }
  }, {
    key: "_onAddressButtonClick",
    value: function _onAddressButtonClick() {
      this.$newAddressRadio.prop('checked', true);
    }
  }, {
    key: "_onCancelLinkClick",
    value: function _onCancelLinkClick(e) {
      e.preventDefault();
      this.publish(_Enums.default.ACTION.ENABLE_DELIVERY_CONTINUE_BUTTON);
      this.$el.removeClass(this.CLASS_IS_CHANGING_ADDRESS);
    }
  }, {
    key: "_onChangeAddressLinkClick",
    value: function _onChangeAddressLinkClick(e) {
      e.preventDefault();
      this.publish(_Enums.default.ACTION.DISABLE_DELIVERY_CONTINUE_BUTTON);
      this.$el.addClass(this.CLASS_IS_CHANGING_ADDRESS);
    }
  }]);

  return OHomeDelivery;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OHomeDelivery;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],27:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OLazyLoad = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OLazyLoad, _AppeaserComponentBas);

  var _super = _createSuper(OLazyLoad);

  /**
   * Constructor, will run before page loaded
   */
  function OLazyLoad() {
    var _this;

    _classCallCheck(this, OLazyLoad);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OLazyLoad, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OLazyLoad.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {}
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$window = $(window);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      _Logger.default.INFO(this.constructor.name, ':: _jQueryScopeBinding');

      this._onDOMReady = this._onDOMReady.bind(this);
      this._onScroll = this._onScroll.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.ACTION.SHOW_SPINNER, this._onShowSpinner);
      this.subscribe(_Enums.default.EVENT.ON_CONTENT_LOADED, this._onContentLoaded);
      this.subscribe(_Enums.default.ACTION.HIDE_SPINNER, this._onHideSpinner);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.ACTION.SHOW_SPINNER, this._onShowSpinner);
      this.unsubscribe(_Enums.default.EVENT.ON_CONTENT_LOADED, this._onContentLoaded);
      this.unsubscribe(_Enums.default.ACTION.HIDE_SPINNER, this._onHideSpinner);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$window.on('scroll', this._onScroll);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$window.off('scroll', this._onScroll);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Triggers scroll logic and shows spinner
     * @private
     */

  }, {
    key: "_onShowSpinner",
    value: function _onShowSpinner() {
      this.$el.addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
    }
    /**
     * Stops scroll logic and hides spinner
     * @private
     */

  }, {
    key: "_onHideSpinner",
    value: function _onHideSpinner() {
      this.$el.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
    }
  }, {
    key: "_onContentLoaded",
    value: function _onContentLoaded() {
      this.eventPublished = false;
    }
    /**
     * Checks if we should publish a load more event
     * @private
     */

  }, {
    key: "_onScroll",
    value: function _onScroll() {
      if (this.$window.scrollTop() + this.$window.height() > this.$el.offset().top && !this.eventPublished) {
        this.publish(_Enums.default.ACTION.LOAD_MORE_CONTENT);
        this.eventPublished = true;
      }
    }
  }]);

  return OLazyLoad;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OLazyLoad;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],28:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

var _Utils = _interopRequireDefault(require('./../../../themes/p11/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OLightbox = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OLightbox, _AppeaserComponentBas);

  var _super = _createSuper(OLightbox);

  /**
   * Constructor, will run before page loaded
   */
  function OLightbox() {
    var _this;

    _classCallCheck(this, OLightbox);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OLightbox, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OLightbox.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_CONTENT = '.js-content';
      this.SELECTOR_BODY = 'body';
      this.SELECTOR_CLOSE_BUTTON = '.js-close-button';
      this.SELECTOR_LIGHTBOX_HEADER = '.lightbox-header';
      this.SELECTOR_LIGHTBOX_WRAPPER = '.lightbox-wrapper';
      this.SELECTOR_LIGHTBOX_CONTENT = '.lightbox-content';
      this.SELECTOR_TABLIST_CONTENT = '.tablist-content';
      this.SELECTOR_DROPDOWN = '[class^="m-dropdown"]';
      this.SELECTOR_FILTER_DROPDOWN = '.m-dropdown-filter';
      this.SELECTOR_FOCUSABLE_CONTENT = '.a-link, button, .a-input, .gender-option, .custom-box';
      this.SELECTOR_CUSTOM_RADIO_BUTTONS = '.custom-radio, .label-text';
      this.ANIMATION_DELAY = 270;
      this.ANIMATION_DELAY_OVERLAY = 500;
      this.ANIMATING_OVERLAY = true;
      this.IS_NAVIGATION_OPEN = false;
      this.OVERLAY_CLASSES = 'q-opacity-95 q-bg-grey-light';
      this.contentHistory = [];
      this.CLASS_NO_PADDING = 'no-padding';
      this.TEMPLATE_NEWSLETTER_SIGNUP = 'newsletter-signup';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this.rmClasses = null;
      this.$content = this.$el.find(this.SELECTOR_CONTENT);
      this.$window = $(window);

      this._attachSubscribers();

      this._attachDOMListeners();

      this._cacheDOMElements();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._clearContent = this._clearContent.bind(this);
      this._show = this._show.bind(this);
      this._hide = this._hide.bind(this);
      this._onClick = this._onClick.bind(this);
      this._onKeyDown = this._onKeyDown.bind(this);
      this._onCloseButtonClick = this._onCloseButtonClick.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.ACTION.SHOW_LIGHTBOX, this._show);
      this.subscribe(_Enums.default.ACTION.HIDE_LIGHTBOX, this._hide);
      this.subscribe(_Enums.default.EVENT.ON_NAVIGATION_MENU_OPEN, this._setNavigationState);
      this.subscribe(_Enums.default.EVENT.ON_NAVIGATION_MENU_CLOSE, this._setNavigationState);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.ACTION.SHOW_LIGHTBOX, this._show);
      this.unsubscribe(_Enums.default.ACTION.HIDE_LIGHTBOX, this._hide);
      this.unsubscribe(_Enums.default.EVENT.ON_NAVIGATION_MENU_OPEN, this._setNavigationState);
      this.unsubscribe(_Enums.default.EVENT.ON_NAVIGATION_MENU_CLOSE, this._setNavigationState);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$body = $(this.SELECTOR_BODY);
      this.$cachedLightbox = $(this.SELECTOR_CONTENT).clone(true);
      this.$lightboxWrapper = this.$el.find(this.SELECTOR_LIGHTBOX_WRAPPER);
      this.$closeBtn = this.$el.find(this.SELECTOR_CLOSE_BUTTON);
      $(this.SELECTOR_CONTENT).remove();
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$el.on('click', this._onClick);
      this.$el.on('click', this.SELECTOR_CLOSE_BUTTON, this._onCloseButtonClick);
      this.$el.on('keydown', this.SELECTOR_CLOSE_BUTTON, this._onKeyDown);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$el.off('click', this._onClick);
      this.$el.off('click', this.SELECTOR_CLOSE_BUTTON, this._onCloseButtonClick);
      this.$el.off('keydown', this.SELECTOR_CLOSE_BUTTON, this._onKeyDown);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_setNavigationState",
    value: function _setNavigationState() {
      this.IS_NAVIGATION_OPEN = !this.IS_NAVIGATION_OPEN;
    }
    /**
     * Callback when close button is clicked
     * @private
     */

  }, {
    key: "_onCloseButtonClick",
    value: function _onCloseButtonClick() {
      this.publish(_Enums.default.EVENT.ON_LIGHTBOX_CLOSE_BTN_CLICKED);

      this._hide();
    }
  }, {
    key: "_onClick",
    value: function _onClick(event) {
      if (!$(event.target).hasClass(_Enums.default.CLASS.OPEN_LIGHTBOX)) {
        event.stopPropagation(); // Stop event bubbling to the body tag.
      }

      if ($(event.target).is(this.$el)) {
        this.publish(_Enums.default.EVENT.ON_OUTSIDE_LIGHTBOX_CLICKED);

        this._hide();
      } // Fixes a global bug where the expanded filter dropdown doesn't close when we click on lightbox body.


      if (this.$el.find(this.SELECTOR_FILTER_DROPDOWN).length) {
        var $target = $(event.target),
            $filterDropdown = this.$el.find(this.SELECTOR_FILTER_DROPDOWN);

        if ($filterDropdown.hasClass(_Enums.default.CLASS.IS_OPEN_STATE) && (!$target.closest(this.SELECTOR_DROPDOWN).length || !$target.closest(this.SELECTOR_DROPDOWN).is($filterDropdown))) {
          $filterDropdown.removeClass(_Enums.default.CLASS.IS_OPEN_STATE);
        }
      }
    }
  }, {
    key: "_onKeyDown",
    value: function _onKeyDown(event) {
      if (event.defaultPrevented) {
        return;
      }

      var tgt = event.currentTarget,
          $visibleItems,
          flag = false;
      var radios = $(tgt).parent().find("[role='radio']");

      if (this.$lightboxContent.data('template') === 'sign-in') {
        var $tablistContent = this.$lightboxContent.find("".concat(this.SELECTOR_TABLIST_CONTENT, " > .is-active"));
        var $visibleTablistItems = $tablistContent.find(this.SELECTOR_FOCUSABLE_CONTENT).filter(function (idx, item) {
          return !item.getAttribute('aria-hidden') || item.getAttribute('aria-hidden') === 'false';
        });
        var $tabs = this.$lightboxContent.find('.m-tablist .a-link');
        $visibleItems = $.merge($tabs, $visibleTablistItems);
      } else {
        $visibleItems = this.$lightboxContent.find(this.SELECTOR_FOCUSABLE_CONTENT).filter(function (idx, item) {
          return !item.getAttribute('aria-hidden') || item.getAttribute('aria-hidden') === 'false';
        });
      }

      $visibleItems.push(this.$closeBtn.get(0));

      if (event.key.match(_Enums.default.KEYSTROKE.TAB)) {
        if (!event.shiftKey) {
          var index = $.inArray(tgt, $visibleItems);
          var numItems = $visibleItems.length;

          if (tgt === $visibleItems[numItems - 1]) {
            tgt.focus();
            flag = true;
          }
        } else {
          if (tgt === $visibleItems[0]) {
            tgt.focus();
            flag = true;
          }
        }
      } else if (event.key.match(_Enums.default.KEYSTROKE.ENTER) || event.key.match(_Enums.default.KEYSTROKE.SPACEBAR)) {
        if (tgt.getAttribute('role') === 'radio') {
          _Utils.default.Radio.setChecked(event.currentTarget, radios);

          $(tgt).find(this.SELECTOR_CUSTOM_RADIO_BUTTONS).trigger('click');
        }
      } else if (event.key.match(_Enums.default.KEYSTROKE.ARROW_RIGHT)) {
        if (tgt.getAttribute('role') === 'radio') {
          _Utils.default.Radio.setCheckedToNextItem(event.currentTarget, radios);

          flag = true;
        }
      } else if (event.key.match(_Enums.default.KEYSTROKE.ARROW_LEFT)) {
        if (tgt.getAttribute('role') === 'radio') {
          _Utils.default.Radio.setCheckedToPreviousItem(event.currentTarget, radios);

          flag = true;
        }
      } else if (event.key.match(_Enums.default.KEYSTROKE.ESCAPE)) {
        this._onCloseButtonClick();
      }

      if (flag) {
        event.stopPropagation();
        event.preventDefault();
      }
    }
    /**
     * Empties lightbox content
     * @private
     */

  }, {
    key: "_clearContent",
    value: function _clearContent() {
      if (!this.contentHistory || this.contentHistory.length === 0) {
        return;
      }

      var currentContentOptions = this.contentHistory[this.contentHistory.length - 1],
          $currentContent = this.$el.find(this.SELECTOR_CONTENT + '[data-template="' + currentContentOptions.template + '"]');
      this.contentHistory.pop(); // Trigger _destroyBlock based on passed in element, to destroy all classes used by the element

      this.__mediator.destroy($currentContent[0]);

      $currentContent.remove();
      this.$content.css('height', '').css('width', '');
    }
    /**
     * Closes lightbox
     * @private
     */

  }, {
    key: "_hide",
    value: function _hide(data) {
      var _this2 = this;

      this.publish(_Enums.default.EVENT.ON_BEFORE_HIDE_LIGHTBOX, this.$el.find(this.SELECTOR_LIGHTBOX_CONTENT).data('template'));

      if (this.contentHistory.length > 1) {
        this._clearContent();

        this._performContentSwitch();
      } else {
        // change classes
        this.$el.removeClass(_Enums.default.CLASS.IS_OPEN_STATE).addClass(_Enums.default.CLASS.IS_CLOSED_STATE); // remove saved classes

        setTimeout(function () {
          _this2.$el.removeClass(_this2.rmClasses).removeClass(_Enums.default.CLASS.IS_CLOSED_STATE).addClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
        }, this.ANIMATION_DELAY); // publish that we've closed

        this.publish(_Enums.default.EVENT.ON_LIGHTBOX_CLOSE, data);
        this.publish(_Enums.default.EVENT.ON_LIGHTBOX_LEVEL_CHANGED, this.contentHistory.length);
        this.$lightboxContent = this.$el.find(this.SELECTOR_LIGHTBOX_CONTENT);
        this.$lightboxContent.off('keydown', this.SELECTOR_FOCUSABLE_CONTENT, this._onKeyDown); // remove the overlay

        this.publish(_Enums.default.ACTION.HIDE_OVERLAY, {
          animating: this.ANIMATING_OVERLAY,
          delay: this.ANIMATION_DELAY_OVERLAY,
          opacityClass: 'q-opacity-95'
        }); // Empty the content after the close animation is finished.

        setTimeout(function () {
          _this2._clearContent();
        }, this.ANIMATION_DELAY);
      }
    }
    /**
     * Opens lightbox, template can be used to fetch the html script type/html and populate lightbox
     * @param options - Lightbox configurations: { $element: [LIGHTBOX_CONTENT], classes: [LIGHTBOX_CLASSES], template: 'tmpl-name' }
     * @private
     */

  }, {
    key: "_show",
    value: function _show(options) {
      this.contentHistory.push(options);

      if (this.contentHistory.length > 1) {
        this._performContentSwitch(options);
      } else {
        this._openLightbox(options);

        this.$lightboxContent = this.$el.find(this.SELECTOR_LIGHTBOX_CONTENT);
        this.$lightboxContent.on('keydown', this.SELECTOR_FOCUSABLE_CONTENT, this._onKeyDown);
        this.$el.removeClass(_Enums.default.CLASS.IS_HIDDEN_STATE); // publish that we've opened

        this.publish(_Enums.default.EVENT.ON_LIGHTBOX_OPEN, options);
        this.publish(_Enums.default.EVENT.ON_LIGHTBOX_LEVEL_CHANGED, this.contentHistory.length);
      }
    }
    /**
     * Performs content switch logic
     * @param options
     * @private
     */

  }, {
    key: "_performContentSwitch",
    value: function _performContentSwitch() {
      var _this3 = this;

      // change classes
      this.$el.removeClass(_Enums.default.CLASS.IS_OPEN_STATE).addClass(_Enums.default.CLASS.IS_CLOSED_STATE);
      var currentContentOptions = this.contentHistory[this.contentHistory.length - 1];
      setTimeout(function () {
        _this3.$el.removeClass(_this3.rmClasses);

        _this3._openLightbox(currentContentOptions);

        _this3.publish(_Enums.default.EVENT.ON_LIGHTBOX_LEVEL_CHANGED, _this3.contentHistory.length);
      }, this.ANIMATION_DELAY);
    }
    /**
     * Performs logic for opening the lightbox
     * @private
     */

  }, {
    key: "_openLightbox",
    value: function _openLightbox(options) {
      if (typeof options.template !== 'undefined') {
        options.$template = $('script#' + options.template).html();

        if (this.$el.find(this.SELECTOR_CONTENT + '[data-template="' + options.template + '"]').length === 0) {
          this._fetchContent(options, {});

          this.scan({
            pjax: true
          });
        }
      } else {
        _Logger.default.ERROR('No content found for lightbox', JSON.stringify(options));
      }

      if (options.classes) {
        this.rmClasses = options.classes;
        this.$el.addClass(options.classes);
      }

      if (options.data) {
        if (options.data.authCode !== undefined) {
          this.$el.attr('data-authcode', options.data.authCode);
        }

        if (options.data.socialChannel !== undefined) {
          this.$el.attr('data-social-channel', options.data.socialChannel);
        }
      }

      if (options.nextTemplate !== undefined) {
        this.$el.attr('data-next-template', options.nextTemplate);
      } else {
        this.$el.removeAttr('data-next-template');
      }

      if (options.nextClasses !== undefined) {
        this.$el.attr('data-next-classes', options.nextClasses);
      } else {
        this.$el.removeAttr('data-next-classes');
      }

      this.publish(_Enums.default.ACTION.SHOW_OVERLAY, {
        classes: this.OVERLAY_CLASSES,
        keepScroll: true
      });

      this._disableScroll(); // Set a timeout so that the actual width of the lightbox is set when we calculate the clipping


      if (options.nopadding) {
        this._setnopaddingStyling();
      } // change classes


      this.$el.removeClass(_Enums.default.CLASS.IS_CLOSED_STATE).addClass(_Enums.default.CLASS.IS_OPEN_STATE);
      var $visibleItems = this.$el.find(this.SELECTOR_FOCUSABLE_CONTENT).filter(function (idx, item) {
        return !item.getAttribute('aria-hidden') || item.getAttribute('aria-hidden') === 'false';
      });
      $visibleItems.first().focus();
    }
    /**
     * Disables the scroll
     * @private
     */

  }, {
    key: "_disableScroll",
    value: function _disableScroll() {
      this.publish(_Enums.default.ACTION.DISABLE_SCROLL, {
        forceScrollPosition: false,
        $touchScrollElement: this.$lightboxWrapper
      });
    }
  }, {
    key: "_setnopaddingStyling",
    value: function _setnopaddingStyling() {
      this.$el.addClass(this.CLASS_NO_PADDING);
      this.rmClasses += ' ' + this.CLASS_NO_PADDING;
    }
  }, {
    key: "_fetchContent",
    value: function _fetchContent(options) {
      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var template = Handlebars.compile(options.$template); // insert new content

      this.$cachedLightbox.clone(true).html(template(data)).attr('data-template', options.template).insertAfter(this.$el.find(this.SELECTOR_LIGHTBOX_HEADER));
    }
  }]);

  return OLightbox;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OLightbox;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66,"./../../../themes/p11/utils.js":113}],29:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OLoaderOverlay = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OLoaderOverlay, _AppeaserComponentBas);

  var _super = _createSuper(OLoaderOverlay);

  /**
   * Constructor, will run before page loaded
   */
  function OLoaderOverlay() {
    var _this;

    _classCallCheck(this, OLoaderOverlay);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OLoaderOverlay, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OLoaderOverlay.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {}
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$window = $(window);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      _Logger.default.INFO(this.constructor.name, ':: _jQueryScopeBinding');

      this._onDOMReady = this._onDOMReady.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.ACTION.SHOW_LOADER_OVERLAY, this._onShowLoaderOverlay);
      this.subscribe(_Enums.default.ACTION.HIDE_LOADER_OVERLAY, this._onHideLoaderOverlay);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.ACTION.SHOW_LOADER_OVERLAY, this._onShowLoaderOverlay);
      this.unsubscribe(_Enums.default.ACTION.HIDE_LOADER_OVERLAY, this._onHideLoaderOverlay);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {}
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Triggers to show overlay with loader logic
     * @private
     */

  }, {
    key: "_onShowLoaderOverlay",
    value: function _onShowLoaderOverlay() {
      this.$el.addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
    }
    /**
     * Triggers to hide overlay with loader logic
     * @private
     */

  }, {
    key: "_onHideLoaderOverlay",
    value: function _onHideLoaderOverlay() {
      this.$el.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
    }
  }]);

  return OLoaderOverlay;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OLoaderOverlay;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],30:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

var _Utils = _interopRequireDefault(require('./../../../themes/p11/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OMap = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OMap, _AppeaserComponentBas);

  var _super = _createSuper(OMap);

  /**
   * Constructor, will run before page loaded
   */
  function OMap() {
    var _this;

    _classCallCheck(this, OMap);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OMap, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OMap.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_TOOLTIP_BOX = '.tooltip-box';
      this.TEMPLATE_TOOLTIP = '#store-tooltip';
      this.PUP_TOOLTIP_TEMPLATE = '#pup-tooltip';
      this.SELECTOR_INFO_BOX_CLOSE = '';
      this.DEFAULT_MAP_ID = 'map'; //These properties might be overridden in themes. Please look there before changing the structure.

      this.STYLE_ARRAY = [{
        featureType: 'water',
        elementType: 'geometry',
        stylers: [{
          color: '#e9e9e9'
        }, {
          lightness: 17
        }]
      }, {
        featureType: 'landscape',
        elementType: 'geometry',
        stylers: [{
          color: '#f5f5f5'
        }, {
          lightness: 20
        }]
      }, {
        featureType: 'road.highway',
        elementType: 'geometry.fill',
        stylers: [{
          color: '#ffffff'
        }, {
          lightness: 17
        }]
      }, {
        featureType: 'road.highway',
        elementType: 'geometry.stroke',
        stylers: [{
          color: '#ffffff'
        }, {
          lightness: 29
        }, {
          weight: 0.2
        }]
      }, {
        featureType: 'road.arterial',
        elementType: 'geometry',
        stylers: [{
          color: '#ffffff'
        }, {
          lightness: 18
        }]
      }, {
        featureType: 'road.local',
        elementType: 'geometry',
        stylers: [{
          color: '#ffffff'
        }, {
          lightness: 16
        }]
      }, {
        featureType: 'poi',
        elementType: 'geometry',
        stylers: [{
          color: '#f5f5f5'
        }, {
          lightness: 21
        }]
      }, {
        featureType: 'poi.park',
        elementType: 'geometry',
        stylers: [{
          color: '#dedede'
        }, {
          lightness: 21
        }]
      }, {
        elementType: 'labels.text.stroke',
        stylers: [{
          visibility: 'on'
        }, {
          color: '#ffffff'
        }, {
          lightness: 16
        }]
      }, {
        elementType: 'labels.text.fill',
        stylers: [{
          saturation: 36
        }, {
          color: '#333333'
        }, {
          lightness: 40
        }]
      }, {
        elementType: 'labels.icon',
        stylers: [{
          visibility: 'off'
        }]
      }, {
        featureType: 'transit',
        elementType: 'geometry',
        stylers: [{
          color: '#f2f2f2'
        }, {
          lightness: 19
        }]
      }, {
        featureType: 'administrative',
        elementType: 'geometry.fill',
        stylers: [{
          color: '#fefefe'
        }, {
          lightness: 20
        }]
      }, {
        featureType: 'administrative',
        elementType: 'geometry.stroke',
        stylers: [{
          color: '#fefefe'
        }, {
          lightness: 17
        }, {
          weight: 1.2
        }]
      }];
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this.markers = []; // callback for google maps init

      window.initMap = this._initMap;

      if (!$('#google-api').length) {
        $('body').append('<script id="google-api"  src="' + _Enums.default.ENDPOINT.GOOGLE_API + '" async defer></script>');
      }
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$toolTipTemplate = $(this.TEMPLATE_TOOLTIP);
      this.$tooltipBox = this.$el.find(this.SELECTOR_TOOLTIP_BOX);
      this.$infoBox = this.$el.find(this.SELECTOR_INFO_BOX);
      this.$infoBoxClose = this.$el.find(this.SELECTOR_INFO_BOX_CLOSE);
      this.$pupTooltipTemplate = $(this.PUP_TOOLTIP_TEMPLATE);
      this.$mapObject = $('#map');
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      _Logger.default.INFO(this.constructor.name, ':: _jQueryScopeBinding');

      this._onDOMReady = this._onDOMReady.bind(this);
      this._initMap = this._initMap.bind(this);
      this._onInitMap = this._onInitMap.bind(this);
      this._centerMapOnMarker = this._centerMapOnMarker.bind(this);
      this._closeInfoBox = this._closeInfoBox.bind(this);
      this._openInfoBox = this._openInfoBox.bind(this);
      this._clearMarkers = this._clearMarkers.bind(this);
      this._onMarkerClick = this._onMarkerClick.bind(this);
      this._createToolTipTemplate = this._createToolTipTemplate.bind(this);
      this._setDefaultMarker = this._setDefaultMarker.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.ACTION.CREATE_MAP_MARKERS, this._createMarkers);
      this.subscribe(_Enums.default.EVENT.ON_MAP_INITIALIZED, this._onInitMap);
      this.subscribe(_Enums.default.ACTION.CLOSE_MAP_INFO_BOX, this._closeInfoBox);
      this.subscribe(_Enums.default.ACTION.CLEAR_MAP_MARKERS, this._clearMarkers);

      if (this.$el.data('map-interactive')) {
        this.subscribe(_Enums.default.ACTION.CENTER_MAP_ON_MARKER, this._centerMapOnMarker);
      }
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.ACTION.CREATE_MAP_MARKERS, this._createMarkers);
      this.unsubscribe(_Enums.default.EVENT.ON_MAP_INITIALIZED, this._onInitMap);
      this.unsubscribe(_Enums.default.ACTION.CLOSE_MAP_INFO_BOX, this._closeInfoBox);
      this.unsubscribe(_Enums.default.ACTION.CLEAR_MAP_MARKERS, this._clearMarkers);

      if (this.$el.data('map-interactive')) {
        this.unsubscribe(_Enums.default.ACTION.CENTER_MAP_ON_MARKER, this._centerMapOnMarker);
      }
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$infoBoxClose.on('click', this._closeInfoBox);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$infoBoxClose.off('click', this._closeInfoBox);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Removes all markers
     * @private
     */

  }, {
    key: "_clearMarkers",
    value: function _clearMarkers() {
      this.markers.forEach(function (element) {
        element.setMap(null);
      });
      this.markers.length = 0;
    }
    /**
     * Closes any open info box in the map
     * @private
     */

  }, {
    key: "_closeInfoBox",
    value: function _closeInfoBox() {
      var _this2 = this;

      this.$infoBox.addClass(_Enums.default.CLASS.DISPLAY_NONE);
      $.each(this.markers, function (index, marker) {
        marker.setIcon(_this2.icon);
        marker.active = false;
      });
    }
    /**
     * Opens infobox
     * @private
     */

  }, {
    key: "_openInfoBox",
    value: function _openInfoBox() {
      this.$infoBox.removeClass(_Enums.default.CLASS.DISPLAY_NONE);
    }
    /**
     * Centers map on marker with store id
     * @private
     */

  }, {
    key: "_centerMapOnMarker",
    value: function _centerMapOnMarker(storeId) {
      var markerToCenterOn = this.markers.find(function (marker) {
        return marker.data.storeId == storeId;
      });

      this._closeInfoBox();

      this._openInfoBox(markerToCenterOn);

      markerToCenterOn.setIcon(this.iconClick);
      markerToCenterOn.active = true;
    }
    /**
     * Return default marker from self by default (Just for separating the function to change markers in other brands)
     * @private
     */

  }, {
    key: "_setDefaultMarker",
    value: function _setDefaultMarker(self) {
      return self.icon;
    }
    /**
     * Set all markers and position them on the map and add behavior.
     * @private
     */

  }, {
    key: "_createMarkers",
    value: function _createMarkers(markerData, verticalOffset, horizontalOffset, storeLocator) {
      var _this3 = this;

      var self = this; //If o-map is used in store-locator itcan have a different vertical and horizontal offset

      if (!verticalOffset && !horizontalOffset) {
        verticalOffset = self.TOOLTIP_VERTICAL_OFFSET;
        horizontalOffset = self.TOOLTIP_HORIZONTAL_OFFSET;
      } //Clear the map


      this.markers.map(function (m) {
        m.setMap(null);
      });
      this.markers = [];
      var bounds = new google.maps.LatLngBounds();

      var _loop = function _loop() {
        var defaultMarker = _this3._setDefaultMarker(self, markerData[i]); // Create a marker and set its position.


        var marker = new google.maps.Marker({
          map: self.$map,
          icon: defaultMarker,
          position: {
            lat: markerData[i].latitude,
            lng: markerData[i].longitude
          },
          data: markerData[i].data,
          title: markerData[i].title,
          name: markerData[i].title,
          optimized: false
        });
        bounds.extend(marker.getPosition()); // adds hover event

        if (!Modernizr.touchevents) {
          google.maps.event.addListener(marker, 'mouseover', function () {
            //Sets the hovered marker icon to active state
            marker.setIcon(self.iconHover);

            if (storeLocator) {
              //Creates the hover tooltip according to store-locator design, can vary for all brands
              self._createToolTipTemplate(marker);

              self.$tooltipBox.html(self.tooltipContent);
            } else {
              //Creates the hover tooltip according to pickup location design, this has to be the same for all brands
              var tooltipTemplate = Handlebars.compile(self.$pupTooltipTemplate.html()),
                  tooltipContent = tooltipTemplate({
                title: marker.title
              });
              self.$tooltipBox.html(tooltipContent);
            }

            if (verticalOffset && horizontalOffset) {
              self.$tooltipBox.removeClass(_Enums.default.CLASS.DISPLAY_NONE);
            } // find the markers position in the map and convert it to a pixel position in the DOM


            var scale = Math.pow(2, self.$map.getZoom()),
                markerPosition = self.$map.getProjection().fromLatLngToPoint(marker.getPosition()),
                mapCenterPosition = self.$map.getProjection().fromLatLngToPoint(self.$map.getCenter()),
                pixelOffset = new google.maps.Point(Math.floor((markerPosition.x - mapCenterPosition.x) * scale + self.$mapObject.width() / 2), Math.floor((markerPosition.y - mapCenterPosition.y) * scale + self.$mapObject.height() / 2));
            var tooltipX, tooltipY; //If the the tooltip can contain 1 or more rows of store information the tooltip-box needs a flexible height

            if (self.TOOLTIP_HAS_FLEXIBLE_HEIGHT) {
              tooltipX = pixelOffset.x + self.$tooltipBox.width() / 2 + horizontalOffset;
              tooltipY = pixelOffset.y - self.$tooltipBox.height() - verticalOffset;
            } else {
              tooltipX = pixelOffset.x + horizontalOffset;
              tooltipY = pixelOffset.y - verticalOffset;
            }

            self.$tooltipBox.css({
              top: tooltipY + 'px',
              left: tooltipX + 'px'
            });
          }); // add mouse out event

          google.maps.event.addListener(marker, 'mouseout', function () {
            //If the marker is not active ('clicked'), the hovered icon should go back to default icon
            if (!marker.active) {
              marker.setIcon(defaultMarker);
            } //Hides the small tooltip


            self.$tooltipBox.addClass(_Enums.default.CLASS.DISPLAY_NONE);
          });
        }

        google.maps.event.addListener(marker, 'click', function () {
          //sets all the other markers to default icon and deactivate them
          for (var j = 0; j < _this3.markers.length; j++) {
            _this3.markers[j].setIcon(defaultMarker);

            _this3.markers[j].active = false;
          } //Activates the clicked marker and set the icon to the selected state


          marker.setIcon(_this3.iconHover);
          marker.active = true;

          self._onMarkerClick(marker);
        });

        _this3.markers.push(marker);
      };

      for (var i = 0; i < markerData.length; i++) {
        _loop();
      }

      google.maps.event.trigger(this.$map, 'resize'); // center map on markers

      this.$map.fitBounds(bounds); //remove one zoom level to ensure no marker is on the edge.
      //map.setZoom(map.getZoom()-1);
      // set a minimum zoom
      // if you got only 1 marker or all markers are on the same address map will be zoomed too much.

      if (this.$map.getZoom() > 15) {
        this.$map.setZoom(15);
      }
    }
    /**
     * Handles a click on a marker. Can be overridden in each brand to get the brand specific behavior.
     * @private
     */

  }, {
    key: "_onMarkerClick",
    value: function _onMarkerClick(marker) {
      // The map will only be informative by default as it is in GOEP, to override set the below data attribute to true
      if (this.$el.data('map-interactive')) {
        this.publish(_Enums.default.EVENT.ON_MAP_MARKER_CLICK, marker.data.storeId);
      }
    }
  }, {
    key: "_initMap",
    value: function _initMap() {
      this.iconHover = _Utils.default.Markers.iconHover();
      this.icon = _Utils.default.Markers.icon();
      this.publish(_Enums.default.EVENT.ON_MAP_INITIALIZED);
    }
    /**
     * Callback function onOrderBoxClick
     * @param e
     * @private
     */

  }, {
    key: "_onInitMap",
    value: function _onInitMap() {
      var _this4 = this;

      // Create a map object and specify the DOM element for display.
      this.$map = new google.maps.Map(document.getElementById(this.$el.data('map-id') || this.DEFAULT_MAP_ID), {
        center: {
          lat: 9,
          lng: 10
        },
        scrollwheel: false,
        // Apply the map style array to the map.
        styles: this.STYLE_ARRAY,
        zoom: 1,
        mapTypeControlOptions: {
          style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
          position: google.maps.ControlPosition.TOP_RIGHT
        }
      }); // Remove tab key navigation inside the map

      var listener = google.maps.event.addListener(this.$map, 'tilesloaded', function () {
        setTimeout(function () {
          _this4.$el.find('div, iframe, a, button').attr('tabindex', '-1');

          google.maps.event.removeListener(listener);
        }, 500);
      });
    }
  }, {
    key: "_createToolTipTemplate",
    value: function _createToolTipTemplate(marker) {
      var tooltipTemplate = Handlebars.compile(this.$toolTipTemplate.html());
      this.tooltipContent = tooltipTemplate({
        streetName1: marker.data.address.streetName1
      });
    }
  }]);

  return OMap;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OMap;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66,"./../../../themes/p11/utils.js":113}],31:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OMyDetails = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OMyDetails, _AppeaserComponentBas);

  var _super = _createSuper(OMyDetails);

  /**
   * Constructor
   */
  function OMyDetails() {
    var _this;

    _classCallCheck(this, OMyDetails);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();

    _this._jQueryScopeBinding();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OMyDetails, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OMyDetails.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      // CONSTANTS
      this.SELECTOR_EMAIL_INPUT = '.email-field .a-input';
      this.SELECTOR_PASSWORD_INPUT = '.password-field .a-input';
      this.SELECTOR_PASSWORD_FIELD = '.password-field';
      this.SELECTOR_RADIO_BTN_AGREE = '.m-radio-button #yes';
      this.SELECTOR_RADIO_BTN = '.m-radio-button';
      this.SELECTOR_NEWSLETTER_LABEL = '.newsletter-label';
      this.SELECTOR_M_INPUT = '.m-input';
      this.SELECTOR_HELP_TEXT_EL = '.a-label:last-child';
      this.CLASS_EMAIL_TOUCHED = 'email-touched'; //Override this constant is themes.

      this.ANIMATION_SHOW_OPTIONS = undefined;
      this.ANIMATION_HIDE_OPTIONS = undefined;
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this.initialInputs = [];

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._setEmailInputValue();

      this._prepareRadioBtnAnimation();

      this._preserveInitialInputState();
    }
    /**
     * Caching DOM elements for performance
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$emailInput = this.$el.find(this.SELECTOR_EMAIL_INPUT);
      this.$passwordInput = this.$el.find(this.SELECTOR_PASSWORD_INPUT);
      this.$passwordField = this.$el.find(this.SELECTOR_PASSWORD_FIELD);
      this.$radioBtnAgree = this.$el.find(this.SELECTOR_RADIO_BTN_AGREE);
      this.$radioBtn = this.$el.find(this.SELECTOR_RADIO_BTN);
      this.$newsletterLabel = this.$el.find(this.SELECTOR_NEWSLETTER_LABEL);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onEmailKeyUp = this._onEmailKeyUp.bind(this);
      this._setEmailInputValue = this._setEmailInputValue.bind(this);
      this._onRadioBtnChange = this._onRadioBtnChange.bind(this);
      this._onProfileReset = this._onProfileReset.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_PROFILE_RESET, this._onProfileReset);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_PROFILE_RESET, this._onProfileReset);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$emailInput.on('change', this._onEmailKeyUp);
      this.$radioBtn.on('change', this._onRadioBtnChange);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$emailInput.off('change', this._onEmailKeyUp);
      this.$radioBtn.off('change', this._onRadioBtnChange);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Preserve the initial help text so it can be restored when the form is reset.
     * @private
     */

  }, {
    key: "_preserveInitialInputState",
    value: function _preserveInitialInputState() {
      var _this2 = this;

      this.$el.find(this.SELECTOR_M_INPUT).each(function (index, element) {
        var $el = $(element);

        _this2.initialInputs.push({
          el: $el,
          helpTextEl: $el.find(_this2.SELECTOR_HELP_TEXT_EL),
          text: $el.find(_this2.SELECTOR_HELP_TEXT_EL).text()
        });
      });
    }
    /**
     * ON_PROFILE_RESET callback
     * @private
     */

  }, {
    key: "_onProfileReset",
    value: function _onProfileReset() {
      this._resetPasswordField();

      this._resetInputHelpText();
    }
    /**
     * Reset the help text/error text to the initial value.
     * @private
     */

  }, {
    key: "_resetInputHelpText",
    value: function _resetInputHelpText() {
      for (var i = 0; i < this.initialInputs.length; i++) {
        var inputObj = this.initialInputs[i];
        inputObj.el.removeClass(_Enums.default.CLASS.HAS_ERROR);
        inputObj.helpTextEl.text(inputObj.text);
      }
    }
    /**
     * Prepare our sliding animation performed in _onRadioBtnChange()
     * @private
     */

  }, {
    key: "_prepareRadioBtnAnimation",
    value: function _prepareRadioBtnAnimation() {
      if (!this.$radioBtnAgree.prop('checked')) {
        this.$newsletterLabel.hide();
      }
    }
    /**
     * Callback for radio button change
     * @private
     */

  }, {
    key: "_onRadioBtnChange",
    value: function _onRadioBtnChange() {
      if (this.$radioBtnAgree.prop('checked')) {
        this.$newsletterLabel.slideDown(this.ANIMATION_SHOW_OPTIONS);
      } else {
        this.$newsletterLabel.slideUp(this.ANIMATION_HIDE_OPTIONS);
      }
    }
    /**
     * Checks if form is invalid on submit button click and if so takes an appropriate action
     * @private
     */

  }, {
    key: "_onEmailKeyUp",
    value: function _onEmailKeyUp() {
      if (this.$emailInput.val() != this.currentEmail) {
        this.$passwordField.prop('disabled', false);
        this.$passwordInput.prop('disabled', false);
        this.$el.addClass(this.CLASS_EMAIL_TOUCHED);
      } else {
        this.$passwordField.attr('disabled', 'disabled');
        this.$passwordInput.attr('disabled', 'disabled');
        this.$el.removeClass(this.CLASS_EMAIL_TOUCHED);
      }
    }
    /**
     * Fills the email input with the signed in email address
     * @private
     */

  }, {
    key: "_setEmailInputValue",
    value: function _setEmailInputValue() {
      this.currentEmail = this.$emailInput.val();
    }
    /**
     * Clears, disables and hides the password input field.
     * @private
     */

  }, {
    key: "_resetPasswordField",
    value: function _resetPasswordField() {
      this.$passwordInput.attr('disabled', 'disabled');
      this.$passwordInput.val('');
      this.$passwordField.removeClass(_Enums.default.CLASS.CLASS_HAS_ERROR);
      this.$el.removeClass(this.CLASS_EMAIL_TOUCHED);
    }
  }]);

  return OMyDetails;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OMyDetails;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],32:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

var _Utils = _interopRequireDefault(require('./../../../themes/p11/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OMyLinkedAccounts = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OMyLinkedAccounts, _AppeaserComponentBas);

  var _super = _createSuper(OMyLinkedAccounts);

  /**
   * Constructor
   */
  function OMyLinkedAccounts() {
    var _this;

    _classCallCheck(this, OMyLinkedAccounts);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();

    _this._jQueryScopeBinding();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OMyLinkedAccounts, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OMyLinkedAccounts.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      // CONSTANTS
      this.SELECTOR_REMOVE_BUTTON = '.remove-button';
      this.SELECTOR_CREATE_PASSWORD = '.create-password-field';
      this.SELECTOR_CREATE_PW_LINK = '.create-password-link';
      this.SELECTOR_CREATE_PW_TEXT = '.create-password-text';
      this.SELECTOR_MESSAGE_FIELD = '.message-field';
      this.SELECTOR_UNLINK_TEXT = '.unlink-text';
      this.CLASS_HAS_ERROR = 'has-error';
      this.CLASS_EMAIL_SENT = 'email-sent';
      this.CLASS_UNLINK_SUCCESS = 'unlink-success';
      this.CLASS_MESSAGE_FIELD = 'message-field';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Caching DOM elements for performance
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$removeButton = this.$el.find(this.SELECTOR_REMOVE_BUTTON);
      this.$createPasswordField = this.$el.find(this.SELECTOR_CREATE_PASSWORD);
      this.$createPasswordLink = this.$el.find(this.SELECTOR_CREATE_PW_LINK);
      this.$createPasswordText = this.$el.find(this.SELECTOR_CREATE_PW_TEXT);
      this.$messageField = this.$el.find(this.SELECTOR_MESSAGE_FIELD);
      this.$unlinkText = this.$el.find(this.SELECTOR_UNLINK_TEXT);
      this.originalUnlinkText = this.$unlinkText.html();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._removeButtonClick = this._removeButtonClick.bind(this);
      this._ajaxPost = this._ajaxPost.bind(this);
      this._ajaxPostEmail = this._ajaxPostEmail.bind(this);
      this._setMessageClass = this._setMessageClass.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$removeButton.on('click', this._removeButtonClick);
      this.$createPasswordLink.on('click', this._ajaxPostEmail);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$removeButton.off('click', this._removeButtonClick);
      this.$createPasswordLink.off('click', this._ajaxPostEmail);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_removeButtonClick",
    value: function _removeButtonClick(event) {
      var $currentButton = $(event.target).parent(),
          socialId = $currentButton.data('social-id'),
          socialChannel = $currentButton.data('social-channel');

      if (socialId && socialChannel) {
        this._ajaxPost(socialChannel, socialId);
      }
    }
  }, {
    key: "_setMessageClass",
    value: function _setMessageClass(newClass) {
      this.$messageField.attr('class', this.CLASS_MESSAGE_FIELD);
      this.$messageField.addClass(newClass);
    }
  }, {
    key: "_ajaxPost",
    value: function _ajaxPost(socialChannel, socialId) {
      var $this = this,
          url = _Utils.default.ConstructUrl.localeUrl('/my-account/social-accounts/remove-link'),
          requestObject = '{"socialChannel":"' + socialChannel + '","socialId":"' + socialId + '"}',
          channelName = socialChannel.charAt(0) + socialChannel.slice(1).toLowerCase();

      $.ajax({
        type: 'POST',
        url: url,
        // Always include an `X-Requested-With` header in every AJAX request,
        // to protect against CSRF attacks.
        headers: {
          'X-Requested-With': 'XMLHttpRequest'
        },
        dataType: 'json',
        contentType: 'application/json; charset=utf-8',
        success: function success(result) {
          if (result.responseNumber === '401') {
            //result.isPasswordGenerated
            //Display success message and show password reset field
            $('.' + socialChannel).addClass(_Enums.default.CLASS_IS_DISABLED).prop('disabled', true);

            $this._setMessageClass($this.CLASS_UNLINK_SUCCESS);

            $this.$unlinkText.html($this.originalUnlinkText + channelName + '.');
          } else {
            $this._setMessageClass($this.CLASS_HAS_ERROR);
          }
        },
        error: function error(result) {
          //Technical issue connecting to hybris
          $this._setMessageClass($this.CLASS_HAS_ERROR);
        },
        data: requestObject
      });
    }
  }, {
    key: "_ajaxPostEmail",
    value: function _ajaxPostEmail() {
      var $this = this,
          url = _Utils.default.ConstructUrl.localeUrl('/my-account/social-accounts/change-password');

      $.ajax({
        type: 'POST',
        url: url,
        // Always include an `X-Requested-With` header in every AJAX request,
        // to protect against CSRF attacks.
        headers: {
          'X-Requested-With': 'XMLHttpRequest'
        },
        dataType: 'json',
        contentType: 'application/json; charset=utf-8',
        success: function success(result) {
          if (result.responseNumber === '402') {
            //Display success message and show password reset field
            $this.$createPasswordField.hide();

            $this._setMessageClass($this.CLASS_EMAIL_SENT); //Display success message

          } else {
            //Some error in hybris
            $this._setMessageClass($this.CLASS_HAS_ERROR);
          }
        },
        error: function error(result) {
          $this._setMessageClass($this.CLASS_HAS_ERROR);
        }
      });
    }
  }]);

  return OMyLinkedAccounts;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OMyLinkedAccounts;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66,"./../../../themes/p11/utils.js":113}],33:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var ONewsletterSignUp = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(ONewsletterSignUp, _AppeaserComponentBas);

  var _super = _createSuper(ONewsletterSignUp);

  /**
   * Constructor, will run before page loaded
   */
  function ONewsletterSignUp() {
    var _this;

    _classCallCheck(this, ONewsletterSignUp);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(ONewsletterSignUp, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(ONewsletterSignUp.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.KEY_NEWSLETTER_VIEWED_STATE = 'newsletter-signup';
      this.LIGHTBOX_TEMPLATE = 'newsletter-signup';
      this.SELECTOR_SUBMIT = 'button[type="submit"]';
      this.SELECTOR_OPTION_SELECTED = '.a-option.is-selected';
      this.SELECTOR_INPUT = '.a-input.filter';
      this.SELECTOR_NEWSLETTER_NTN = '.is-newsletter-ntn';
      this.SELECTOR_DROPDOWN_FILTER = '.m-dropdown-filter';
      this.CLASS_IS_SELECTED = 'is-selected';
      this.CLASS_HAS_ERROR = 'has-error';
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$window = $(window);
      this.$submitElement = this.$el.find(this.SELECTOR_SUBMIT);
      this.$dropDownFilter = this.$el.find(this.SELECTOR_DROPDOWN_FILTER);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onBeforeNewsletterClosed = this._onBeforeNewsletterClosed.bind(this);
      this._onSubmitClick = this._onSubmitClick.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_BEFORE_HIDE_LIGHTBOX, this._onBeforeNewsletterClosed);
      this.subscribe(_Enums.default.EVENT.ON_DROPDOWN_CLOSED_FILTERS, this._closedDropdownFilter);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_BEFORE_HIDE_LIGHTBOX, this._onBeforeNewsletterClosed);
      this.unsubscribe(_Enums.default.EVENT.ON_DROPDOWN_CLOSED_FILTERS, this._closedDropdownFilter);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$submitElement.on('click', this._onSubmitClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$submitElement.off('click', this._onSubmitClick);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Calulates days to expiration and sets cookie
     * @private
     */

  }, {
    key: "_onBeforeNewsletterClosed",
    value: function _onBeforeNewsletterClosed(template) {
      if (template == this.LIGHTBOX_TEMPLATE) {
        var daysToExpiration = this.$el.data('expires');

        if (daysToExpiration != undefined) {
          Cookies.set(this.KEY_NEWSLETTER_VIEWED_STATE, 'viewed', {
            expires: daysToExpiration
          });
        }
      }
    }
    /**
     * Makes sure _onBeforeNewsletterClosed is called after submit
     * @private
     */

  }, {
    key: "_onSubmitClick",
    value: function _onSubmitClick() {
      this._onBeforeNewsletterClosed(this.LIGHTBOX_TEMPLATE);

      if (this.$dropDownFilter.length) {
        if (this.$el.find(this.SELECTOR_INPUT).val() != this.$el.find(this.SELECTOR_OPTION_SELECTED).html()) {
          this.$dropDownFilter.addClass(_Enums.default.CLASS.HAS_ERROR);
          return false;
        } else {
          this.$dropDownFilter.removeClass(_Enums.default.CLASS.HAS_ERROR);
        }
      }
    }
    /**
     * On close of Filter Dropdown
     * @private
     */

  }, {
    key: "_closedDropdownFilter",
    value: function _closedDropdownFilter() {
      this._onSubmitClick();
    }
  }]);

  return ONewsletterSignUp;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = ONewsletterSignUp;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],34:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _olapicBase = _interopRequireDefault(require('./../../../js/base/olapic-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OlapicGalleryBase = /*#__PURE__*/function (_OlapicBase) {
  _inherits(OlapicGalleryBase, _OlapicBase);

  var _super = _createSuper(OlapicGalleryBase);

  /**
   * Constructor, will run before page loaded
   */
  function OlapicGalleryBase() {
    var _this;

    _classCallCheck(this, OlapicGalleryBase);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OlapicGalleryBase, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OlapicGalleryBase.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      // Handlebar template id
      this.HANDLEBAR_SOURCE = '#olapic-gallery-slide'; // Selectors

      this.SELECTOR_CONTENT = '.js-placeholder';
      this.SELECTOR_OLAPIC_IMAGE = '.o-olapic-image';
      this.SELECTOR_USER_NAME = '.m-instagram-user > .a-label';
      this.SELECTOR_USER_AVATAR = '.m-instagram-user > .a-image';
      this.SELECTOR_OLAPIC_SLIDER = '.o-olapic-slider';
      this.SELECTOR_BUTTON_MORE = '.a-button.load-more';
      this.SELECTOR_USER = '.m-instagram-user > .user';
      this.PAGE_SETTINGS = {
        COLS_SM: 12,
        TOTAL_COLS_SM: 12,
        COLS_MD: 24,
        TOTAL_COLS_MD: 24,
        COLS_LG: 24,
        TOTAL_COLS_LG: 24
      };
      this.COMPONENT_SETTINGS = {
        COLS_SM: 6,
        TOTAL_COLS_SM: 12,
        COLS_MD: 3,
        TOTAL_COLS_MD: 24,
        COLS_LG: 8,
        TOTAL_COLS_LG: 24
      };
      this.RESIZE_TIMER = undefined;
      this.RESIZE_TIMEOUT = 50;
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.settings = this.$el.data();
      this.settings.version = this.settings.version ? this.settings.version : 'v2.2';
      this.settings.wrapResponses = this.settings.wrapResponses ? this.settings.wrapResponses : '1';
      this.$btnMore = this.$el.find(this.SELECTOR_BUTTON_MORE);
      this.$placeholder = this.$el.find(this.SELECTOR_CONTENT);
      this.$window = $(window);
      this.$handlebarOlapicSlideTemplate = $(this.HANDLEBAR_SOURCE).html();
      this.$olapicImageTemplate = $('#' + this.settings.template).html();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onMediaFetched = this._onMediaFetched.bind(this);
      this._renderTemplate = this._renderTemplate.bind(this);
      this._openOlapicGallery = this._openOlapicGallery.bind(this);
      this._onResize = this._onResize.bind(this);
      this._onBtnMoreClick = this._onBtnMoreClick.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_PAGE_RESIZE, this._onResize);
      this.subscribe(_Enums.default.EVENT.ON_PAGE_CONTENT_SHOW, this._onResize);
      this.subscribe(_Enums.default.ACTION.UPDATE_OLAPIC_IMAGES, this._updateOlapicImages);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_PAGE_RESIZE, this._onResize);
      this.unsubscribe(_Enums.default.EVENT.ON_PAGE_CONTENT_SHOW, this._onResize);
      this.unsubscribe(_Enums.default.ACTION.UPDATE_OLAPIC_IMAGES, this._updateOlapicImages);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$el.on('keypress click', this.SELECTOR_OLAPIC_IMAGE, this._openOlapicGallery);
      this.$btnMore.on('click', this._onBtnMoreClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$el.off('keypress click', this.SELECTOR_OLAPIC_IMAGE, this._openOlapicGallery);
      this.$window.off('scroll', this.createProductUrlRequest);
      this.$btnMore.off('click', this._onBtnMoreClick);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      if (this.settings.productId) {
        this.$window.one('scroll', this.createProductUrlRequest.bind(this, false));
      } else {
        this.createRegularUrlRequest();
      }
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Callback for updating olapic images when product is changed
     * @param productId
     * @private
     */

  }, {
    key: "_updateOlapicImages",
    value: function _updateOlapicImages(productId) {
      this.$el.attr('data-product-id', productId);
      this.settings.productId = this.$el.attr('data-product-id');
      this.createProductUrlRequest(true);
    }
    /**
     * "Get more" button click event handler
     * @private
     */

  }, {
    key: "_onBtnMoreClick",
    value: function _onBtnMoreClick() {
      this.fetchNext(this.settings.count);
    }
    /**
     * Callback containing the result fetched from olapic
     * @private
     */

  }, {
    key: "_onMediaFetched",
    value: function _onMediaFetched(changeProduct, mediaLength) {
      _Logger.default.INFO(this.constructor.name, ':: _onMediaFetched ');

      if (this._media.media.length) {
        this.$el.addClass(_Enums.default.CLASS.IS_VISIBLE_STATE); // loop through result

        this._media.media.slice(-mediaLength).map(this._renderTemplate); // Cache all olapic images


        this.$olapicImages = this.$el.find(this.SELECTOR_OLAPIC_IMAGE); // trigger resize to scale all images to squares

        this._onResize();
      }
    }
    /**
     * Renders a template o-olapic-image template
     * @param media
     * @private
     */

  }, {
    key: "_renderTemplate",
    value: function _renderTemplate(media) {
      // get template
      var $template = $(this.$olapicImageTemplate);
      $template.css({
        'background-image': "url(".concat(media.images.normal, ")")
      });
      $template.find(this.SELECTOR_USER_NAME).text(media.uploader.name);
      $template.find(this.SELECTOR_USER).text(media.uploader.name);
      $template.find(this.SELECTOR_USER_AVATAR).attr('src', media.uploader.avatar_url);
      var settings;

      if (this.settings.count == 24) {
        settings = this.PAGE_SETTINGS;
      } else {
        settings = this.COMPONENT_SETTINGS;
      }

      this.$placeholder.children().append(this._createColumn(settings).append($template));
    }
    /**
     * Creates a column with correct grid size
     *
     * @param settings
     * @returns {*|jQuery|HTMLElement}
     * @private
     */

  }, {
    key: "_createColumn",
    value: function _createColumn(settings) {
      var $col = $('<div/>');

      if (settings.COLS_SM > 0) {
        $col.addClass("u-cols-sm-".concat(settings.COLS_SM, "-").concat(settings.TOTAL_COLS_SM));
      }

      if (settings.COLS_MD > 0) {
        $col.addClass("u-cols-md-".concat(settings.COLS_MD, "-").concat(settings.TOTAL_COLS_MD));
      }

      if (settings.COLS_LG > 0) {
        $col.addClass("u-cols-lg-".concat(settings.COLS_LG, "-").concat(settings.TOTAL_COLS_LG));
      }

      if (settings.SPACERS_LG) {
        $col.addClass("u-cols-".concat(settings.SPACERS_LG.placement, "-lg-").concat(settings.SPACERS_LG.amount, "-").concat(settings.TOTAL_COLS_LG));
      }

      return $col;
    }
    /**
     * Click on olapic image, opens gallery lightbox
     * @param e
     * @param classes
     * @private
     */

  }, {
    key: "_openOlapicGallery",
    value: function _openOlapicGallery(e, classes) {
      e.preventDefault();

      if (e.type === 'click' || e.key.match(_Enums.default.KEYSTROKE.ENTER)) {
        var $this = $(e.currentTarget),
            templateID = $this.data('template'),
            indexOfCurrentTarget = this.$olapicImages.index($this);
        this.publish(_Enums.default.ACTION.SHOW_LIGHTBOX, {
          template: templateID,
          $el: $this,
          nopadding: true,
          classes: classes ? classes : 'olapic-style'
        });

        this._initOlapicGallery(indexOfCurrentTarget);
      }
    }
    /**
     * Injects slides into the olapic slider
     *
     * @private
     */

  }, {
    key: "_initOlapicGallery",
    value: function _initOlapicGallery(index) {
      var slider = $(this.SELECTOR_OLAPIC_SLIDER),
          slick = slider.slick('getSlick'),
          template = Handlebars.compile(this.$handlebarOlapicSlideTemplate),
          slides = template({
        media: this._media.media
      });
      slick.addSlide(slides);
      slick.goTo(index, true);
      this.publish(_Enums.default.EVENT.ON_OLAPIC_SLIDES_ADDED, index);
    }
    /**
     * OnResize
     * @private
     */

  }, {
    key: "_onResize",
    value: function _onResize() {
      var _this2 = this;

      clearTimeout(this.RESIZE_TIMER);
      this.RESIZE_TIMER = setTimeout(function () {
        if (_this2.$olapicImages) {
          var width = _this2.$olapicImages.first().width();

          _this2.$olapicImages.css('height', width);
        }
      }, this.RESIZE_TIMEOUT);
    }
  }]);

  return OlapicGalleryBase;
}(_olapicBase.default); // Export this so we can pick it up and import in main.js


module.exports = OlapicGalleryBase;

},{"./../../../js/base/logger.js":51,"./../../../js/base/olapic-base.js":53,"./../../../themes/p11/enums.js":66}],35:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

var _Utils = _interopRequireDefault(require('./../../../themes/p11/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OOlapicStyleSlide = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OOlapicStyleSlide, _AppeaserComponentBas);

  var _super = _createSuper(OOlapicStyleSlide);

  /**
   * Constructor, will run before page loaded
   */
  function OOlapicStyleSlide() {
    var _this;

    _classCallCheck(this, OOlapicStyleSlide);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OOlapicStyleSlide, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OOlapicStyleSlide.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_SLIDER = '.olapic-slider';
      this.CLASS_SLICK_DISABLED = 'slick-disabled';
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$slider = this.$el.find(this.SELECTOR_SLIDER);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._appendArrows = this._appendArrows.bind(this);
      this._slideToNext = this._slideToNext.bind(this);
      this._slideToPrevious = this._slideToPrevious.bind(this);
      this._checkArrowState = this._checkArrowState.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$slider.on('beforeChange', this._checkArrowState);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$slider.off('beforeChange', this._checkArrowState);
      if (this.$nextArrow) this.$nextArrow.off('click', this._slideToNext);
      if (this.$prevArrow) this.$prevArrow.off('click', this._slideToPrevious);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._initSlider();
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Initi
     * @private
     */

  }, {
    key: "_initSlider",
    value: function _initSlider() {
      this.$slider.slick({
        arrows: false,
        infinite: false,
        speed: 300,
        draggable: false,
        touchMove: false
      });
      this.slick = this.$slider.slick('getSlick');

      this._appendArrows();

      this.$slider.children().show();
    }
    /**
     * Manually append arrows to Slick slider to be WCAG compliant
     * @private
     */

  }, {
    key: "_appendArrows",
    value: function _appendArrows() {
      if (this.slick && this.slick.slideCount > 1) {
        this.$slider.append("<button type='button' aria-label='previous item' class='product-slider-arrow slick-disabled " + _Enums.default.CLASS.HAS_DISABLED_BUTTON_STYLE + "' tabindex='-1'></button>" + "<button type='button' aria-label='next item' class='product-slider-arrow " + _Enums.default.CLASS.HAS_DISABLED_BUTTON_STYLE + "'></button>");
      }

      if (this.slick) {
        this.$nextArrow = this.$el.find('.product-slider-arrow:last');
        this.$prevArrow = this.$el.find('.product-slider-arrow:first');
        this.$nextArrow.on('click', this._slideToNext);
        this.$prevArrow.on('click', this._slideToPrevious);
      }
    }
    /**
     * Slide to next Slick slider slide
     * @private
     */

  }, {
    key: "_slideToNext",
    value: function _slideToNext() {
      this.$slider.slick('slickNext');
    }
    /**
     * Slide to previous Slick slider slide
     * @private
     */

  }, {
    key: "_slideToPrevious",
    value: function _slideToPrevious() {
      this.$slider.slick('slickPrev');
    }
    /**
     * Adds this.CLASS_SLICK_DISABLED:
     *  - to arrow-back when slides to 1st slide
     *  - and to arrow-forward when last slide reached
     * @param event
     * @param slick
     * @param currentSlide
     * @param nextSlide
     * @private
     */

  }, {
    key: "_checkArrowState",
    value: function _checkArrowState(event, slick, currentSlide, nextSlide) {
      if (nextSlide === 0) {
        // first slide reached
        this.$prevArrow.addClass(this.CLASS_SLICK_DISABLED);

        _Utils.default.Accessibility.preventFocus(this.$prevArrow);

        this.$nextArrow.removeClass(this.CLASS_SLICK_DISABLED);

        _Utils.default.Accessibility.allowFocus(this.$nextArrow);
      } else if (nextSlide === slick.slideCount - 1) {
        // last slide reached
        this.$nextArrow.addClass(this.CLASS_SLICK_DISABLED);

        _Utils.default.Accessibility.preventFocus(this.$nextArrow);

        this.$prevArrow.removeClass(this.CLASS_SLICK_DISABLED);

        _Utils.default.Accessibility.allowFocus(this.$prevArrow);
      } else {
        // neither first nor last slide reached
        this.$nextArrow.removeClass(this.CLASS_SLICK_DISABLED);
        this.$prevArrow.removeClass(this.CLASS_SLICK_DISABLED);

        _Utils.default.Accessibility.allowFocus(this.$prevArrow.add(this.$prevArrow));
      }
    }
  }]);

  return OOlapicStyleSlide;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OOlapicStyleSlide;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66,"./../../../themes/p11/utils.js":113}],36:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OOlapicStyleSlider = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OOlapicStyleSlider, _AppeaserComponentBas);

  var _super = _createSuper(OOlapicStyleSlider);

  /**
   * Constructor, will run before page loaded
   */
  function OOlapicStyleSlider() {
    var _this;

    _classCallCheck(this, OOlapicStyleSlider);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OOlapicStyleSlider, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OOlapicStyleSlider.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.CLASS_ACTIVE_SLIDE = 'active-slide';
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {}
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._initializeActiveSlide = this._initializeActiveSlide.bind(this);
      this._scaleVisibleSlides = this._scaleVisibleSlides.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_OLAPIC_SLIDES_ADDED, this._onSlidesAdded);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_OLAPIC_SLIDES_ADDED, this._onSlidesAdded);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {}
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._initSlider();
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Initializes slider
     * @private
     */

  }, {
    key: "_initSlider",
    value: function _initSlider() {
      this.$el.slick({
        prevArrow: "<div class='main-slider-arrow'></div>",
        nextArrow: "<div class='main-slider-arrow'></div>",
        speed: 300
      });
      this.$el.on('afterChange', this._initializeActiveSlide);

      if (!Modernizr.mq(_Enums.default.MQ.IS_DESKTOP)) {
        this.$el.on('setPosition', this._scaleVisibleSlides);
      }
    }
    /**
     * Scales the currently visible slides
     * @private
     */

  }, {
    key: "_scaleVisibleSlides",
    value: function _scaleVisibleSlides() {
      if (!this.$activeSlide) return;
      var $imageContainer = this.$activeSlide.find('.image'),
          $nextImageContainer = this.$activeSlide.next().find('.image'),
          $prevImageContainer = this.$activeSlide.prev().find('.image');
      $imageContainer.height($imageContainer.width());
      $nextImageContainer.height($nextImageContainer.width());
      $prevImageContainer.height($prevImageContainer.width());
      this.$activeSlide.css('height', '');
      this.$el.find('.o-olapic-slide:not(.active-slide)').height(this.$activeSlide.height());
    }
    /**
     * Initializes the currently active slide
     * @private
     */

  }, {
    key: "_initializeActiveSlide",
    value: function _initializeActiveSlide(e, slick, currentSlide) {
      if (e.target == this.$el[0]) {
        this.$activeSlide = $(e.currentTarget).find('.o-olapic-slide[data-slick-index=' + currentSlide + ']');
        this.$el.find('.slick-slide').removeClass(this.CLASS_ACTIVE_SLIDE);
        this.$activeSlide.addClass(this.CLASS_ACTIVE_SLIDE);

        this.__mediator._scanNewBlock(this.$activeSlide[0]);
      }
    }
    /**
     * Handle slides added
     * @private
     */

  }, {
    key: "_onSlidesAdded",
    value: function _onSlidesAdded(activeSlideIndex) {
      this.$activeSlide = this.$el.find('[data-slick-index=' + activeSlideIndex + ']').addClass(this.CLASS_ACTIVE_SLIDE);
    }
  }]);

  return OOlapicStyleSlider;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OOlapicStyleSlider;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],37:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

var _Utils = _interopRequireDefault(require('./../../../themes/p11/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OPageContent = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OPageContent, _AppeaserComponentBas);

  var _super = _createSuper(OPageContent);

  /**
   * Constructor, will run before page loaded
   */
  function OPageContent() {
    var _this;

    _classCallCheck(this, OPageContent);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();

    _this._jQueryScopeBinding();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OPageContent, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OPageContent.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_PAGE_CONTENT = '.o-page-content';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Caching DOM elements for performance
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$window = $(window);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._showPageContent = this._showPageContent.bind(this);
      this._hidePageContent = this._hidePageContent.bind(this);
      this._updateMarginMap = this._updateMarginMap.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.ACTION.SHOW_PAGE_CONTENT, this._showPageContent);
      this.subscribe(_Enums.default.ACTION.HIDE_PAGE_CONTENT, this._hidePageContent);
      this.subscribe(_Enums.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, this._updateMarginMap);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.ACTION.SHOW_PAGE_CONTENT, this._showPageContent);
      this.unsubscribe(_Enums.default.ACTION.HIDE_PAGE_CONTENT, this._hidePageContent);
      this.unsubscribe(_Enums.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, this._updateMarginMap);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {}
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Updates the map of margin contributors. A margin contributor is an element contributing to the top
     * margin of this component. By publishing an UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION event, the element
     * can change its contribution. The purpose of this solution is to allow multiple elements to update the top
     * margin of the page content without interference.
     * @param margin - The new margin the element making the call wants to contribute with.
     * @param $element - The element making a margin contribution.
     * @private
     */

  }, {
    key: "_updateMarginMap",
    value: function _updateMarginMap(args) {
      //If this is the first contributor
      if (!this.marginContributors) {
        if (args.duration) {
          this.$el.animate({
            'margin-top': args.margin
          }, args.duration);
        } else {
          this.$el.css('margin-top', args.margin);
        }

        this.marginContributors = [{
          element: args.element,
          margin: args.margin,
          selector: args.selector
        }];
        this.totalMargin = args.margin;
        return;
      }

      var contributor = undefined; //Check if the element is an existing contributor

      for (var i = 0; i < this.marginContributors.length; i++) {
        if (args.element.is(this.marginContributors[i].element) || args.element.is(this.marginContributors[i].selector)) {
          contributor = this.marginContributors[i];
        }
      } //If the element is not an existing contirbutor, create a new one.


      if (!contributor) {
        var newContributor = {
          element: args.element,
          margin: 0,
          selector: args.selector
        };
        this.marginContributors.push(newContributor);
        contributor = newContributor;
      }

      this.totalMargin += args.margin - contributor.margin; //Update the top margin

      if (args.duration) {
        this.$el.animate({
          'margin-top': this.totalMargin
        }, args.duration);
      } else {
        this.$el.css('margin-top', this.totalMargin);
      }

      this.publish(_Enums.default.EVENT.ON_PAGE_CONTENT_MARGIN_CHANGE, contributor.element); //Update the map

      contributor.margin = args.margin;
    }
    /**
     * Displays page content
     * @private
     */

  }, {
    key: "_showPageContent",
    value: function _showPageContent() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      this.$el.css('display', '');
      this.publish(_Enums.default.EVENT.ON_PAGE_CONTENT_SHOW);

      if (options.hasOwnProperty('restoreScrollPosition')) {
        this.$window.scrollTop(options.restoreScrollPosition);
      }
    }
    /**
     * Hides page content
     * @private
     */

  }, {
    key: "_hidePageContent",
    value: function _hidePageContent() {
      this.$el.hide();
      this.publish(_Enums.default.EVENT.ON_PAGE_CONTENT_HIDE);
    }
  }]);

  return OPageContent;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OPageContent;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66,"./../../../themes/p11/utils.js":113}],38:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

var _Utils = _interopRequireDefault(require('./../../../themes/p11/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OPage = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OPage, _AppeaserComponentBas);

  var _super = _createSuper(OPage);

  /**
   * Constructor, will run before page loaded
   */
  function OPage() {
    var _this;

    _classCallCheck(this, OPage);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._queryDOMElements();

    _this._declareConstants();

    _this._attachDOMListeners();

    _this._attachSubscribers();

    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OPage, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OPage.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_PAGE_CONTENT = '.o-page-content';
      this.SELECTOR_OPEN_ON_PAGELOAD = '.open-on-pageload';
      this.SELECTOR_ERROR_MSG = '.m-error';
      this.SELECTOR_INPUT_WITH_ERROR = '.m-input.has-error, m-checkbox.has-error, .m-dropdown.has-error';
      this.SELECTOR_LIGHTBOX = '.o-lightbox';
      this.CLASS_IS_USING_KEYBOARD = 'is-using-keyboard';
      this.WINDOW_WIDTH = 0;
      this.SCROLL_DURATION = 400;
      this.keyboard_used = false;
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      var haltDOMReadyEvents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this.WINDOW_WIDTH = this.$window.outerWidth();
      this.$body = $('body');
      this.$window.on('resize', this._onResize);
      this.$bodyContent.on('click', this._onClick);
      this.$el.on('keydown', this._onKeyDown);
      this.$el.on('keyup', this._onKeyUp);
      this.$el.on('mousedown', this._onMouseDown);
      this.$body.on('click', _Enums.default.SELECTOR.OPEN_LIGHTBOX, this._onOpenLightBoxClick); // Trigger DOM ready event so that all components can do their stuff.

      if (!haltDOMReadyEvents) {
        this.publish(_Enums.default.EVENT.ON_DOCUMENT_READY);
        this.publish(_Enums.default.EVENT.ON_FRAMEWORK_READY);

        this._scanForTemplatesToLoad();
      }
    }
  }, {
    key: "_resumeEvents",
    value: function _resumeEvents() {
      this.publish(_Enums.default.EVENT.ON_DOCUMENT_READY);
      this.publish(_Enums.default.EVENT.ON_FRAMEWORK_READY);

      this._scanForTemplatesToLoad();
    }
    /**
     * Runs on window load.
     */

  }, {
    key: "_onWindowLoad",
    value: function _onWindowLoad() {
      this.publish(_Enums.default.EVENT.ON_WINDOW_LOAD);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onClick = this._onClick.bind(this);
      this._onKeyDown = this._onKeyDown.bind(this);
      this._onKeyUp = this._onKeyUp.bind(this);
      this._onResize = this._onResize.bind(this);
      this._onOpenLightBoxClick = this._onOpenLightBoxClick.bind(this);
      this._onMouseDown = this._onMouseDown.bind(this);
    }
    /**
     * Caches DOM elements
     * @private
     */

  }, {
    key: "_queryDOMElements",
    value: function _queryDOMElements() {
      this.$document = $(document);
      this.$window = $(window);
      this.$body = $('body');
      this.$scrollBody = $('html, body');
      this.$header = $('.o-monki-header');
      this.$pageContent = $('.o-page-content');
      this.$bodyContent = $('html, .o-page-content');
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.ACTION.ENABLE_SCROLL, this._enableScroll);
      this.subscribe(_Enums.default.ACTION.DISABLE_SCROLL, this._disableScroll);
      this.subscribe(_Enums.default.ACTION.FORM_VALIDATION, _Utils.default.Form.validate);
      this.subscribe(_Enums.default.ACTION.INPUT_VALIDATION, _Utils.default.Form.validateInputs);
      this.subscribe(_Enums.default.ACTION.RE_INITIALIZE_SLIDER, _Utils.default.Slider.reInitialize);
      this.subscribe(_Enums.default.ACTION.SCROLL_TO_FORM_ERROR_MSG, this._scrollToFormErrorMsg);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.ACTION.ENABLE_SCROLL, this._enableScroll);
      this.unsubscribe(_Enums.default.ACTION.DISABLE_SCROLL, this._disableScroll);
      this.unsubscribe(_Enums.default.ACTION.FORM_VALIDATION, _Utils.default.Form.validate);
      this.unsubscribe(_Enums.default.ACTION.INPUT_VALIDATION, _Utils.default.Form.validateInputs);
      this.unsubscribe(_Enums.default.ACTION.RE_INITIALIZE_SLIDER, _Utils.default.Slider.reInitialize);
      this.unsubscribe(_Enums.default.ACTION.SCROLL_TO_FORM_ERROR_MSG, this._scrollToFormErrorMsg);
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      var _this2 = this;

      $(function () {
        _this2._onDOMReady();
      });
      this.$window.on('load', function () {
        _this2._onWindowLoad();
      });
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$bodyContent.off('click', this._onClick);
      this.$window.off('resize', this._onResize);
      this.$el.off('keydown', this._onKeyDown);
      this.$body.off('click', _Enums.default.SELECTOR.OPEN_LIGHTBOX, this._onOpenLightBoxClick);
      this.$el.off('mousedown', this._onMouseDown);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Scrolls to the first error message of a given form.
     * @param $form
     * @private
     */

  }, {
    key: "_scrollToFormErrorMsg",
    value: function _scrollToFormErrorMsg($form) {
      var offset = parseInt(this.$el.find(this.SELECTOR_PAGE_CONTENT).css('margin-top')),
          isGlobalMsgVisible = $form.find(this.SELECTOR_ERROR_MSG).filter(':visible').length,
          $elementToScrollTo = isGlobalMsgVisible ? $form.find(this.SELECTOR_ERROR_MSG) : $form.find(this.SELECTOR_INPUT_WITH_ERROR).filter(':visible');
      this.$scrollBody.animate({
        scrollTop: Math.max($elementToScrollTo.offset().top - offset - 5, 0)
      }, this.SCROLL_DURATION);
    }
  }, {
    key: "_getScrollBarWidth",
    value: function _getScrollBarWidth() {
      return window.innerWidth - this.$el.get(0).scrollWidth;
    }
    /**
     * Callback for keydown
     * @param event - standard JS event param.
     * @private
     */

  }, {
    key: "_onKeyDown",
    value: function _onKeyDown(event) {
      this.publish(_Enums.default.EVENT.ON_KEY_DOWN, event);

      if (!this.keyboard_used && event.key.match(_Enums.default.KEYSTROKE.TAB)) {
        this.keyboard_used = true;
        this.$body.addClass(this.CLASS_IS_USING_KEYBOARD);
      }
    }
    /**
     * Callback for keyup
     * @param event - standard JS event param.
     * @private
     */

  }, {
    key: "_onKeyUp",
    value: function _onKeyUp(event) {
      this.publish(_Enums.default.EVENT.ON_KEY_UP, event);
    }
    /**
     * Callback when body is clicked
     * @param event - standard JS event param.
     * @private
     */

  }, {
    key: "_onClick",
    value: function _onClick(event) {
      if ($(event.currentTarget).is('html')) {
        this.publish(_Enums.default.EVENT.ON_BODY_CLICKED, event);
      }
    }
    /**
     * On resize
     * @param e
     * @private
     */

  }, {
    key: "_onResize",
    value: function _onResize(e) {
      var currentPageWidth = $(e.currentTarget).outerWidth();

      if (currentPageWidth != this.WINDOW_WIDTH) {
        this.WINDOW_WIDTH = currentPageWidth;
        this.publish(_Enums.default.EVENT.ON_PAGE_RESIZE, {
          currentPageWidth: currentPageWidth
        });
      }
    }
    /**
     * Scan the document for temples to open on page load
     * @private
     */

  }, {
    key: "_scanForTemplatesToLoad",
    value: function _scanForTemplatesToLoad() {
      this._onOpenLightBoxClick();
    }
    /**
     * Opens the lightbox, the id of the target is passed as template parameter.
     * @param event
     * @private
     */

  }, {
    key: "_onOpenLightBoxClick",
    value: function _onOpenLightBoxClick(event) {
      var $target;

      if (typeof event != 'undefined') {
        event.preventDefault();
        $target = $(event.currentTarget);
      } else {
        $target = $(this.SELECTOR_OPEN_ON_PAGELOAD).first();
        var onceShowing = $target.data('once-showing');

        if (onceShowing) {
          if (Cookies.get(onceShowing) === 'viewed') {
            return;
          } else {
            Cookies.set(onceShowing, 'viewed');
          }
        }
      }

      if ($target.length) {
        var options = $target.data();
        options.$el = $target;

        if (options.template) {
          this.publish(_Enums.default.ACTION.SHOW_LIGHTBOX, options);
        } else {
          _Logger.default.INFO('Could not find template with ID: ', options.template);
        }
      }
    }
    /**
     * Enables scrolling
     * @param options - optional scroll configuration
     * @private
     */

  }, {
    key: "_enableScroll",
    value: function _enableScroll() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        restoreScrollPosition: true
      };
      if (this.navOpen) return;

      if (this.$body.hasClass(_Enums.default.CLASS.DISABLE_SCROLL)) {
        this.$body.css('margin-left', '');
        this.$header.css('padding-right', '');
        this.$body.removeClass(_Enums.default.CLASS.DISABLE_SCROLL);

        if (options.restoreScrollPosition) {
          this._scrollContentToDefaultPosition();
        }

        if (this.$touchScrollElement) {
          $('html,body').off('touchmove', this._preventDefault);
          this.$touchScrollElement.off('touchmove', this._filterTouchMoveEvent);
        }

        this.publish(_Enums.default.EVENT.ON_SCROLL_ENABLED);

        if (options.restoreScrollPosition && this.previousScrollPosition > 0) {
          this.$window.scrollTop(this.previousScrollPosition + this.scrollCompensation);
        }
      }
    }
    /**
     * Disables scrolling
     * @private
     */

  }, {
    key: "_disableScroll",
    value: function _disableScroll() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        forceScrollPosition: true,
        scrollCompensation: 0
      };

      if (!this.$body.hasClass(_Enums.default.CLASS.DISABLE_SCROLL)) {
        this.scrollCompensation = options.scrollCompensation;
        this.previousScrollPosition = this.$window.scrollTop() - this.scrollCompensation;
        this.$touchScrollElement = options.$touchScrollElement;

        if (this.previousScrollPosition < 0) {
          this.previousScrollPosition = 0;
        }

        this.$header.css('padding-right', this._getScrollBarWidth());
        this.$body.addClass(_Enums.default.CLASS.DISABLE_SCROLL);
        this.publish(_Enums.default.EVENT.ON_SCROLL_DISABLED);

        if (options.forceScrollPosition) {
          this._scrollContentToSavedScrollPosition();
        }

        if (this.$touchScrollElement) {
          $('html,body').on('touchmove', this._preventDefault);
          this.$touchScrollElement.on('touchmove', this._filterTouchMoveEvent);
        }
      }
    }
  }, {
    key: "_preventDefault",
    value: function _preventDefault(e) {
      e.preventDefault();
    }
    /**
     * Fixes the touch bugs present when scrolling chaotically which bubbles down to the body.
     * @param e
     * @private
     */

  }, {
    key: "_filterTouchMoveEvent",
    value: function _filterTouchMoveEvent(e) {
      e.stopPropagation();
      var element = e.currentTarget,
          scrollTop = element.scrollTop,
          elementScrollHeight = element.scrollHeight,
          elementHeight = element.offsetHeight,
          currentScroll = scrollTop + elementHeight,
          elementIsScrollable = elementScrollHeight > elementHeight,
          userIsPinching = e.originalEvent.scale !== 1,
          pageIsZoomedIn = window.innerWidth < window.screen.width; //Only allow the touchmove event in the following scenarios

      if (elementIsScrollable || userIsPinching || pageIsZoomedIn) {
        // Offset one pixel from top in order to avoid overflow scrolling
        if (scrollTop == 0) {
          element.scrollTop = 1;
        } // Offset one pixel from bottom in order to avoid overflow scrolling
        else if (currentScroll == elementScrollHeight) {
            element.scrollTop = scrollTop - 1;
          }
      } else {
        e.preventDefault();
      }
    }
  }, {
    key: "_scrollContentToSavedScrollPosition",
    value: function _scrollContentToSavedScrollPosition() {
      this.$el.find(this.SELECTOR_PAGE_CONTENT).css({
        top: "-".concat(this.previousScrollPosition, "px")
      });
    }
  }, {
    key: "_scrollContentToDefaultPosition",
    value: function _scrollContentToDefaultPosition() {
      this.$el.find(this.SELECTOR_PAGE_CONTENT).css({
        top: ''
      });
    }
  }, {
    key: "_onMouseDown",
    value: function _onMouseDown() {
      if (this.keyboard_used) {
        this.keyboard_used = false;
        this.$body.removeClass(this.CLASS_IS_USING_KEYBOARD);
      }
    }
  }]);

  return OPage;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OPage;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66,"./../../../themes/p11/utils.js":113}],39:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OPaymentCheckout = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OPaymentCheckout, _AppeaserComponentBas);

  var _super = _createSuper(OPaymentCheckout);

  /**
   * Constructor, will run before page loaded
   */
  function OPaymentCheckout() {
    var _this;

    _classCallCheck(this, OPaymentCheckout);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OPaymentCheckout, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OPaymentCheckout.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_PAYMENT_SELECTION = '.card-payment-option, .paypal-payment-option';
      this.SELECTOR_CARD_SECTION = '.card-section';
      this.SELECTOR_CARD_SELECTION_SECTION = '.card-selection-section';
      this.SELECTOR_NEW_CARD_SECTION = '.new-card-section';
      this.SELECTOR_RADIO_BTN_SELECT_CARD = '.card-selection-section .m-radio-button';
      this.SELECTOR_CVV_CONTAINER = '.card-cvv-input';
      this.SELECTOR_CVV = '.cvv';
      this.SELECTOR_CHECKBOX_NIF = '.bottom-section .nif input';
      this.SELECTOR_INPUT_NIF = '.bottom-section .nif-text';
      this.SELECTOR_CHECKBOX_FATTURA = '.bottom-section .fattura input';
      this.SELECTOR_INPUT_FATTURA = '.bottom-section .fattura-text';
      this.SELECTOR_BOTTOM_SECTION = '.bottom-section';
      this.SELECTOR_VISIBLE_INPUT = 'input:visible, .m-dropdown:visible input';
      this.SELECTOR_VISIBLE_CHECKBOX = '.m-checkbox:visible input';
      this.SELECTOR_HIDDEN_INPUT = 'input:hidden';
      this.SELECTOR_CHECKBOX_SAVE_CARD = '.save-card input';
      this.SELECTOR_LEFT_SECTION = '.left-selection-section';
      this.SELECTOR_RIGHT_SECTION = '.right-selection-section';
      this.CLASS_ADD_CARD = 'add-card-option';
      this.CLASS_CARD_PAYMENT = 'card-payment-option';
      this.CLASS_NOT_SELECTED = 'not-selected';
      this.IS_CARD_SLOT_FULL = this.$el.find('.card-section .card-option').length > 1;
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$radioBtnPaymentSelection = this.$el.find(this.SELECTOR_PAYMENT_SELECTION);
      this.$radioBtnCardSelection = this.$el.find(this.SELECTOR_RADIO_BTN_SELECT_CARD);
      this.$cardSection = this.$el.find(this.SELECTOR_CARD_SECTION);
      this.$newCardSection = this.$el.find(this.SELECTOR_NEW_CARD_SECTION);
      this.$checkBoxNIF = this.$el.find(this.SELECTOR_CHECKBOX_NIF);
      this.$inputNif = this.$el.find(this.SELECTOR_INPUT_NIF);
      this.$checkBoxFATTURA = this.$el.find(this.SELECTOR_CHECKBOX_FATTURA);
      this.$inputFattura = this.$el.find(this.SELECTOR_INPUT_FATTURA);
      this.$bottomSection = this.$el.find(this.SELECTOR_BOTTOM_SECTION);
      this.$checkBoxSaveCard = this.$el.find(this.SELECTOR_CHECKBOX_SAVE_CARD);
      this.$leftSection = this.$el.find(this.SELECTOR_LEFT_SECTION);
      this.$rightSection = this.$el.find(this.SELECTOR_RIGHT_SECTION);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onPaymentMethodChosen = this._onPaymentMethodChosen.bind(this);
      this._onCardChosen = this._onCardChosen.bind(this);
      this._onNifCheckboxChange = this._onNifCheckboxChange.bind(this);
      this._onFatturaCheckboxChange = this._onFatturaCheckboxChange.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$radioBtnPaymentSelection.on('change', this._onPaymentMethodChosen);
      this.$radioBtnCardSelection.on('change', this._onCardChosen);
      this.$checkBoxNIF.on('change', this._onNifCheckboxChange);
      this.$checkBoxFATTURA.on('change', this._onFatturaCheckboxChange);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$radioBtnPaymentSelection.off('change', this._onPaymentMethodChosen);
      this.$radioBtnCardSelection.off('change', this._onCardChosen);
      this.$checkBoxNIF.on('change', this._onNifCheckboxChange);
      this.$checkBoxFATTURA.on('change', this._onFatturaCheckboxChange);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._prepareExistingCardSection();

      this.$newCardSection.add(this.SELECTOR_CVV_CONTAINER).find(this.SELECTOR_HIDDEN_INPUT).prop('disabled', true);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Displays/Hides nif input field
     * @param e
     * @private
     */

  }, {
    key: "_onNifCheckboxChange",
    value: function _onNifCheckboxChange(e) {
      var $target = $(e.currentTarget);

      if ($target.prop('checked')) {
        this.$inputNif.show();
      } else {
        this.$inputNif.hide();
      }
    }
    /**
     * Displays/Hides fattura input field
     * @param e
     * @private
     */

  }, {
    key: "_onFatturaCheckboxChange",
    value: function _onFatturaCheckboxChange(e) {
      var $target = $(e.currentTarget);

      if ($target.prop('checked')) {
        this.$inputFattura.show();
      } else {
        this.$inputFattura.hide();
      }
    }
    /**
     * Checks if the user has a saved card. If so, make sure the new card form is visible.
     * @private
     */

  }, {
    key: "_prepareExistingCardSection",
    value: function _prepareExistingCardSection() {
      var $cardSelectionSection = this.$el.find(this.SELECTOR_CARD_SELECTION_SECTION);

      if ($cardSelectionSection.length) {
        this.$newCardSection.addClass(_Enums.default.CLASS.DISPLAY_NONE);
      }
    }
    /**
     * Event handler for when a user has chosen a card to pay with.
     * @param e
     * @private
     */

  }, {
    key: "_onCardChosen",
    value: function _onCardChosen(e) {
      var $target = $(e.currentTarget); //If the user has chosen to add a new card, show and enable new card form.

      if ($target.parent().hasClass(this.CLASS_ADD_CARD)) {
        this.$newCardSection.removeClass(_Enums.default.CLASS.DISPLAY_NONE).find(this.SELECTOR_VISIBLE_INPUT).prop('disabled', false); //Disable all cvv validations besides the one for the new card.

        this.$el.find(this.SELECTOR_CARD_SELECTION_SECTION + ' ' + this.SELECTOR_CVV_CONTAINER + this.SELECTOR_CVV + ' input').prop('disabled', true);

        if (!this.IS_CARD_SLOT_FULL) {
          this.$checkBoxSaveCard.prop('disabled', false);
        }
      } else {
        //Hide card section and disable input validation
        this.$newCardSection.addClass(_Enums.default.CLASS.DISPLAY_NONE).find(this.SELECTOR_HIDDEN_INPUT).prop('disabled', true); //Show and enable input validation for chosen card

        $target.siblings(this.SELECTOR_CVV_CONTAINER).find(this.SELECTOR_CVV).removeClass(_Enums.default.CLASS.DISPLAY_NONE).find(this.SELECTOR_VISIBLE_INPUT).prop('disabled', false);
      } //Disable input validation for the card that is not chosen by the user.


      this.$radioBtnCardSelection.not($target).siblings(this.SELECTOR_CVV_CONTAINER).find(this.SELECTOR_CVV).find(this.SELECTOR_VISIBLE_INPUT).prop('disabled', true); //Hide the cvv input field for the card that is not chosen by the user.

      this.$radioBtnCardSelection.not($target).siblings(this.SELECTOR_CVV_CONTAINER).find(this.SELECTOR_CVV).addClass(_Enums.default.CLASS.DISPLAY_NONE);
    }
    /**
     * Event handler for when a user has chosen a payment method (card or paypal).
     * @param e
     * @private
     */

  }, {
    key: "_onPaymentMethodChosen",
    value: function _onPaymentMethodChosen(e) {
      var $target = $(e.currentTarget);

      if ($target.hasClass(this.CLASS_CARD_PAYMENT)) {
        this.$cardSection.show().find(this.SELECTOR_VISIBLE_INPUT + ', ' + this.SELECTOR_VISIBLE_CHECKBOX).prop('disabled', false);
        this.$leftSection.removeClass(this.CLASS_NOT_SELECTED);
        this.$rightSection.addClass(this.CLASS_NOT_SELECTED);
      } else {
        this.$cardSection.find(this.SELECTOR_VISIBLE_INPUT).add(this.$checkBoxSaveCard).prop('disabled', true);
        this.$cardSection.hide();
        this.$rightSection.removeClass(this.CLASS_NOT_SELECTED);
        this.$leftSection.addClass(this.CLASS_NOT_SELECTED);
      }

      this.$bottomSection.show();
    }
  }]);

  return OPaymentCheckout;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OPaymentCheckout;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],40:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OPickUpLocation = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OPickUpLocation, _AppeaserComponentBas);

  var _super = _createSuper(OPickUpLocation);

  /**
   * Constructor, will run before page loaded
   */
  function OPickUpLocation() {
    var _this;

    _classCallCheck(this, OPickUpLocation);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OPickUpLocation, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OPickUpLocation.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_LOCATION_WRAPPER = '.wrapper';
      this.SELECTOR_RADIO_BUTTON_INPUT = '.a-radio-button';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onMapMarkerClick = this._onMapMarkerClick.bind(this);
      this._onWrapperClick = this._onWrapperClick.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_MAP_MARKER_CLICK, this._onMapMarkerClick);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_MAP_MARKER_CLICK, this._onMapMarkerClick);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$el.on('click', this.SELECTOR_LOCATION_WRAPPER, this._onWrapperClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$el.off('click', this.SELECTOR_LOCATION_WRAPPER, this._onWrapperClick);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Handles a click on a map marker
     * @private
     */

  }, {
    key: "_onMapMarkerClick",
    value: function _onMapMarkerClick(storeId) {
      var clickedLocation = this.$el.find(this.SELECTOR_LOCATION_WRAPPER + "[data-store-id='" + storeId + "']"),
          radioToSelect = clickedLocation.find(this.SELECTOR_RADIO_BUTTON_INPUT);
      radioToSelect.trigger('click');
    }
    /**
     * Communicates to the map that a new location has been selected
     * @private
     */

  }, {
    key: "_onWrapperClick",
    value: function _onWrapperClick(e) {
      var storeId = $(e.target).closest(this.SELECTOR_LOCATION_WRAPPER).data('store-id');
      this.publish(_Enums.default.ACTION.CENTER_MAP_ON_MARKER, storeId);
    }
  }]);

  return OPickUpLocation;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OPickUpLocation;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],41:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

var _Utils = _interopRequireDefault(require('./../../../themes/p11/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OPraCommon = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OPraCommon, _AppeaserComponentBas);

  var _super = _createSuper(OPraCommon);

  /**
   * Constructor, will run before page loaded
   */
  function OPraCommon() {
    var _this;

    _classCallCheck(this, OPraCommon);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OPraCommon, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OPraCommon.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.sendData = {};
      this.panelData = {};
      this.response = 'undefined';
      this.locale = '';
      this.panel = '';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._attachSubscribers();

      this._cacheDOMElements();

      this._attachDOMListeners();
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$window = $(window);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onBeforeAjaxPost = this._onBeforeAjaxPost.bind(this);
      this._preparePdpSendData = this._preparePdpSendData.bind(this);
      this._prepareSearchSendData = this._prepareSearchSendData.bind(this);
      this._prepareOtherSendData = this._prepareOtherSendData.bind(this);
      this._extractLocale = this._extractLocale.bind(this);
      this._ajaxPost = this._ajaxPost.bind(this);
      this._parseResponse = this._parseResponse.bind(this);
      this._onProductClick = this._onProductClick.bind(this);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {}
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Prepare config for Ajax POST call to retrieve PRA data
     * @private
     */

  }, {
    key: "_onBeforeAjaxPost",
    value: function _onBeforeAjaxPost() {
      // if productArticleDetails not available, Ajax call cannot be made
      if (typeof productArticleDetails === 'undefined' && typeof displayedDefaultArticles === 'undefined') {
        _Logger.default.WARN(this.constructor.name, ':: PRA data cannot be requested, neither productArticleDetails nor displayedDefaultArticles defined');

        return;
      } // Extract locale


      this._extractLocale();

      this.panel = this.$el.data('praPanel'); // Prepare data necessary for the call

      if (this.panel === 'product-detail-page') {
        if (typeof productArticleDetails != 'undefined') {
          this._preparePdpSendData();
        }
      } else if (this.panel === 'search-page') {
        this._prepareSearchSendData();
      } else {
        this._prepareOtherSendData();
      } // Get PRA data - make Ajax POST


      this._ajaxPost();
    }
    /**
     * Util for _onBeforeAjaxPost to prepare config for Ajax call dedicated to PDP calls
     * @private
     */

  }, {
    key: "_preparePdpSendData",
    value: function _preparePdpSendData() {
      var product_key = '',
          style_with_default_articles = '';

      if (typeof productArticleDetails.baseProductCode !== 'undefined') {
        var localeValue = this.locale === 'en_de' ? 'en_eur' : this.locale;
        product_key = productArticleDetails.baseProductCode + '_' + localeValue;
      }

      if (typeof productArticleDetails.styleWithArticles !== 'undefined') {
        style_with_default_articles = productArticleDetails.styleWithArticles.join(',');
      }

      this.sendData = {
        product_key: product_key,
        style_with_default_articles: style_with_default_articles
      };
    }
    /**
     * Util for _onBeforeAjaxPost to prepare config for Ajax call dedicated to search page calls
     * @private
     */

  }, {
    key: "_prepareSearchSendData",
    value: function _prepareSearchSendData() {
      var search_phrase = '',
          displayed_default_articles = '',
          search_results_as_cart = '';

      if (typeof searchTerm !== 'undefined') {
        search_phrase = searchTerm;
      }

      if (typeof displayedDefaultArticles !== 'undefined') {
        displayed_default_articles = displayedDefaultArticles;
      }

      if (typeof searchProductAsCartParam !== 'undefined') {
        search_results_as_cart = searchProductAsCartParam;
      }

      this.sendData = {
        search_phrase: search_phrase,
        displayed_default_articles: displayed_default_articles,
        search_results_as_cart: search_results_as_cart
      };
    }
    /**
     * Util for _onBeforeAjaxPost to prepare config for Ajax call
     * @private
     */

  }, {
    key: "_prepareOtherSendData",
    value: function _prepareOtherSendData() {
      var category_path = '',
          displayed_default_articles = '';

      if (typeof departmentCategoryPaths !== 'undefined') {
        category_path = departmentCategoryPaths;
      } else if (typeof utag !== 'undefined') {
        category_path = utag.data.category_id;
      }

      if (typeof displayedDefaultArticles !== 'undefined') {
        displayed_default_articles = displayedDefaultArticles;
      }

      this.sendData = {
        department_category_path: category_path,
        displayed_default_articles: displayed_default_articles
      };
    }
    /**
     * Util for _onBeforeAjaxPost to prepare locale for Ajax call
     * @private
     */

  }, {
    key: "_extractLocale",
    value: function _extractLocale() {
      var locale = this.$el.data('praLocale');

      if (!locale) {
        var regex = new RegExp(/[a-z]*_[A-Z]*/i);
        locale = window.location.pathname.match(regex)[0];
      } else if (locale === 'en') {
        locale = 'en_ww';
      }

      this.locale = locale;
    }
    /**
     * Ajax POST function to retrieve PRA panels
     * @param locale
     * @param panel - PRA id
     * @private
     */

  }, {
    key: "_ajaxPost",
    value: function _ajaxPost() {
      var _this2 = this;

      if (typeof pra1Response !== 'undefined') {
        this._parseResponse(pra1Response); // Used for testing in PL only. TODO: Remove when testing done

      } else {
        $.ajax({
          data: JSON.stringify(this.sendData),
          dataType: 'json',
          contentType: 'application/json',
          method: 'post',
          timeout: 5000,
          url: '/' + this.locale + '/pra/panel/' + this.panel
        }).done(function (data) {
          _this2.response = data;

          _this2._parseResponse();
        }).fail(function (jqXHR, textStatus, errorThrown) {
          _Logger.default.WARN('Ajax POST error', jqXHR, textStatus, errorThrown);

          _this2.$el.empty();
        });
      }
    }
    /**
     * Parse received JSON data by _ajaxPost
     * @param response (optional)
     * @private
     */

  }, {
    key: "_parseResponse",
    value: function _parseResponse(response) {
      var data = response ? response : this.response,
          supportedPanelId = this.$el.data('praId');

      try {
        // Filter out only supported (or expected) PRA panel and un-list
        var supportedPanelList = data.panels.filter(function (panel) {
          return panel.attributes.panel_id === supportedPanelId;
        });

        if (supportedPanelList.length > 0) {
          //un-nest
          var supportedPanel = supportedPanelList[0].panels[0]; // Fill out object metadata

          this.panelData.id = supportedPanelId;
          this.panelData.name = supportedPanel.attributes.panel_name;
          this.panelData.products = []; // Extract received product info if at least 1 product retrieved

          for (var j = 0; j < supportedPanel.panels.length; j++) {
            if (supportedPanel.panels[j].products.length > 0) {
              for (var k = 0; k < supportedPanel.panels[j].products.length; k++) {
                this.panelData.products.push(supportedPanel.panels[j].products[k]);
              }
            } else {
              _Utils.default.Accessibility.hide(this.$el);
            }
          }

          this.publish(_Enums.default.ACTION.POPULATE_DATA_ON_SUGGESTIONS, this.panelData);
        } else {
          _Utils.default.Accessibility.hide(this.$el);
        }
      } catch (err) {
        _Logger.default.WARN(this.constructor.name, ':: Could not process extraction of retrieved PRA data', err, data);
      }
    }
  }, {
    key: "_transformLinkToCurrentContextPath",
    value: function _transformLinkToCurrentContextPath(link) {
      if (typeof hm !== 'undefined') {
        return hm.multiCountry.transformLinkToCurrentContextPath(link);
      }
    }
    /**
     * Handles clicks on PRA product tiles
     * @param $event
     * @param ticket
     * @param productId
     * @private
     */

  }, {
    key: "_onProductClick",
    value: function _onProductClick($event, ticket, productId) {
      var praType = this.panel;
      this.publish(_Enums.default.EVENT.ON_PRA_PRODUCT_CLICKED, {
        event: $event,
        ticket: ticket,
        productId: productId,
        praType: praType
      });
    }
  }]);

  return OPraCommon;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OPraCommon;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66,"./../../../themes/p11/utils.js":113}],42:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var ORemoveConfirm = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(ORemoveConfirm, _AppeaserComponentBas);

  var _super = _createSuper(ORemoveConfirm);

  /**
   * Constructor, will run before page loaded
   */
  function ORemoveConfirm() {
    var _this;

    _classCallCheck(this, ORemoveConfirm);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(ORemoveConfirm, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(ORemoveConfirm.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_REMOVE = '.js-confirm-remove';
      this.SELECTOR_CANCEL = '.js-confirm-cancel';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this.$removeBtn = this.$el.find(this.SELECTOR_REMOVE);
      this.$cancelBtn = this.$el.find(this.SELECTOR_CANCEL);

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onRemoveBtnClick = this._onRemoveBtnClick.bind(this);
      this.cancel = this.cancel.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$removeBtn.on('click', this._onRemoveBtnClick);
      this.$cancelBtn.on('click', this.cancel);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$removeBtn.off('click', this._onRemoveBtnClick);
      this.$cancelBtn.off('click', this.cancel);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Callback for when remove button is clicked
     * @private
     */

  }, {
    key: "_onRemoveBtnClick",
    value: function _onRemoveBtnClick() {
      this.publish(_Enums.default.ACTION.HIDE_LIGHTBOX, {
        buttonClicked: 'OK'
      });
    }
    /**
     * Cancels the dialog
     */

  }, {
    key: "cancel",
    value: function cancel() {
      this.publish(_Enums.default.ACTION.HIDE_LIGHTBOX, {
        buttonClicked: 'CANCEL'
      });
    }
  }]);

  return ORemoveConfirm;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = ORemoveConfirm;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66}],43:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

var _Utils = _interopRequireDefault(require('./../../../themes/p11/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OSliderCofs = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OSliderCofs, _AppeaserComponentBas);

  var _super = _createSuper(OSliderCofs);

  /**
   * Constructor, will run before page loaded
   */
  function OSliderCofs() {
    var _this;

    _classCallCheck(this, OSliderCofs);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OSliderCofs, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OSliderCofs.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_SLIDER = '.slider';
      this.SELECTOR_CLONED_COMPONENTS = '.swiper-slide-duplicate, .swiper-slide-duplicate *[data-component-id]';
      this.SELECTOR_SLIDE = '.swiper-slide';
      this.SELECTOR_PRODUCT_COFS = '.o-product-cofs';
      this.SELECTOR_IS_REDUNDANT_WRAPPER = '.swiper-wrapper .swiper-wrapper.swiper-slide';
      this.SELECTOR_VISIBLE_SLIDE = '.swiper-slide-visible';
      this.SELECTOR_INVISIBLE_SLIDE = ':not(.swiper-slide-visible)';
      this.SELECTOR_LINK = '.a-link';
      this.DATA_DESKTOP_SLIDES = 'slides-desktop';
      this.DATA_TABLET_SLIDES = 'slides-tablet';
      this.DATA_MOBILE_SLIDES = 'slides-mobile';
      this.SPEED = 1500;
      this.TOUCH_SPEED = 300;
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._attachSubscribers();

      this._cacheDOMElements();

      this._setSliderProperties();

      this._sliderSetUp();

      this._attachMQHandlers();

      this._attachDOMListeners();
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$slider = this.$el.find(this.SELECTOR_SLIDER);
      this.$slides = this.$el.find(this.SELECTOR_SLIDE);
      this.$slideLinks = this.$slides.find(this.SELECTOR_LINK);
      this._hideInvisibleContent = this._hideInvisibleContent.bind(this);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._refresh = this._refresh.bind(this);
      this._initCloneSlides = this._initCloneSlides.bind(this);
      this._initSlider = this._initSlider.bind(this);
      this._destroySlider = this._destroySlider.bind(this);
      this._onDisabledResize = this._onDisabledResize.bind(this);
      this._setSliderProperties = this._setSliderProperties.bind(this);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {
      this._initCloneSlides();
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_PAGE_CONTENT_SHOW, this._refresh);
      this.subscribe(_Enums.default.ACTION.RE_INITIALIZE_SLIDER, this._reInit);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_PAGE_CONTENT_SHOW, this._refresh);
      this.unsubscribe(_Enums.default.ACTION.RE_INITIALIZE_SLIDER, this._reInit);
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {}
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
    /**
     * Attach media query handlers
     * @private
     */

  }, {
    key: "_attachMQHandlers",
    value: function _attachMQHandlers() {
      var amountOfSlides = this.$slider.find(_Enums.default.SWIPER.SELECTOR_SWIPER_WRAPPER).children().length;
      this.MQMobileHandler = {
        match: amountOfSlides > this.$el.data(this.DATA_MOBILE_SLIDES) ? this._initSlider : this._destroySlider
      };
      this.MQMediumHandler = {
        match: amountOfSlides > this.$el.data(this.DATA_TABLET_SLIDES) ? this._initSlider : this._destroySlider
      };
      this.MQDesktopHandler = {
        match: amountOfSlides > this.$el.data(this.DATA_DESKTOP_SLIDES) ? this._initSlider : this._destroySlider
      };
      enquire.register(_Enums.default.MQ.IS_MOBILE, this.MQMobileHandler);
      enquire.register(_Enums.default.MQ.IS_TABLET, this.MQMediumHandler);
      enquire.register(_Enums.default.MQ.IS_DESKTOP, this.MQDesktopHandler);
    }
    /**
     * Detach media query handlers
     * @private
     */

  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {
      enquire.unregister(_Enums.default.MQ.IS_MOBILE, this.MQMobileHandler);
      enquire.unregister(_Enums.default.MQ.IS_TABLET, this.MQMediumHandler);
      enquire.unregister(_Enums.default.MQ.IS_DESKTOP, this.MQDesktopHandler);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Sets the properties for Swiper.
     * @private
     */

  }, {
    key: "_setSliderProperties",
    value: function _setSliderProperties() {
      var _this2 = this;

      var color = this.$slider.css('color'),
          amountOfSlides = Math.max(this.$slider.find(_Enums.default.SWIPER.SELECTOR_SWIPER_WRAPPER).children().length, this.$slider.children().length); //If the swiper has been initialized once, the slides are wrapped in 'swiper-wrapper'.

      this.settings = {
        speed: Modernizr.touchevents ? this.TOUCH_SPEED : this.SPEED,
        simulateTouch: false,
        slidesPerView: this.$el.data(this.DATA_MOBILE_SLIDES),
        slidesPerGroup: this.$el.data(this.DATA_MOBILE_SLIDES),
        watchSlidesProgress: true,
        watchSlidesVisibility: true,
        navigation: {
          nextEl: _Enums.default.SWIPER.SELECTOR_ARROW_NEXT,
          prevEl: _Enums.default.SWIPER.SELECTOR_ARROW_PREV
        },
        pagination: {
          el: _Enums.default.SWIPER.SELECTOR_PAGINATION,
          renderBullet: function renderBullet(i, className) {
            return "<button type='button' class='" + className + ' ' + _Enums.default.CLASS.HAS_DISABLED_BUTTON_STYLE + "' style='background-color: " + color + "'></button>";
          },
          clickable: true
        },
        loop: amountOfSlides > this.$el.data(this.DATA_DESKTOP_SLIDES),
        breakpoints: {
          767: {
            slidesPerView: this.$el.data(this.DATA_TABLET_SLIDES),
            slidesPerGroup: this.$el.data(this.DATA_TABLET_SLIDES)
          },
          1024: {
            slidesPerView: this.$el.data(this.DATA_DESKTOP_SLIDES),
            slidesPerGroup: this.$el.data(this.DATA_DESKTOP_SLIDES)
          }
        },
        on: {
          init: function init() {
            _this2.$el.addClass(_Enums.default.SWIPER.CLASS_INITIALIZED);

            _this2.publish(_Enums.default.EVENT.ON_SWIPER_INITIALIZED, _this2.$el);
          },
          slideChangeTransitionEnd: this._hideInvisibleContent
        }
      };

      if (this.$el.data('slick-autoplay')) {
        this.settings.autoplay = {
          delay: this.$el.data('slick-autoplay-speed') ? this.$el.data('slick-autoplay-speed') : 4000
        };
      }
    }
    /**
     * Initializes the slider
     * @private
     */

  }, {
    key: "_initSlider",
    value: function _initSlider() {
      this.$el.removeClass(_Enums.default.CLASS.IS_DISABLED_STATE);

      if (!this.slider) {
        if (this.disabledListenerAttached) {
          $(window).off('resize', this._onDisabledResize);
          this.disabledListenerAttached = false;
        }

        this.slider = new Swiper(this.$slider, this.settings);

        this._initCloneSlides();

        this.$redundantWrapper = this.$el.find(this.SELECTOR_IS_REDUNDANT_WRAPPER);
        this.$slides = this.$slider.find(this.SELECTOR_SLIDE);
        this.$slideLinks = this.$slides.find(this.SELECTOR_LINK);

        if (this.$redundantWrapper.length) {
          this.$redundantWrapper.remove();
        }

        this._hideInvisibleContent();
      }
    }
    /**
     * Destroys the slider
     * @private
     */

  }, {
    key: "_destroySlider",
    value: function _destroySlider() {
      this.$el.addClass(_Enums.default.CLASS.IS_DISABLED_STATE);

      this._onDisabledResize();

      if (!this.disabledListenerAttached) {
        $(window).on('resize', this._onDisabledResize);
        this.disabledListenerAttached = true;
      }

      this._onDisabledResize();

      if (this.slider) {
        this.slider.destroy(true, true);
        this.slider = undefined;
      }
    }
    /**
     * Sets up slider HTML
     * @private
     */

  }, {
    key: "_sliderSetUp",
    value: function _sliderSetUp() {
      this.$slider.addClass(_Enums.default.SWIPER.CLASS_CONTAINER); // Wrap the slides

      this.$slider.children().addClass(_Enums.default.SWIPER.CLASS_SLIDE).wrapAll("<div class='" + _Enums.default.SWIPER.CLASS_WRAPPER + "'></div>"); // Add arrows and pagination

      this.$slider.append("<button type='button' aria-label='previous' class='" + _Enums.default.SWIPER.CLASS_ARROW_PREV + ' ' + _Enums.default.CLASS.HAS_DISABLED_BUTTON_STYLE + "'></button>").append("<button type='button' aria-label='next' class='" + _Enums.default.SWIPER.CLASS_ARROW_NEXT + ' ' + _Enums.default.CLASS.HAS_DISABLED_BUTTON_STYLE + "'></button>").append("<div class='" + _Enums.default.SWIPER.CLASS_PAGINATION + "'></div>");
    }
    /**
     * Adjusts the width of the slides when disabled
     * @private
     */

  }, {
    key: "_onDisabledResize",
    value: function _onDisabledResize() {
      var amountOfSlides = this.$el.data(this.DATA_DESKTOP_SLIDES);

      if (Modernizr.mq(_Enums.default.MQ.IS_MOBILE)) {
        amountOfSlides = this.$el.data(this.DATA_MOBILE_SLIDES);
      } else if (Modernizr.mq(_Enums.default.MQ.IS_TABLET)) {
        amountOfSlides = this.$el.data(this.DATA_TABLET_SLIDES);
      }

      this.$el.find(_Enums.default.SWIPER.SELECTOR_SLIDE).css('width', this.$slider.outerWidth() / amountOfSlides);
    }
  }, {
    key: "_refresh",
    value: function _refresh() {
      if (this.slider) {
        this.slider.update();
      }
    }
    /**
     * Re-initializes slider
     * @private
     */

  }, {
    key: "_reInit",
    value: function _reInit($slider) {
      if (this.$slider.is($slider)) {
        if (this.slider) {
          this.slider.destroy(true, true);
          this.slider = undefined;
        }

        this.$el.find(_Enums.default.SWIPER.SELECTOR_SWIPER_WRAPPER).contents().unwrap();
        this.$slider.find('> *:not(' + _Enums.default.SWIPER.SELECTOR_SWIPER_CONTROLS + ')').addClass(_Enums.default.SWIPER.CLASS_SLIDE).wrapAll("<div class='" + _Enums.default.SWIPER.CLASS_WRAPPER + "'></div>");

        this._setSliderProperties();

        this._detachMQHandlers();

        this._attachMQHandlers();
      }
    }
    /**
     * When infinite option is true swiper will clone slides.
     * We need to initialize our scripts for these clones in order to avoid ugly transitions.
     * @private
     */

  }, {
    key: "_initCloneSlides",
    value: function _initCloneSlides() {
      this.$slider.find(this.SELECTOR_CLONED_COMPONENTS).removeAttr('data-component-id');

      this.__mediator._scanNewBlock(this.$slider[0]);
    }
    /**
     * Makes invisible slides aria-hidden and invisible slider links un-focusable
     * @private
     */

  }, {
    key: "_hideInvisibleContent",
    value: function _hideInvisibleContent() {
      // reset previously set Accessibility rules
      _Utils.default.Accessibility.clear(this.$slides.add(this.$slideLinks));

      var $invisibleSlides = this.$slides.filter(this.SELECTOR_INVISIBLE_SLIDE);
      var $invisibleLinks = $invisibleSlides.find(this.SELECTOR_LINK);

      _Utils.default.Accessibility.hide($invisibleSlides);

      _Utils.default.Accessibility.preventFocus($invisibleLinks);
    }
  }]);

  return OSliderCofs;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OSliderCofs;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66,"./../../../themes/p11/utils.js":113}],44:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

var _Utils = _interopRequireDefault(require('./../../../themes/p11/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OSocialSignInPopup = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OSocialSignInPopup, _AppeaserComponentBas);

  var _super = _createSuper(OSocialSignInPopup);

  /**
   * Constructor, will run before page loaded
   */
  function OSocialSignInPopup() {
    var _this;

    _classCallCheck(this, OSocialSignInPopup);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OSocialSignInPopup, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OSocialSignInPopup.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_CONFIRMATION_BUTTON = '.confirmation-button';
      this.SELECTOR_ERROR_BUTTON = '.error-button';
      this.SELECTOR_CONSENT_CHECKBOX = '#policies > .a-checkbox';
      this.SELECTOR_NEWSLETTER_CHECKBOX = '#newsletter > .a-checkbox';
      this.SELECTOR_M_CHECKBOX = '.m-checkbox';
      this.SELECTOR_M_INPUT = '.e-mail-input > .m-input';
      this.SELECTOR_EMAIL_INPUT = '.a-input';
      this.SELECTOR_LIGHTBOX = '.o-lightbox';
      this.SELECTOR_INFO_HEADING = '.info-heading';
      this.SELECTOR_INFO_TEXT_EMAIL = '.info-text-email';
      this.SELECTOR_INFO_TEXT_CONSENT = '.info-text-consent';
      this.SELECTOR_SOCIAL_SIGN_IN_BUTTONS = '.o-social-sign-in-buttons';
      this.CLASS_ASK_FOR_EMAIL = 'ask-for-email';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachMQHandlers();

      this._attachDOMListeners();
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$confirmationButton = this.$el.find(this.SELECTOR_CONFIRMATION_BUTTON);
      this.$errorButton = this.$el.find(this.SELECTOR_ERROR_BUTTON);
      this.$mInput = this.$el.find(this.SELECTOR_M_INPUT);
      this.$emailInput = this.$mInput.find(this.SELECTOR_EMAIL_INPUT);
      this.$consentCheckbox = this.$el.find(this.SELECTOR_CONSENT_CHECKBOX);
      this.$newsletterCheckbox = this.$el.find(this.SELECTOR_NEWSLETTER_CHECKBOX);
      this.$lightBox = this.$el.closest(this.SELECTOR_LIGHTBOX);
      this.$infoHeading = this.$el.find(this.SELECTOR_INFO_HEADING);
      this.$infoTextEmail = this.$el.find(this.SELECTOR_INFO_TEXT_EMAIL);
      this.$infoTextConsent = this.$el.find(this.SELECTOR_INFO_TEXT_CONSENT);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onSubmit = this._onSubmit.bind(this);
      this._removeErrorClass = this._removeErrorClass.bind(this);
      this._onCheckBoxClick = this._onCheckBoxClick.bind(this);
      this._onErrorButtonClick = this._onErrorButtonClick.bind(this);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_LIGHTBOX_CLOSE, this._removeErrorClass);
      this.subscribe(_Enums.default.EVENT.ON_LIGHTBOX_OPEN, this._hideErrorMessages);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_LIGHTBOX_CLOSE, this._removeErrorClass);
      this.unsubscribe(_Enums.default.EVENT.ON_LIGHTBOX_OPEN, this._hideErrorMessages);
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$confirmationButton.on('click', this._onSubmit);
      this.$errorButton.on('click', this._onErrorButtonClick);
      this.$consentCheckbox.on('change', this._onCheckBoxClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$confirmationButton.off('click', this._onSubmit);
      this.$errorButton.off('click', this._onErrorButtonClick);
      this.$consentCheckbox.off('change', this._onCheckBoxClick);
    }
    /**
     * Attach media query handlers
     * @private
     */

  }, {
    key: "_attachMQHandlers",
    value: function _attachMQHandlers() {}
    /**
     * Detach media query handlers
     * @private
     */

  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {}
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_onSubmit",
    value: function _onSubmit() {
      var consent = this.$consentCheckbox.prop('checked') ? true : false,
          authCode = '',
          socialChannel = '',
          email = '';

      if (this.$lightBox.data('authcode')) {
        authCode = this.$lightBox.data('authcode');
      }

      if (this.$lightBox.data('social-channel')) {
        socialChannel = this.$lightBox.data('social-channel');
      }

      if (consent && this.$lightBox.hasClass(this.CLASS_ASK_FOR_EMAIL)) {
        if (this.$emailInput.val() && !this.$mInput.hasClass(_Enums.default.CLASS.HAS_ERROR)) {
          email = this.$emailInput.val();

          this._ajaxPost(authCode, socialChannel, email);
        } else {
          this.$infoTextEmail.show();
        }
      } else if (consent) {
        this._ajaxPost(authCode, socialChannel, email);
      } else {
        this.$consentCheckbox.closest(this.SELECTOR_M_CHECKBOX).addClass(_Enums.default.CLASS.HAS_ERROR);
      }
    }
  }, {
    key: "_removeErrorClass",
    value: function _removeErrorClass() {
      if (this.$lightBox.hasClass(_Enums.default.CLASS.HAS_ERROR)) {
        this.$lightBox.removeClass(_Enums.default.CLASS.HAS_ERROR);
      }
    }
  }, {
    key: "_hideErrorMessages",
    value: function _hideErrorMessages() {
      if (this.$lightBox.hasClass(this.CLASS_ASK_FOR_EMAIL)) {
        this.$infoTextConsent.hide();
      } else {
        this.$infoTextEmail.hide();
      }
    }
  }, {
    key: "_onCheckBoxClick",
    value: function _onCheckBoxClick() {
      if (this.$consentCheckbox.prop('checked')) {
        this.$consentCheckbox.closest(this.SELECTOR_M_CHECKBOX).removeClass(_Enums.default.CLASS.HAS_ERROR);
      }
    }
  }, {
    key: "_onErrorButtonClick",
    value: function _onErrorButtonClick() {
      this.publish(_Enums.default.ACTION.HIDE_LIGHTBOX);
    }
    /*--------------------- POST TO HYBRIS -----------------------*/

  }, {
    key: "_ajaxPost",
    value: function _ajaxPost(authCode, socialChannel, email) {
      var createAccount = true,
          $this = this,
          newsletter = this.$newsletterCheckbox.prop('checked'),
          url = _Utils.default.ConstructUrl.localeUrl('/socialLogin/createAccount'),
          requestObject = '{"token":"' + authCode + '","socialChannel":"' + socialChannel + '","createAccount":"' + createAccount + '","email":"' + email + '","subscribeNewsletter":"' + newsletter + '"}'; // Send the tokens to the server


      $.ajax({
        type: 'POST',
        url: url,
        //Updated in AEM to point to hybris service: https://www.weekday.com/en_sek/socialLogin/createAccount
        // Always include an `X-Requested-With` header in every AJAX request,
        // to protect against CSRF attacks.
        headers: {
          'X-Requested-With': 'XMLHttpRequest'
        },
        dataType: 'json',
        contentType: 'application/json; charset=utf-8',
        success: function success(result) {
          if (result.responseStatusCode === 'ok' && (result.responseNumber === '201' || result.responseNumber === '205')) {
            //New account or login
            var redirectUrl = $($this.SELECTOR_SOCIAL_SIGN_IN_BUTTONS).data('redirect-url');

            if (redirectUrl) {
              //If it's a Hybris page it will have a redirect URL
              $this.publish(_Enums.default.ACTION.TEALIUM_TRACK_EVENT, 'login_social_success');
              window.location.href = redirectUrl;
            } else {
              //login from popup successful, close lightbox, reload
              $this.publish(_Enums.default.ACTION.HIDE_LIGHTBOX);
              $this.publish(_Enums.default.ACTION.TEALIUM_TRACK_EVENT, 'login_social_success');
              window.location.reload();
            }
          } else if (result.responseStatusCode === 'ko') {
            //result.responseNumber === '202' Access token mismatch, '203' Session data cleared, '204' General internal failure, '301' Wrong country sign in
            $this.$lightBox.addClass(_Enums.default.CLASS.HAS_ERROR);
            $this.publish(_Enums.default.ACTION.TEALIUM_TRACK_EVENT, 'login_social_fail');
          }
        },
        error: function error(result) {
          //Technical issue connecting to hybris
          $this.$lightBox.addClass(_Enums.default.CLASS.HAS_ERROR);
          $this.publish(_Enums.default.ACTION.TEALIUM_TRACK_EVENT, 'login_social_fail');
        },
        data: requestObject
      });
    }
  }]);

  return OSocialSignInPopup;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OSocialSignInPopup;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66,"./../../../themes/p11/utils.js":113}],45:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../../themes/p11/enums.js'));

var _Utils = _interopRequireDefault(require('./../../../themes/p11/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OSocialSignIn = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OSocialSignIn, _AppeaserComponentBas);

  var _super = _createSuper(OSocialSignIn);

  /**
   * Constructor, will run before page loaded
   */
  function OSocialSignIn() {
    var _this;

    _classCallCheck(this, OSocialSignIn);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OSocialSignIn, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OSocialSignIn.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.INSTAGRAM_API_URL = 'https://api.instagram.com/oauth/authorize?client_id=' + this.$el.data('instagram-id') + '&scope=user_profile,user_media' + '&response_type=code';
      this.SELECTOR_FACEBOOK_BUTTON = '.facebook-btn';
      this.SELECTOR_GOOGLE_BUTTON = '.google-btn';
      this.SELECTOR_INSTAGRAM_BUTTON = '.instagram-btn';
      this.SELECTOR_EMAIL_BUTTON = '.email-btn';
      this.SELECTOR_LOGIN_SECTION = '.o-sign-in';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachMQHandlers();

      this._attachDOMListeners();
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$facebookButton = this.$el.find(this.SELECTOR_FACEBOOK_BUTTON);
      this.$googleButton = this.$el.find(this.SELECTOR_GOOGLE_BUTTON);
      this.$instagramButton = this.$el.find(this.SELECTOR_INSTAGRAM_BUTTON);
      this.$emailButton = this.$el.find(this.SELECTOR_EMAIL_BUTTON);
      this.$loginSection = this.$el.find(this.SELECTOR_LOGIN_SECTION);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._showLogin = this._showLogin.bind(this);
      this._googleSignIn = this._googleSignIn.bind(this);
      this._googleCallback = this._googleCallback.bind(this);
      this._facebookSignIn = this._facebookSignIn.bind(this);
      this._instagramSignIn = this._instagramSignIn.bind(this);
      this._openSocialPopup = this._openSocialPopup.bind(this);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.$facebookButton.on('click', this._facebookSignIn);
      this.$googleButton.on('click', this._googleSignIn);
      this.$instagramButton.on('click', this._instagramSignIn);
      this.$emailButton.on('click', this._showLogin);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.$facebookButton.off('click', this._facebookSignIn);
      this.$googleButton.off('click', this._googleSignIn);
      this.$instagramButton.off('click', this._openSocialPopup);
      this.$emailButton.off('click', this._showLogin);
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {}
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
    /**
     * Attach media query handlers
     * @private
     */

  }, {
    key: "_attachMQHandlers",
    value: function _attachMQHandlers() {}
    /**
     * Detach media query handlers
     * @private
     */

  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {}
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /*--------------------- EMAIL -----------------------*/

  }, {
    key: "_showLogin",
    value: function _showLogin() {
      if (!this.$loginSection.hasClass(_Enums.default.CLASS.IS_VISIBLE_STATE)) {
        this.$loginSection.addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
      } else {
        this.$loginSection.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
      }
    }
    /*--------------------- GOOGLE -----------------------*/

  }, {
    key: "_googleSignIn",
    value: function _googleSignIn() {
      window.auth2.grantOfflineAccess().then(this._googleCallback);
    }
  }, {
    key: "_googleCallback",
    value: function _googleCallback(authResult) {
      if (authResult['code']) {
        this.$googleButton.addClass(_Enums.default.CLASS.IS_SIGNED_IN_STATE);

        if (window.auth2.isSignedIn.get()) {
          var idToken = auth2.currentUser.get().getAuthResponse().id_token;

          this._ajaxPost(idToken, 'GOOGLE');
        }
      } else {// There was an error.
      }
    }
    /*--------------------- FACEBOOK -----------------------*/

  }, {
    key: "_checkFacebookStatus",
    value: function _checkFacebookStatus() {
      FB.getLoginStatus(function (response) {
        this._facebookCallback(response);
      });
    }
  }, {
    key: "_facebookSignIn",
    value: function _facebookSignIn() {
      var _this2 = this;

      FB.login(function (response) {
        // handle the response from facebook
        if (response.status === 'connected') {
          _this2._facebookCallback(response);
        } else {//error connecting to facebook
        }
      }, {
        scope: 'public_profile,email'
      }); //,user_gender,user_birthday
    }
  }, {
    key: "_facebookCallback",
    value: function _facebookCallback(response) {
      var authCode = response.authResponse.accessToken;

      this._ajaxPost(authCode, 'FACEBOOK');
    } //TODO: might remove:

    /*--------------------- INSTAGRAM -----------------------*/

  }, {
    key: "_instagramSignIn",
    value: function _instagramSignIn() {
      var redirectUrl = '&redirect_uri=' + $(location).attr('href'); //https://localhost:3003/',

      window.location = this.INSTAGRAM_API_URL + redirectUrl;
    }
  }, {
    key: "_instagramGetCode",
    value: function _instagramGetCode() {
      var authCode = function authCode(name) {
        var results = new RegExp('[?&]' + name + '=([^&#]*)').exec(window.location.href);

        if (results === null) {
          return null;
        } else {
          return results[1] || 0;
        }
      };

      if (authCode('code') !== null) {
        this._ajaxPost(authCode('code'), 'INSTAGRAM');
      }
    }
    /*--------------------- POST TO HYBRIS -----------------------*/

  }, {
    key: "_ajaxPost",
    value: function _ajaxPost(authCode, socialChannel) {
      var $this = this,
          errorMessage = '',
          askForEmail = false,
          url = _Utils.default.ConstructUrl.localeUrl('/socialLogin/login'),
          requestObject = '{"token":"' + authCode + '","socialChannel":"' + socialChannel + '"}'; // Send the tokens to the server


      $.ajax({
        type: 'POST',
        url: url,
        //Updated in AEM to point to hybris service: https://www.weekday.com/en_sek/socialLogin/login
        // Always include an `X-Requested-With` header in every AJAX request,
        // to protect against CSRF attacks.
        headers: {
          'X-Requested-With': 'XMLHttpRequest'
        },
        dataType: 'json',
        contentType: 'application/json; charset=utf-8',
        success: function success(result) {
          if (result.responseStatusCode === 'ok' && result.responseNumber === '101') {
            var redirectUrl = $this.$el.data('redirect-url');

            if (redirectUrl) {
              //If it's a Hybris page it will have a redirect URL
              $this.publish(_Enums.default.ACTION.TEALIUM_TRACK_EVENT, 'login_social_success');
              window.location.href = redirectUrl;
            } else {
              //login from popup successful, close lightbox, reload
              $this.publish(_Enums.default.ACTION.HIDE_LIGHTBOX);
              $this.publish(_Enums.default.ACTION.TEALIUM_TRACK_EVENT, 'login_social_success');
              window.location.reload();
            }
          } else if (result.responseStatusCode === 'ko') {
            if (result.responseNumber === '102') {
              //customer doesn't exist
              if (result.responseData.email && result.responseData.email !== '') {
                //We don't have privacy consent
                askForEmail = false;
              } else {
                //No e-mail supplied from customer
                askForEmail = true;
              }
            } else if ($.inArray(result.responseNumber, ['103', '104', '301'])) {
              //103: Access token expired, 104: General internal failure, 301: Trying to log in from the wrong country
              errorMessage = result.responseDescription;
              $this.publish(_Enums.default.ACTION.TEALIUM_TRACK_EVENT, 'login_social_fail');
            } else {
              errorMessage = 'Generic error';
            }

            $this._openSocialPopup(authCode, socialChannel, askForEmail, errorMessage);
          }
        },
        error: function error(result) {
          //Technical issue connecting to hybris
          $this._openSocialPopup(authCode, socialChannel, false, 'Technical issue connecting to database');
        },
        data: requestObject
      });
    }
  }, {
    key: "_openSocialPopup",
    value: function _openSocialPopup(authCode, socialChannel, askForEmail, errorMessage) {
      var _this3 = this;

      var emailClass = askForEmail ? ' ask-for-email' : '',
          errorClass = errorMessage !== '' ? ' has-error' : '';
      this.publish(_Enums.default.ACTION.HIDE_LIGHTBOX);
      this.publish(_Enums.default.ACTION.TEALIUM_TRACK_EVENT, 'login_social_consent_popup');
      setTimeout(function () {
        _this3.publish(_Enums.default.ACTION.SHOW_LIGHTBOX, {
          template: 'social-sign-in-popup',
          classes: 'is-social-sign-in-popup' + emailClass + errorClass,
          data: {
            authCode: authCode,
            socialChannel: socialChannel
          }
        });
      }, 500);
    }
  }]);

  return OSocialSignIn;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OSocialSignIn;

},{"./../../../js/base/appeaser-component-base.js":47,"./../../../js/base/logger.js":51,"./../../../themes/p11/enums.js":66,"./../../../themes/p11/utils.js":113}],46:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./logger.js'));

var _Enums = _interopRequireDefault(require('./../../themes/p11/enums.js'));

var _Utils = _interopRequireDefault(require('./../../themes/p11/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OAccordion = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OAccordion, _AppeaserComponentBas);

  var _super = _createSuper(OAccordion);

  /**
   * Constructor, will run before page loaded
   */
  function OAccordion() {
    var _this;

    _classCallCheck(this, OAccordion);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OAccordion, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OAccordion.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_ACCORDION_TOGGLE = '.o-accordion .js-accordion-toggle';
      this.SELECTOR_LINK = '.a-link';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this.isExclusive = this.$el.data("exclusive");
      this.disableFocusTimeout = 3000;
      this.$exclusiveGroup = $("[data-exclusive-group=" + this.$el.data("exclusive-group") + "]");
      this.$accordionContent = this.$el.find(this.SELECTOR_ACCORDION_CONTENT);
      this.$focusableContent = this.$accordionContent.find(_Enums.default.SELECTOR.FOCUSABLE_AREAS);

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onClickLink = this._onClickLink.bind(this);
      this._disableRedundantFocus = this._disableRedundantFocus.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.$el.on('click', this._onClickLink);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.$el.off('click', this._onClickLink);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {
      this._disableRedundantFocus();
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * onClickLink callback function
     * @param event
     * @private
     */

  }, {
    key: "_onClickLink",
    value: function _onClickLink(event) {
      event.preventDefault();
      if (this.$el.hasClass(_Enums.default.CLASS.IS_DISABLED_STATE)) return;

      if (this.isExclusive) {
        this.$exclusiveGroup.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
      }

      if (this.$el.hasClass(_Enums.default.CLASS.IS_VISIBLE_STATE)) {
        this.$el.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);

        _Utils.default.Accessibility.hide(this.$accordionContent, this.$el);

        _Utils.default.Accessibility.preventFocus(this.$focusableContent);
      } else {
        this.$el.addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);

        _Utils.default.Accessibility.clear(this.$accordionContent.add(this.$focusableContent), this.$el);
      }
    }
    /**
     * Disables focus for focusable elements if item is not visible
     * @private
     */

  }, {
    key: "_disableRedundantFocus",
    value: function _disableRedundantFocus() {
      var _this2 = this;

      if (!this.$el.hasClass(_Enums.default.CLASS.IS_VISIBLE_STATE)) {
        // give time for share button JS to generate HTML - as non-controllable external JS with no callbacks
        setTimeout(function () {
          _this2.$focusableContent = _this2.$accordionContent.find(_Enums.default.SELECTOR.FOCUSABLE_AREAS);

          _Utils.default.Accessibility.preventFocus(_this2.$focusableContent);
        }, this.disableFocusTimeout);
      }
    }
  }]);

  return OAccordion;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OAccordion;

},{"./../../themes/p11/enums.js":66,"./../../themes/p11/utils.js":113,"./appeaser-component-base.js":47,"./logger.js":51}],47:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _componentBase = _interopRequireDefault(require('./../vendor/component-loader-js/component.js'));

var _Enums = _interopRequireDefault(require('./../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var AppeaserComponentBase = /*#__PURE__*/function (_ComponentBase) {
  _inherits(AppeaserComponentBase, _ComponentBase);

  var _super = _createSuper(AppeaserComponentBase);

  function AppeaserComponentBase() {
    _classCallCheck(this, AppeaserComponentBase);

    return _super.apply(this, arguments);
  }
  /**
   * Subscribe to an event from another component
   * @protected
   * @param {String} topic - Event name
   * @param {Function} callback - Function to bind
   */


  _createClass(AppeaserComponentBase, [{
    key: "subscribe",
    value: function subscribe(topic, callback) {
      _get(_getPrototypeOf(AppeaserComponentBase.prototype), "subscribe", this).call(this, topic, callback, this); // check if we're subscribing to DOCUMENT_READY event, trigger if we're already in that state (late added content)


      if (topic === _Enums.default.EVENT.ON_DOCUMENT_READY && (document.readyState === 'interactive' || document.readyState === 'complete')) {
        callback();
      }
    }
  }]);

  return AppeaserComponentBase;
}(_componentBase.default); // Export AMD, CommonJS/ES6 module or assume global namespace


if (typeof define !== 'undefined' && define.amd) {
  define([], AppeaserComponentBase);
} else if (typeof module !== 'undefined' && module.exports) {
  module.exports = AppeaserComponentBase;
} else {
  window.AppeaserComponentBase = AppeaserComponentBase;
}

},{"./../../themes/p11/enums.js":66,"./../vendor/component-loader-js/component.js":62}],48:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _componentLoader = _interopRequireDefault(require('./../vendor/component-loader-js/component-loader.js'));

var _Enums = _interopRequireDefault(require('./../../themes/p11/enums.js'));

var _Logger = _interopRequireDefault(require('./logger.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var AppeaserComponentLoader = /*#__PURE__*/function (_ComponentLoader) {
  _inherits(AppeaserComponentLoader, _ComponentLoader);

  var _super = _createSuper(AppeaserComponentLoader);

  function AppeaserComponentLoader() {
    _classCallCheck(this, AppeaserComponentLoader);

    return _super.apply(this, arguments);
  }
  /**
   * Initialize a given component and return a new instance of it
   * @param componentName
   * @param componentId
   * @param el
   * @param data
   * @private
   */


  _createClass(AppeaserComponentLoader, [{
    key: "_initializeBlockComponent",
    value: function _initializeBlockComponent(componentName, componentId, el, data) {
      var component = this.components[componentName];
      if (typeof component !== 'function') throw "ComponentLoader: unknown component '".concat(componentName, "'");
      var instance = new component(el, data, this);
      this.initializedComponents[componentId] = instance;
      this.numberOfInitializedComponents++;
      return instance;
    }
    /**
     * Publishes events based on a given instance
     * @param topic
     * @param instance
     * @returns {boolean}
     * @private
     */

  }, {
    key: "_publishOnInstance",
    value: function _publishOnInstance(topic, instance) {
      // Check if we have subscribers to this topic
      if (!this.topics.hasOwnProperty(topic)) {
        return false;
      } // don't slice on arguments because it prevents optimizations in JavaScript engines (V8 for example)
      // https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/arguments
      // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments


      var args = new Array(arguments.length - 2);

      for (var i = 0; i < args.length; ++i) {
        args[i] = arguments[i + 2]; // remove two arguments
      } // Loop through them and fire the callbacks


      for (var _i = 0, len = this.topics[topic].length; _i < len; _i++) {
        var subscription = this.topics[topic][_i]; // Call it's callback

        if (subscription && subscription.callback && instance === subscription.context) {
          subscription.callback.apply(subscription.context, args);
        }
      }

      return true;
    }
    /**
     * Scan through the element passed in to find all data-component-id that needs to be reinitialized
     * @param el
     * @private
     */

  }, {
    key: "_scanBlock",
    value: function _scanBlock(el) {
      var _this = this;

      var components = el.querySelectorAll('[data-component-id]'),
          instances = [],
          scanRootElement = el.hasAttribute("data-component-id"); // Since the query selector does not apply to the root element

      if (scanRootElement) {
        instances.push(this._scanBlockElement(el));
      }

      [].forEach.call(components, function (el) {
        instances.push(_this._scanBlockElement(el));
      });
      instances.forEach(function (instance) {
        _this._publishOnInstance(_Enums.default.EVENT.ON_DOCUMENT_READY, instance);
      });
    }
    /**
     * Initializes a block if it has not been initialized before but will not re-initialize
     * @param el
     * @private
     */

  }, {
    key: "_scanNewBlock",
    value: function _scanNewBlock(el) {
      var _this2 = this;

      var components = el.querySelectorAll('[data-component]:not([data-component-id])'),
          instances = [],
          scanRootElement = el.hasAttribute("data-component") && !el.hasAttribute("data-component-id"); // Since the query selector does not apply to the root element

      if (scanRootElement) {
        instances.push(this._scanBlockElement(el));
      }

      [].forEach.call(components, function (el) {
        instances.push(_this2._scanBlockElement(el));
      });
    }
    /**
     *
     * @param el
     * @param data
     * @returns {*}
     * @private
     */

  }, {
    key: "_scanBlockElement",
    value: function _scanBlockElement(el, data) {
      // check of component(s) for this DOM element already have been initialized
      var elementId = el.getAttribute("data-component-id"),
          instance = null; // give unique id so we can track it on next scan

      elementId = this._generateUUID();
      el.setAttribute('data-component-id', elementId); // find the name of the component instance

      var componentName = el.getAttribute("data-component");
      var componentId = "".concat(componentName, "-").concat(elementId); // this.activeComponents[componentId] = true;
      // check if component not initialized before

      if (!this.initializedComponents[componentId]) {
        instance = this._initializeBlockComponent(componentName, componentId, el, data);
      }

      return instance;
    }
    /**
     * Call constructor of component and add instance to the collection of initialized components
     * @private
     * @param {String} componentName - Name of the component to initialize. Used to lookup class definition in components collection.
     * @param {String} componentId - Unique component ID (combination of component name and element ID)
     * @param {Element} el - DOM element that is the context of this component
     * @param {Object} data - Optional data object to pass to the component constructor
     */

  }, {
    key: "_initializeComponent",
    value: function _initializeComponent(componentName, componentId, el, data) {
      var component = this.components[componentName]; // Let us log the missing component instead of throwing an exception

      if (typeof component !== 'function') {
        _Logger.default.ERROR("ComponentLoader: unknown component '".concat(componentName, "'"));

        return;
      }

      var instance = new component(el, data, this);
      this.initializedComponents[componentId] = instance;
      this.numberOfInitializedComponents++;
    }
    /**
     * Destroy all component instances based on passed in element
     * @param el
     * @public
     */

  }, {
    key: "destroy",
    value: function destroy(el) {
      var components = el.querySelectorAll('[data-component-id]');
      var that = this;
      [].forEach.call(components, function (innerEl) {
        var componentName = innerEl.getAttribute("data-component");
        var elementId = innerEl.getAttribute('data-component-id');
        var componentId = "".concat(componentName, "-").concat(elementId);

        that._destroyComponent(componentId);
      });

      that._destroyComponent(el.getAttribute('data-component-id')); // destroy wrapper also

    }
  }]);

  return AppeaserComponentLoader;
}(_componentLoader.default); // Export AMD, CommonJS/ES6 module or assume global namespace


if (typeof define !== 'undefined' && define.amd) {
  define([], AppeaserComponentLoader);
} else if (typeof module !== 'undefined' && module.exports) {
  module.exports = AppeaserComponentLoader;
} else {
  window.AppeaserComponentLoader = AppeaserComponentLoader;
}

},{"./../../themes/p11/enums.js":66,"./../vendor/component-loader-js/component-loader.js":61,"./logger.js":51}],49:[function(require,module,exports){
"use strict";

var _appeaserComponentBase = _interopRequireDefault(require('./appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./logger.js'));

var _Enums = _interopRequireDefault(require('./../../themes/p11/enums.js'));

var _Utils = _interopRequireDefault(require('./../../themes/p11/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var Dropdown = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(Dropdown, _AppeaserComponentBas);

  var _super = _createSuper(Dropdown);

  /**
   * Constructor, will run before page loaded
   */
  function Dropdown() {
    var _this;

    _classCallCheck(this, Dropdown);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();

    _this._jQueryScopeBinding();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(Dropdown, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      this._detachMQHandlers();

      _get(_getPrototypeOf(Dropdown.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Detaches MQ handlers
     * @private
     */

  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {}
    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      //SELECTORS
      this.SELECTOR_OPTIONS = '.options li';
      this.SELECTOR_IS_SELECTED = '.is-selected';
      this.SELECTOR_VISIBLE_OPTIONS = '.options li:not(.u-display-none)';
      this.SELECTOR_UL_OPTIONS = 'ul.options';
      this.SELECTOR_ICON_ARROW = '.a-icon-arrow-down-small';
      this.SELECTOR_ICON_CLOSE = '.a-icon-close';
      this.SELECTOR_SELECTED_SIBLINGS = '.is-selected ~ li';
      this.SELECTOR_SELECTED_AND_DROPDOWN_VALUE = '.is-dropdown-value.is-selected';
      this.SELECTOR_DROPDOWN = '[class^="m-dropdown"]';
      this.SELECTOR_HIDDEN_INPUT = '.is-hidden-value';
      this.SELECTOR_CHECKBOX = '.m-checkbox';
      this.SELECTOR_CHECKBOX_ATOM = '.a-checkbox';
      this.SELECTOR_ERROR_MESSAGE = '.error-msg';
      this.SELECTOR_CHECKBOX_LABEL = '.js-a-label';
      this.SELECTOR_FOCUSABLE = '[tabindex=0]';
      this.SELECTOR_PLACEHOLDER = '.placeholder';
      this.SELECTOR_IS_DROPDOWN_VALUE = '.is-dropdown-value';
      this.CLASS_IS_DROPDOWN_VALUE = 'is-dropdown-value';
      this.CLASS_QUANTITY_SECTION = 'quantity-section';
      this.optionHeight = null;
      this.isUserScrolling = false;
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._setInputValue = this._setInputValue.bind(this);
      this._setInputOnLoad = this._setInputOnLoad.bind(this);
      this._onOptionClick = this._onOptionClick.bind(this);
      this._open = this._open.bind(this);
      this._close = this._close.bind(this);
      this._onBodyClick = this._onBodyClick.bind(this);
      this._filterOptions = this._filterOptions.bind(this);
      this._onArrowClick = this._onArrowClick.bind(this);
      this._onKeyDown = this._onKeyDown.bind(this);
      this._onKeyUp = this._onKeyUp.bind(this);
      this._onMouseLeave = this._onMouseLeave.bind(this);
      this._onOptionHover = this._onOptionHover.bind(this);
      this._handleSelectedOptionChangeRequest = this._handleSelectedOptionChangeRequest.bind(this);
      this._validate = this._validate.bind(this);
      this._focusInDropDown = this._focusInDropDown.bind(this);
      this._focusOutDropDown = this._focusOutDropDown.bind(this);
      this._onKeystrokeTab = this._onKeystrokeTab.bind(this);
      this._onKeystrokeEnter = this._onKeystrokeEnter.bind(this);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this.optionHeight = this.$el.outerHeight();

      this._attachSubscribers();

      this._cacheDOMElements();

      this._attachDOMListeners();

      this._setInputOnLoad();
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$iconArrow = this.$el.find(this.SELECTOR_ICON_ARROW);
      this.$iconClose = this.$el.find(this.SELECTOR_ICON_CLOSE);
      this.$options = this.$el.find(this.SELECTOR_OPTIONS);
      this.$optionsWrapper = this.$el.find(this.SELECTOR_UL_OPTIONS);
      this.$selectedOption = this.$optionsWrapper.find(this.SELECTOR_IS_SELECTED);
      this.$selectedAndIsValue = this.$el.find(this.SELECTOR_SELECTED_AND_DROPDOWN_VALUE);
      this.$hiddenInput = this.$el.find(this.SELECTOR_HIDDEN_INPUT);
      this.$filterCheckboxesAtom = this.$el.find(this.SELECTOR_CHECKBOX_ATOM);
      this.$errorMsg = this.$el.find(this.SELECTOR_ERROR_MESSAGE);
      this.$input = this.$el.find(this.SELECTOR_INPUT); //Define this selector in the sub-classes extending dropdown.js

      this.isCountryDropdown = this.$el.hasClass(this.CLASS_COUNTRY_DROPDOWN);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_BODY_CLICKED, this._onBodyClick);
      this.subscribe(_Enums.default.ACTION.OPEN_DROPDOWN, this._onOpeningRequest);
      this.subscribe(_Enums.default.ACTION.CLOSE_DROPDOWN, this._onClosingRequest);
      this.subscribe(_Enums.default.ACTION.SET_DROPDOWN_SELECTED_OPTION, this._handleSelectedOptionChangeRequest);
      this.subscribe(_Enums.default.ACTION.SET_DROPDOWN_OPTIONS, this._onSetDropdownOptionRequest);
      this.subscribe(_Enums.default.EVENT.ON_DROPDOWN_CLOSED_FILTERS, this._validate);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_BODY_CLICKED, this._onBodyClick);
      this.unsubscribe(_Enums.default.ACTION.OPEN_DROPDOWN, this._onOpeningRequest);
      this.unsubscribe(_Enums.default.ACTION.CLOSE_DROPDOWN, this._onClosingRequest);
      this.unsubscribe(_Enums.default.ACTION.SET_DROPDOWN_SELECTED_OPTION, this._handleSelectedOptionChangeRequest);
      this.unsubscribe(_Enums.default.ACTION.SET_DROPDOWN_OPTIONS, this._onSetDropdownOptionRequest);
      this.unsubscribe(_Enums.default.EVENT.ON_DROPDOWN_CLOSED_FILTERS, this._validate);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$el.on('click', this.SELECTOR_OPTIONS, this._onOptionClick);
      this.$el.on('mousemove', this.SELECTOR_OPTIONS, this._onOptionHover);
      this.$el.on('mouseout', this.SELECTOR_UL_OPTIONS, this._onMouseLeave);
      this.$el.on('keydown', this._onKeyDown);
      this.$el.on('keyup', this._onKeyUp);
      this.$iconArrow.on('click', this._onArrowClick);

      if (this.$input.attr("required")) {
        this.$input.on('change', this._validate);
      }

      this.$el.on('focusin', this, this._focusInDropDown);
      this.$el.on('focusout', this._focusOutDropDown);

      if (this.$el.parent().hasClass(this.CLASS_QUANTITY_SECTION)) {
        this.$iconArrow.on('keydown', this._onKeyDown);
        this.$iconClose.on('keydown', this._onKeyDown);
      }
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$el.off('click', this.SELECTOR_OPTIONS, this._onOptionClick);
      this.$el.off('mousemove', this.SELECTOR_OPTIONS, this._onOptionHover);
      this.$el.off('mouseout', this.SELECTOR_UL_OPTIONS, this._onMouseLeave);
      this.$iconArrow.off('click', this._onArrowClick);

      if (this.$input.attr("required")) {
        this.$input.off('change', this._validate);
      }

      this.$el.off('keydown', this._onKeyDown);
      this.$el.off('keyup', this._onKeyUp);
      this.$el.off('focusin', this._focusInDropDown);
      this.$el.off('focusout', this._focusOutDropDown);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * This function invokes when focus come in dropdown. Implement this method in child classes.
     * @private
     */

  }, {
    key: "_focusInDropDown",
    value: function _focusInDropDown(event) {}
    /**
     * This function invokes when focus come out from dropdown. Implement this method in child classes.
     * @private
     */

  }, {
    key: "_focusOutDropDown",
    value: function _focusOutDropDown() {}
  }, {
    key: "_onOpeningRequest",
    value: function _onOpeningRequest($dropdownToOpen) {
      if (this.$el.is($dropdownToOpen)) {
        this._open();
      }
    }
  }, {
    key: "_onClosingRequest",
    value: function _onClosingRequest($dropdownToClose) {
      if (this.$el.is($dropdownToClose)) {
        this._close();

        this._validate();
      }
    }
  }, {
    key: "_onOptionHover",
    value: function _onOptionHover(event) {
      var $target = $(event.currentTarget); //Check if the event is a "true" mouse event and not triggered by a scroll.

      if (!this.isUserScrolling && !$target.hasClass(_Enums.default.CLASS.IS_DISABLED_STATE)) {
        var $visibleOptions = this.$el.find(this.SELECTOR_VISIBLE_OPTIONS);
        $visibleOptions.removeClass(_Enums.default.CLASS.IS_SELECTED);

        _Utils.default.Accessibility.unselect($visibleOptions);

        $target.addClass(_Enums.default.CLASS.IS_SELECTED);

        _Utils.default.Accessibility.select($target);
      }

      this.isUserScrolling = false;
    }
    /**
     * Replaces the current set of options with new ones.
     * @private
     */

  }, {
    key: "_setOptions",
    value: function _setOptions($options) {
      //Remove listeners for old options
      this.$options.off('mousemove', this._onOptionHover); //Clear the list of options and add the new ones.

      this.$optionsWrapper.html('').append($options);
      this.$options = $options;
      this.$options.on('mousemove', this._onOptionHover);
    }
    /**
     * SET_DROPDOWN_OPTIONS event handler
     * @private
     */

  }, {
    key: "_onSetDropdownOptionRequest",
    value: function _onSetDropdownOptionRequest(args) {
      if (this.$el.is(args.dropdown)) {
        this._setOptions(args.options);
      }
    }
    /**
     * Removes filter so all options are visible.
     * @private
     */

  }, {
    key: "_removeFilter",
    value: function _removeFilter() {
      this.$options.removeClass(this.CLASS_DISPLAY_NONE);
    }
    /**
     * Keydown event handler
     * @param event
     * @private
     */

  }, {
    key: "_onKeyDown",
    value: function _onKeyDown(event) {
      if (event.defaultPrevented) {
        return;
      }

      var tgt = event.currentTarget,
          char = event.key,
          flag = false;

      if (this.$el.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        if (event.key.match(_Enums.default.KEYSTROKE.ARROW_UP)) {
          this._changeSelectedOption(false);

          flag = true;
          this.publish(_Enums.default.ACTION.ARROW_PRESSED);
        } else if (event.key.match(_Enums.default.KEYSTROKE.ARROW_DOWN)) {
          this._changeSelectedOption(true);

          flag = true;
          this.publish(_Enums.default.ACTION.ARROW_PRESSED);
        } else if (event.key.match(_Enums.default.KEYSTROKE.SPACEBAR)) {
          flag = true;
        } else if (event.key.match(_Enums.default.KEYSTROKE.ENTER)) {
          this._onKeystrokeEnter(event);

          flag = true;
        } else if (event.key.match(_Enums.default.KEYSTROKE.ESCAPE)) {
          this._close();

          this.$el.focus();
          flag = true;
        } else if (event.key.match(_Enums.default.KEYSTROKE.TAB)) {
          this._onKeystrokeTab(event);
        }
      } else if (this.$el.parent().hasClass(this.CLASS_QUANTITY_SECTION)) {
        if (event.key.match(_Enums.default.KEYSTROKE.ENTER)) {
          this._open();

          flag = true;
        }
      } else if (!this.$el.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        if (event.key.match(_Enums.default.KEYSTROKE.SPACEBAR)) {
          flag = true;
        } else if (event.key.match(_Enums.default.KEYSTROKE.ARROW_DOWN)) {
          this._open();

          flag = true;
        } else if (event.key.match(_Enums.default.KEYSTROKE.ENTER)) {
          this._open();

          flag = true;
        }
      }

      if (flag) {
        event.stopPropagation();
        event.preventDefault();
      }
    }
  }, {
    key: "_onKeyUp",
    value: function _onKeyUp(event) {
      if (event.defaultPrevented) {
        return;
      }

      if (this.$el.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        if (event.key.match(_Enums.default.KEYSTROKE.SPACEBAR)) {
          this._onKeystrokeSpacebar(event);

          event.stopPropagation();
          event.preventDefault();
        }
      } else if (!this.$el.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        if (event.key.match(_Enums.default.KEYSTROKE.SPACEBAR)) {
          event.stopPropagation();
          event.preventDefault();
        }
      }
    }
    /**
     * On keystroke SPACE BAR event handler.
     * @private
     */

  }, {
    key: "_onKeystrokeSpacebar",
    value: function _onKeystrokeSpacebar(event) {
      var $selectedOption = this.$el.find(this.SELECTOR_IS_SELECTED);
      var checkbox = $selectedOption.find(this.SELECTOR_CHECKBOX_LABEL).get(0);

      if (!$selectedOption.hasClass('bottom-option') && !checkbox) {
        this._setInputValue($selectedOption);
      }

      if (checkbox) {
        checkbox.click();
      } else if ($selectedOption.length) {
        $selectedOption.trigger('click');

        this._close();
      }

      this._validate();
    }
    /**
     * On keystroke enter event handler.
     * @private
     */

  }, {
    key: "_onKeystrokeEnter",
    value: function _onKeystrokeEnter(event) {
      var $selectedOption = this.$el.find(this.SELECTOR_IS_SELECTED);
      var currentTarget = event.currentTarget;
      var checkbox = $selectedOption.find(this.SELECTOR_CHECKBOX_LABEL).get(0);

      if (!$selectedOption.hasClass('bottom-option') && !checkbox) {
        this._setInputValue($selectedOption, currentTarget);
      }

      if (checkbox) {
        event.preventDefault();
      } else if ($selectedOption.length) {
        $selectedOption.trigger('click');

        this._close();
      }

      this._validate();
    }
    /**
     * Handles tab key press event
     * @private
     */

  }, {
    key: "_onKeystrokeTab",
    value: function _onKeystrokeTab(event) {
      var $nextPlaceholder;

      if (this.$el.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        this._close();

        if (event.shiftKey) {
          $nextPlaceholder = this.$el.parent().prev().find(this.SELECTOR_PLACEHOLDER);
        } else {
          $nextPlaceholder = this.$el.parent().next().find(this.SELECTOR_PLACEHOLDER);
        }

        if ($nextPlaceholder.length) {
          $nextPlaceholder.focus();
          event.stopPropagation();
          event.preventDefault();
        }
      }
    }
    /**
     * Changes the selected element in the dropdown.
     * @param isDirectionDown - movement downwards
     * @param tabPressed - if event triggered by tab key press, default value = false
     * @param nrOfSteps - number of steps to take, default value = 1
     * @private
     */

  }, {
    key: "_changeSelectedOption",
    value: function _changeSelectedOption(isDirectionDown) {
      var nrOfSteps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
      //Find the new selected option
      var $visibleOptions = this.$el.find(this.SELECTOR_VISIBLE_OPTIONS),
          $selectedOption = this.$el.find(this.SELECTOR_IS_SELECTED),
          indexOfSelectedOption = $visibleOptions.index($selectedOption),
          newIndex,
          $newSelectedOption; // if isDirectionDown and no element has is-selected class highlights the first element
      // if !isDirectionDown and no element has is-selected class highlights the last element
      // if end of list reached (in any direction) do not do anything

      if (isDirectionDown) {
        if (indexOfSelectedOption === $visibleOptions.length - 1) return;
        newIndex = $selectedOption.length ? indexOfSelectedOption + nrOfSteps : nrOfSteps - 1;
      } else {
        if (indexOfSelectedOption === 0) return;
        newIndex = $selectedOption.length ? indexOfSelectedOption - nrOfSteps : $selectedOption.length + 1;
      }

      $newSelectedOption = $visibleOptions.eq(newIndex); //If the option is disabled, make a recursive call

      if ($newSelectedOption.hasClass(_Enums.default.CLASS.IS_DISABLED_STATE)) {
        this._changeSelectedOption(isDirectionDown, nrOfSteps + 1);
      } else {
        this._changeSelectedState($visibleOptions, $newSelectedOption);
      }
    }
    /**
     * Removes is-selected class and necessary WCAG attributes from $visibleOptions
     * Adds is-selected class and necessary WCAG attributes to $newSelectedOption
     * @param $visibleOptions
     * @param $newSelectedOption
     * @private
     */

  }, {
    key: "_changeSelectedState",
    value: function _changeSelectedState($visibleOptions, $newSelectedOption) {
      $visibleOptions.removeClass(_Enums.default.CLASS.IS_SELECTED);

      _Utils.default.Accessibility.unselect($visibleOptions);

      $newSelectedOption.addClass(_Enums.default.CLASS.IS_SELECTED);

      _Utils.default.Accessibility.select($newSelectedOption);

      if ($newSelectedOption.has('a').length) {
        $newSelectedOption.find('a').focus();
      } else if ($newSelectedOption.attr('tabindex') !== undefined) {
        $newSelectedOption.focus();
      } else {
        $newSelectedOption.find(this.SELECTOR_FOCUSABLE).focus();
      }

      this.publish(_Enums.default.EVENT.ON_SAVE_CURRENT_FOCUS, $newSelectedOption.find(this.SELECTOR_CHECKBOX).attr('id'));

      this._adjustScrollTop();
    }
    /**
     * Adjusts current scrolltop of options wrapper if needed.
     * @private
     */

  }, {
    key: "_adjustScrollTop",
    value: function _adjustScrollTop() {
      var nrOfVisible = this.$el.find(this.SELECTOR_VISIBLE_OPTIONS).length,
          nrOfSiblings = this.$el.find(this.SELECTOR_SELECTED_SIBLINGS).length;

      if ((nrOfVisible - nrOfSiblings) * this.optionHeight > this.$optionsWrapper.height() + this.$optionsWrapper.scrollTop()) {
        this.isUserScrolling = true;
        this.$optionsWrapper.scrollTop((nrOfVisible - nrOfSiblings + 1) * this.optionHeight - this.$optionsWrapper.height());
      } else if ((nrOfVisible - nrOfSiblings - 1) * this.optionHeight < this.$optionsWrapper.scrollTop()) {
        this.isUserScrolling = true;
        this.$optionsWrapper.scrollTop((nrOfVisible - nrOfSiblings - 1) * this.optionHeight);
      }
    }
    /**
     * Filters the options of the dropdown. Implement this method in child classes.
     * @private
     */

  }, {
    key: "_filterOptions",
    value: function _filterOptions() {}
    /**
     * Opens dropdown
     * @private
     */

  }, {
    key: "_open",
    value: function _open() {
      if (this.$el.hasClass(_Enums.default.CLASS.IS_DISABLED_STATE)) return;

      this._removeFilter();

      this.$el.addClass(_Enums.default.CLASS.IS_OPEN_STATE); //Scroll to the selected option

      var scrollTop = this.$options.index(this.$selectedOption) * this.$selectedOption.outerHeight();
      this.$optionsWrapper.scrollTop(scrollTop);
      this.$selectedOption = this.$el.find(_Enums.default.CLASS.IS_SELECTED);
      this.$selectedOption.find(this.SELECTOR_FOCUSABLE).focus();
    }
    /**
     * Closes dropdown
     * @private
     */

  }, {
    key: "_close",
    value: function _close() {
      this.$el.removeClass(_Enums.default.CLASS.IS_OPEN_STATE);

      this._validate();
    }
    /**
     * Callback when body is clicked
     * @param event - standard JS event param.
     * @private
     */

  }, {
    key: "_onBodyClick",
    value: function _onBodyClick(event) {
      var $target = $(event.target);

      if (!this.$el.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        return;
      } else if (!$target.closest(this.SELECTOR_DROPDOWN).length || !$target.closest(this.SELECTOR_DROPDOWN).is(this.$el)) {
        this._close();

        this._highlightSelectedOption();
      }
    }
  }, {
    key: "_onMouseLeave",
    value: function _onMouseLeave(event) {
      //Check if the event is a "true" mouse event and not triggered by a scroll.
      if (!this.isUserScrolling) {
        this._highlightSelectedOption();
      }
    }
    /**
     * Highlight the currently selected option by applying the "is-selected" state.
     * @private
     */

  }, {
    key: "_highlightSelectedOption",
    value: function _highlightSelectedOption() {
      this.$dropdownValue = this.$optionsWrapper.find(this.SELECTOR_IS_DROPDOWN_VALUE);

      if (this.$dropdownValue.length) {
        this.$el.find(this.SELECTOR_OPTIONS).removeClass(_Enums.default.CLASS.IS_SELECTED);
        this.$dropdownValue.addClass(_Enums.default.CLASS.IS_SELECTED);
      } else if (this.$selectedOption.length) {
        this.$el.find(this.SELECTOR_OPTIONS).removeClass(_Enums.default.CLASS.IS_SELECTED);
        this.$selectedOption.addClass(_Enums.default.CLASS.IS_SELECTED);
      }
    }
    /**
     * Sets the value of the hidden input element.
     * @param $target - Input value will be set to the HTML of the target.
     * @private
     */

  }, {
    key: "_setInputValue",
    value: function _setInputValue($target) {
      if ($target.length) {
        this.$options.removeClass(this.CLASS_IS_DROPDOWN_VALUE);
        $target.addClass(this.CLASS_IS_DROPDOWN_VALUE);
        var currentValue = $target.html().trim();
        this.$input.val(currentValue).attr('data-value', $target.attr('data-value')).trigger('change');
        this.$selectedOption = $target;
        this.$selectedOption.addClass(_Enums.default.CLASS.IS_SELECTED);
      }
    }
    /**
     * Runs on page load to pre-populate the dropdown value. The classes are added
     * on element to be pre-populated from AEM side.
     * Example: Country selection dropdown on newsletter sign-up to be used on global
     * site. Pre-populated with an option if it matches the country value returned in the
     * X-Akamai-Edgescape request header (pre-locating the customer to a country).
     * @private
     */

  }, {
    key: "_setInputOnLoad",
    value: function _setInputOnLoad() {
      if (this.$selectedAndIsValue.length) {
        var pageloadValue = this.$selectedAndIsValue.html().trim();
        this.$input.val(pageloadValue).attr('data-value', this.$selectedAndIsValue.attr('data-value')).trigger('change');
      }
    }
    /**
     * Handles the SET_DROPDOWN_SELECTED_OPTION event.
     * @param value - Value to be set
     * @param $dropdownElement - The dropdown element to change
     * @private
     */

  }, {
    key: "_handleSelectedOptionChangeRequest",
    value: function _handleSelectedOptionChangeRequest(value, $dropdownElement) {
      if (!$dropdownElement.is(this.$el)) return; //interfacing

      var params = {};

      if (_typeof(value) != "object") {
        params.index = value;
      } else {
        params = value;
      }

      var checked,
          option,
          options = this.$filterCheckboxesAtom && this.$filterCheckboxesAtom.length > 0 ? this.$filterCheckboxesAtom : this.$options;

      if (Number.isInteger(params.index)) {
        //prevent negative numbers
        if ((params.index = Math.abs(params.index)) >= options.length) {
          //automatic fix for 'index out of bound' exception
          _Logger.default.WARN(params.index + " is higher than options size");

          params.index = Math.max(options.length - 1, 0);
        }

        checked = (option = $(options.get(params.index))).prop("checked");

        if ((params.action = params.action == undefined ? true : params.action) != checked || checked == undefined) {
          //click does not work without this class
          $dropdownElement.addClass(_Enums.default.CLASS.IS_OPEN_STATE);
          option.trigger("click");
          $dropdownElement.removeClass(_Enums.default.CLASS.IS_OPEN_STATE);
        }
      } else {
        //Not found exception
        var that = this;
        this.$optionsWrapper.children().each(function (index) {
          if ($(this).data("value") == params.index) {
            params.index = index;

            that._handleSelectedOptionChangeRequest(params, $dropdownElement);

            return;
          }
        });

        _Logger.default.ERROR(params.index + " not found");
      }
    }
    /**
     * Callback when an option is clicked
     * @param event - standard JS event param.
     * @private
     */

  }, {
    key: "_onOptionClick",
    value: function _onOptionClick(event) {
      event.preventDefault();
      var $target = $(event.currentTarget);

      if (!$target.hasClass(_Enums.default.CLASS.IS_DISABLED_STATE) && this.$el.hasClass(_Enums.default.CLASS.IS_OPEN_STATE) && !this.isCountryDropdown) {
        this.$el.find('li').removeClass(_Enums.default.CLASS.IS_SELECTED);
        $target.addClass(_Enums.default.CLASS.IS_SELECTED);
        this.$selectedOption = $target;

        this._setInputValue($target);

        this._close();

        this._validate();
      }
    }
  }, {
    key: "_onArrowClick",
    value: function _onArrowClick() {
      if (this.$el.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        this._close();

        this._validate();
      } else if (!this.$el.hasClass(_Enums.default.CLASS.IS_DISABLED_STATE)) {
        this._open();
      }
    }
  }, {
    key: "_validate",
    value: function _validate() {
      if (this.$input.attr("required")) {
        var countries = [];
        this.$options.each(function (index, element) {
          countries[index] = $(element).html().toLowerCase();
        });

        if (this.$input[0].validity.valueMissing) {
          this.$el.addClass(_Enums.default.CLASS.HAS_ERROR);
          this.$errorMsg.html(this.$input.data('validation-required-text'));
        } else if (countries.indexOf(this.$input.val().toLowerCase()) == -1) {
          this.$el.addClass(_Enums.default.CLASS.HAS_ERROR);
          this.$errorMsg.html(this.$input.data('validation-required-text'));
        } else {
          this.$el.removeClass(_Enums.default.CLASS.HAS_ERROR);
        }
      }
    }
  }]);

  return Dropdown;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = Dropdown;

},{"./../../themes/p11/enums.js":66,"./../../themes/p11/utils.js":113,"./appeaser-component-base.js":47,"./logger.js":51}],50:[function(require,module,exports){
"use strict";

var BaseEnums = {
  // ACTION
  // - Tell another component to perform as specific predictable action.
  //
  // E.g:
  // ACTION.REVEAL_PRODUCT_TEASER: 'ACTION_REVEAL_PRODUCT_TEASER',
  ACTION: {
    EXAMPLE: 'ACTION_EXAMPLE',
    OPEN_OVERLAY_MENU: 'OPEN_OVERLAY_MENU',
    CLOSE_OVERLAY_MENU: 'CLOSE_OVERLAY_MENU',
    BACKDROP_ANIMATE_GRADIENT: 'BACKDROP_ANIMATE_GRADIENT',
    SET_BACKDROP: 'SET_BACKDROP',
    SHOW_BACKDROP: 'SHOW_BACKDROP',
    HIDE_BACKDROP: 'HIDE_BACKDROP',
    ANIMATE_BACKDROP: 'ANIMATE_BACKDROP',
    SHOW_OVERLAY: 'SHOW_OVERLAY',
    HIDE_OVERLAY: 'HIDE_OVERLAY',
    DISABLE_MENU: 'DISABLE_MENU',
    ENABLE_MENU: 'ENABLE_MENU',
    COPY_FOOTER_TO_MENU: 'COPY_FOOTER_TO_MENU',
    SHOW_SEARCH: 'SHOW_SEARCH',
    HIDE_SEARCH: 'HIDE_SEARCH',
    SHOW_HEADER: 'SHOW_HEADER',
    HIDE_HEADER: 'HIDE_HEADER',
    SHOW_PAGE_CONTENT: 'SHOW_PAGE_CONTENT',
    HIDE_PAGE_CONTENT: 'HIDE_PAGE_CONTENT',
    SET_FOOTER_GRADIENT: 'SET_FOOTER_GRADIENT',
    SC_MENUITEM_CLOSE: 'SC_MENUITEM_CLOSE',
    SCALE_TAKEOVER: 'SCALE_TAKEOVER',
    DISABLE_SCROLL: 'DISABLE_SCROLL',
    ENABLE_SCROLL: 'ENABLE_SCROLL',
    SHOW_LIGHTBOX: 'SHOW_LIGHTBOX',
    HIDE_LIGHTBOX: 'HIDE_LIGHTBOX',
    OPEN_DROPDOWN: 'OPEN_DROPDOWN',
    SHOW_ZOOMED_IMAGE: 'SHOW_ZOOMED_IMAGE',
    SET_ACCORDION_SUMMARY: 'ADD_ACCORDION_FORM_SUMMARY',
    INACTIVATE_MENU_STATE: 'INACTIVATE_MENU_STATE',
    ACTIVATE_MENU_STATE: 'ACTIVATE_MENU_STATE',
    DISABLE_HEADER_STICKY: 'DISABLE_HEADER_STICKY',
    ENABLE_HEADER_STICKY: 'ENABLE_HEADER_STICKY',
    CLOSE_DROPDOWN: 'CLOSE_DROPDOWN',
    OPEN_PAGE_MENU: 'OPEN_PAGE_MENU',
    CLOSE_PAGE_MENU: 'CLOSE_PAGE_MENU',
    CLOSE_FILTERS: 'CLOSE_FILTERS',
    SHOW_FILTER_BADGES: 'SHOW_FILTER_BADGES',
    HIDE_FILTER_BADGES: 'HIDE_FILTER_BADGES',
    UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION: 'UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION',
    SET_DROPDOWN_SELECTED_OPTION: 'SET_DROPDOWN_SELECTED_OPTION',
    SET_DROPDOWN_OPTIONS: 'SET_DROPDOWN_OPTIONS',
    HIDE_MENU_LISTS: 'HIDE_MENU_LISTS',
    SHOW_MENU_LISTS: 'SHOW_MENU_LISTS',
    CREATE_MAP_MARKERS: 'CREATE_MAP_MARKERS',
    HIDE_NAVIGATION: 'HIDE_NAVIGATION',
    SHOW_NAVIGATION: 'SHOW_NAVIGATION',
    OPEN_MAIN_MENU: 'OPEN_MAIN_MENU',
    HIDE_NAVIGATION_SECONDARY: 'HIDE_NAVIGATION_SECONDARY',
    ADD_ITEM_TO_CART: 'ADD_ITEM_TO_CART',
    CLICK_ADD_TO_BAG: 'CLICK_ADD_TO_BAG',
    UPDATE_SHOPPING_BAG_QTY: 'UPDATE_SHOPPING_BAG_QTY',
    FORM_VALIDATION: 'FORM_VALIDATION',
    INPUT_VALIDATION: 'INPUT_VALIDATION',
    SET_SEARCH_SUGGESTIONS: 'SET_SEARCH_SUGGESTIONS',
    GET_SEARCH_SUGGESTIONS: 'GET_SEARCH_SUGGESTIONS',
    GET_FILTER_COLORS: 'GET_FILTER_COLORS',
    SHOW_INACTIVE_SEARCH: 'SHOW_INACTIVE_SEARCH',
    CLEAR_SEARCH_SUGGESTIONS: 'CLEAR_SEARCH_SUGGESTIONS',
    SET_SEARCH_HINT: 'SET_SEARCH_HINT',
    RE_INITIALIZE_SLIDER: 'RE_INITIALIZE_SLIDER',
    CLEAR_FILTERS: 'CLEAR_FILTERS',
    UPDATE_COLLAPSED_FILTERS: 'UPDATE_COLLAPSED_FILTERS',
    UPDATE_OLAPIC_IMAGES: 'UPDATE_OLAPIC_IMAGES',
    HIDE_ADDRESS_BOX_ADD: 'HIDE_ADDRESS_BOX_ADD',
    ADD_SEARCH_TAG: 'ADD_SEARCH_TAG',
    REMOVE_SEARCH_TAG: 'REMOVE_SEARCH_TAG',
    CLEAR_ALL_TAGS: 'CLEAR_ALL_TAGS',
    CENTER_MAP_ON_MARKER: 'CENTER_MAP_ON_MARKER',
    CLOSE_MAP_INFO_BOX: 'CLOSE_MAP_INFO_BOX',
    CLEAR_MAP_MARKERS: 'CLEAR_MAP_MARKERS',
    SHOW_SPINNER: 'SHOW_SPINNER',
    HIDE_SPINNER: 'HIDE_SPINNER',
    LOAD_MORE_CONTENT: 'LOAD_MORE_CONTENT',
    ENABLE_DELIVERY_CONTINUE_BUTTON: 'ENABLE_DELIVERY_CONTINUE_BUTTON',
    DISABLE_DELIVERY_CONTINUE_BUTTON: 'DISABLE_DELIVERY_CONTINUE_BUTTON',
    LOAD_DISASTER_TAG: 'LOAD_DISASTER_TAG',
    UPDATE_SEARCH_TAGS: 'UPDATE_SEARCH_TAGS',
    HALT_DOMREADY_EVENTS: 'HALT_DOMREADY_EVENTS',
    RESUME_DOMREADY_EVENTS: 'RESUME_DOMREADY_EVENTS',
    SHOW_MINICART: 'SHOW_MINICART',
    HIDE_MINICART: 'HIDE_MINICART',
    UPDATE_GLOBAL_SUGGESTIONS: 'UPDATE_GLOBAL_SUGGESTIONS',
    POPULATE_DATA_ON_SUGGESTIONS: 'POPULATE_DATA_ON_SUGGESTIONS',
    SHOW_NOTIFICATION_AREA: 'SHOW_NOTIFICATION_AREA',
    HIDE_NOTIFICATION_AREA: 'HIDE_NOTIFICATION_AREA',
    ALL_OUT_OF_STOCK: 'ALL_OUT_OF_STOCK',
    SCROLL_TO_FORM_ERROR_MSG: 'SCROLL_TO_FORM_ERROR_MSG',
    SET_INPUT_ERROR_MESSAGE: 'SET_INPUT_ERROR_MESSAGE',
    SET_FORM_ERROR_MESSAGE: 'SET_FORM_ERROR_MESSAGE',
    DISABLE_STICKY_SCROLL: 'DISABLE_STICKY_SCROLL',
    ENABLE_STICKY_SCROLL: 'ENABLE_STICKY_SCROLL',
    OPEN_NAVIGATION: 'OPEN_NAVIGATION',
    CLOSE_NAVIGATION: 'CLOSE_NAVIGATION',
    SHOW_LOADER_OVERLAY: 'SHOW_LOADER_OVERLAY',
    HIDE_LOADER_OVERLAY: 'HIDE_LOADER_OVERLAY',
    SET_INITIAL_COUNTRY: 'SET_INITIAL_COUNTRY',
    ADJUST_SITE_BANNER_POSITION: 'ADJUST_SITE_BANNER',
    CHECK_SIZE_STOCK: 'CHECK_SIZE_STOCK',
    REQUEST_FILTER_COLORS: 'REQUEST_FILTER_COLORS',
    GET_SITE_ENTRY_MESSAGES: 'GET_SITE_ENTRY_MESSAGES',
    ARROW_PRESSED: 'ARROW_PRESSED',
    SEARCH_COUNT_RESULT: 'SEARCH_COUNT_RESULT',
    TRIGGER_SKELETON_LOAD: 'TRIGGER_SKELETON_LOAD',
    SEARCH_INITIALISE: 'SEARCH_INITIALISE',
    UPDATE_PAGE_CONTENT_MARGIN: 'UPDATE_PAGE_CONTENT_MARGIN',
    UPDATE_LOW_STOCK_TEXT: 'UPDATE_LOW_STOCK_TEXT',
    RESET_IMAGE_CLICK_HANDLER: 'RESET_IMAGE_CLICK_HANDLER',
    TEALIUM_TRACK_EVENT: 'TEALIUM_TRACK_EVENT',
    HIDE_NAVIGATION_ON_LEAVE: 'HIDE_NAVIGATION_ON_LEAVE',
    SET_FOCUS_LAZY: 'SET_FOCUS_LAZY',
    ON_OLAPIC_NO_MEDIA_FETCHED: 'ON_OLAPIC_NO_MEDIA_FETCHED'
  },
  // EVENTS
  // - Notifies anyone who might be listening that something happened
  //
  // E.g:
  // EVENT.ENTER_MARQUEE_MENU: 'EVENT_ENTER_MARQUEE_MENU',
  // EVENT.EXIT_MARQUEE_MENU: 'EVENT_EXIT_MARQUEE_MENU',
  EVENT: {
    ON_EXAMPLE: 'EVENT_ON_EXAMPLE',
    ON_LIGHTBOX_OPEN: 'ON_LIGHTBOX_OPEN',
    ON_LIGHTBOX_CLOSE: 'ON_LIGHTBOX_CLOSE',
    ON_QUICKSHOP_LOADED: 'ON_QUICKSHOP_LOADED',
    ON_SC_MENUITEM_OPEN: 'ON_SC_MENUITEM_OPEN',
    ON_SC_MENUITEM_CLOSE: 'ON_SC_MENUITEM_CLOSE',
    ON_DOCUMENT_READY: 'ON_DOCUMENT_READY',
    ON_FRAMEWORK_READY: 'ON_FRAMEWORK_READY',
    ON_PAGE_RESIZE: 'ON_PAGE_RESIZE',
    ON_OVERLAY_SHOW: 'ON_OVERLAY_SHOW',
    ON_OVERLAY_HIDE: 'ON_OVERLAY_HIDE',
    ON_OVERLAY_CLICKED: 'ON_OVERLAY_CLICKED',
    ON_SIGN_OUT: 'ON_SIGN_OUT',
    ON_SIGN_IN_SUCCESS: 'ON_SIGN_IN_SUCCESS',
    ON_NAVIGATION_MENU_OPEN: 'ON_NAVIGATION_MENU_SHOW',
    ON_NAVIGATION_MENU_CLOSE: 'ON_NAVIGATION_MENU_HIDE',
    ON_SCROLL_ENABLED: 'ON_SCROLL_ENABLED',
    ON_SCROLL_DISABLED: 'ON_SCROLL_DISABLED',
    ON_BODY_CLICKED: 'ON_BODY_CLICKED',
    ON_KEY_DOWN: 'ON_KEY_DOWN',
    ON_KEY_UP: 'ON_KEY_UP',
    ON_ITEM_ADDED_TO_CART: 'ON_ITEM_ADDED_TO_CART',
    ON_LEFT_PAGE_LINK_CLICKED: 'ON_LEFT_PAGE_LINK_CLICKED',
    ON_RIGHT_PAGE_LINK_CLICKED: 'ON_RIGHT_PAGE_LINK_CLICKED',
    ON_SELECTED_MENU_LINK: 'ON_SELECTED_MENU_LINK',
    ON_PAGE_CONTENT_HIDE: 'ON_PAGE_CONTENT_HIDE',
    ON_PAGE_CONTENT_SHOW: 'ON_PAGE_CONTENT_SHOW',
    ON_CHECKOUT_SECTION_COMPLETED: 'ON_CHECKOUT_SECTION_COMPLETED',
    ON_OLAPIC_PDP_SLIDE_ADDED: 'ON_OLAPIC_PDP_SLIDE_ADDED',
    ON_OLAPIC_PDP_SLIDER_INITIALIZED: 'ON_OLAPIC_PDP_SLIDER_INITIALIZED',
    ON_PAGE_MENU_CLOSE: 'ON_PAGE_MENU_CLOSE',
    ON_FILTER_SELECTED: 'ON_FILTER_SELECTED',
    ON_FILTER_DESELECTED: 'ON_FILTER_DESELECTED',
    ON_FILTER_BADGE_REMOVE: 'ON_FILTER_BADGE_REMOVE',
    ON_PAGE_CONTENT_MARGIN_CHANGE: 'ON_PAGE_CONTENT_MARGIN_CHANGE',
    ON_BEFORE_STICKY_COMPONENT_STICKY: 'ON_BEFORE_STICKY_COMPONENT_STICKY',
    ON_DROPDOWN_OPEN: 'ON_DROPDOWN_OPEN',
    ON_DROPDOWN_CLOSED: 'ON_DROPDOWN_CLOSED',
    ON_FILTER_CATEGORY_SELECTED: 'ON_FILTER_CATEGORY_SELECTED',
    ON_HEADER_STICY: 'ON_HEADER_STICKY',
    ON_HEADER_NOT_STICKY: 'ON_HEADER_NOT_STICKY',
    ON_WINDOW_LOAD: 'ON_WINDOW_LOAD',
    ON_ERROR_BANNER_RESIZE: 'ON_ERROR_BANNER_RESIZE',
    ON_COOKIE_BANNER_RESIZE: 'ON_COOKIE_BANNER_RESIZE',
    ON_COOKIE_BANNER_CLOSE: 'ON_COOKIE_BANNER_CLOSE',
    ON_COOKIE_BANNER_OPEN: 'ON_COOKIE_BANNER_OPEN',
    ON_COOKIE_MESSAGE_UPDATE: 'ON_COOKIE_MESSAGE_UPDATE',
    ON_SHOW_SEARCH_SUGGESTIONS: 'ON_SHOW_SEARCH_SUGGESTIONS',
    ON_BEFORE_SEARCH_SHOW: 'ON_BEFORE_SEARCH_SHOW',
    ON_SEARCH_HIDDEN: 'ON_SEARCH_HIDDEN',
    ON_OLAPIC_SLIDES_ADDED: 'ON_OLAPIC_SLIDES_ADDED',
    ON_MAP_MARKERS_CREATED: 'ON_MAP_MARKERS_CREATED',
    ON_MAP_MARKER_CLICK: 'ON_MAP_MARKER_CLICK',
    ON_MAP_INITIALIZED: 'ON_MAP_INITIALIZED',
    ON_NAVIGATION_SUBMENU_SHOW: 'ON_NAVIGATION_SUBMENU_SHOW',
    ON_NAVIGATION_SUBMENU_HIDE: 'ON_NAVIGATION_SUBMENU_HIDE',
    ON_TAKEOVER_BEHIND_HEADER: 'ON_TAKEOVER_BEHIND_HEADER',
    ON_DROPDOWN_OPTION_CHOSEN: 'ON_DROPDOWN_OPTION_CHOSEN',
    ON_FORM_SUBMISSION: 'ON_FORM_SUBMISSION',
    ON_CHECKOUT_SECTION_EDIT: 'ON_CHECKOUT_SECTION_EDIT',
    ON_CHECKOUT_SECTION_CANCEL: 'ON_CHECKOUT_SECTION_CANCEL',
    ON_SEARCH_SUGGESTION_CHOSEN: 'ON_SEARCH_SUGGESTION_CHOSEN',
    ON_SEARCH_INPUT: 'ON_SEARCH_INPUT',
    ON_POPSTATE_DONE: 'ON_POPSTATE_DONE',
    ON_POPSTATE_FAIL: 'ON_POPSTATE_FAIL',
    ON_POPSTATE_ALWAYS: 'ON_POPSTATE_ALWAYS',
    ON_SEARCH_ACTIVE: 'ON_SEARCH_ACTIVE',
    ON_SAVE_FAVORITE: 'ON_SAVE_FAVORITE',
    ON_FILTER_MOUSEOVER: 'ON_FILTER_MOUSEOVER',
    ON_FILTER_MOUSELEAVE: 'ON_FILTER_MOUSELEAVE',
    ON_FILTER_UPDATED: 'ON_FILTER_UPDATED',
    ON_NOTIFICATION_MSG_CLOSED: 'ON_NOTIFICATION_MSG_CLOSED',
    ON_DETAILS_SAVED: 'ON_DETAILS_SAVED',
    ON_NEW_DELIVERY_ADDRESS_SAVED: 'ON_NEW_DELIVERY_ADDRESS_SAVED',
    ON_VOUCHER_CODE_ADDED: 'ON_VOUCHER_CODE_ADDED',
    ON_VOUCHER_CODE_REMOVED: 'ON_VOUCHER_CODE_REMOVED',
    ON_PAGE_CONTENT_REPLACED: 'ON_PAGE_CONTENT_REPLACED',
    ON_PAGE_LOAD_ERROR: 'ON_PAGE_LOAD_ERROR',
    ON_MINICART_CLOSE: 'ON_MINICART_CLOSE',
    ON_CONTENT_LOADED: 'ON_CONTENT_LOADED',
    ON_FILTER_VISIBILITY_CHANGED: 'ON_FILTER_VISIBILITY_CHANGED',
    ON_LIGHTBOX_LEVEL_CHANGED: 'ON_LIGHTBOX_LEVEL_CHANGED',
    ON_BEFORE_HIDE_LIGHTBOX: 'ON_BEFORE_HIDE_LIGHTBOX',
    ON_BANNER_ACTIVE: 'ON_BANNER_ACTIVE',
    ON_FILTER_APPLY_BUTTON_CLICKED: 'ON_FILTER_APPLY_BUTTON_CLICKED',
    ON_FILTER_CLEAR_BUTTON_CLICKED: 'ON_FILTER_CLEAR_BUTTON_CLICKED',
    ON_BEFORE_CLOSE_LIGHTBOX: 'ON_BEFORE_CLOSE_LIGHTBOX',
    ON_SIZE_SWATCH_SELECTED: 'ON_SIZE_SWATCH_SELECTED',
    ON_ACI_FORM_INITIALIZED: 'ON_ACI_FORM_INITIALIZED',
    ON_YOUTUBE_API_INIT: 'ON_YOUTUBE_API_INIT',
    ON_PRODUCT_GALLERY_UPDATED: 'ON_PRODUCT_GALLERY_UPDATED',
    ON_PROFILE_RESET: 'ON_PROFILE_RESET',
    ON_SWIPER_INITIALIZED: 'ON_SWIPER_INITIALIZED',
    ON_COLOR_SELECT: 'ON_COLOR_SELECT',
    ON_COLOR_DESELECT: 'ON_COLOR_DESELECT',
    ON_SHOW_FILTER_COLORS: 'ON_SHOW_FILTER_COLORS',
    ON_CHECK_FILTERS: 'ON_CHECK_FILTERS',
    ON_DROPDOWN_CLOSED_FILTERS: 'ON_DROPDOWN_CLOSED_FILTERS',
    ON_RETURN_SITE_ENTRY_MESSAGES: 'ON_RETURN_SITE_ENTRY_MESSAGES',
    ON_SITE_ENTRY_MESSAGE_SET: 'ON_SITE_ENTRY_MESSAGE_SET',
    ON_NEWSLETTER_SIGNUP_OPENED: 'ON_NEWSLETTER_SIGNUP_OPENED',
    ON_ENTER_BUTTON_PRESSED: 'ON_ENTER_BUTTON_PRESSED',
    ON_PRA_PRODUCT_CLICKED: 'ON_PRA_PRODUCT_CLICKED',
    ON_SAVE_CURRENT_FOCUS: 'ON_SAVE_CURRENT_FOCUS',
    ON_RESET_FOCUS: 'ON_RESET_FOCUS',
    ON_PRODUCT_OUT_OF_STOCK: 'ON_PRODUCT_OUT_OF_STOCK',
    ON_LIGHTBOX_CLOSE_BTN_CLICKED: 'ON_LIGHTBOX_CLOSE_BTN_CLICKED',
    ON_OUTSIDE_LIGHTBOX_CLICKED: 'ON_OUTSIDE_LIGHTBOX_CLICKED'
  },
  // KEY
  KEYSTROKE: {
    DELETE: /^Delete$|^Del$/,
    TAB: /^Tab$/,
    ENTER: /^Enter$/,
    BACKSPACE: /^Backspace$/,
    ESCAPE: /^Escape$|^Esc$/,
    SPACEBAR: /^\u0020$|^Spacebar$/,
    ARROW_DOWN: /^ArrowDown$|^Down$/,
    ARROW_UP: /^ArrowUp$|^Up$/,
    ARROW_RIGHT: /^ArrowRight$|^Right$/,
    ARROW_LEFT: /^ArrowLeft$|^Left$/,
    A: /^[aA]$/,
    C: 67,
    V: 86,
    X: 88,
    Z: 90,
    ZERO: 48,
    NINE: 57,
    DELETE_KEY: 46,
    COMMAND_LEFT: 91,
    COMMAND_RIGHT: 93,
    CTRL: 17,
    PAGEUP: 33,
    PAGEDOWN: 34,
    HOME: 35,
    END: 36
  },
  // MEDIA QUERIES
  // - To be used with enquire.js
  MQ: {
    IS_MOBILE: 'screen and (max-width: 767px)',
    IS_TABLET: 'screen and (min-width: 768px) and (max-width: 1024px)',
    IS_PORTRAIT_TABLET: 'screen and (min-width: 768px) and (max-width: 900px)',
    IS_LANDSCAPE_TABLET: 'screen and (min-width: 901px) and (max-width: 1024px)',
    IS_DESKTOP: 'screen and (min-width: 1025px)',
    IS_DESKTOP_HD: 'screen and (min-width: 1281px)',
    MOBILE_AND_TABLET_RANGE: 'screen and (max-width: 1024px)',
    TABLET_AND_DESKTOP_RANGE: 'screen and (min-width: 768px)'
  },
  CLASS: {
    IS_CHECKOUT_PAGE: 'is-checkout',
    IS_DISABLED_STATE: 'is-disabled',
    IS_ENABLED_STATE: 'is-enabled',
    IS_HOVER_STATE: 'is-hover',
    IS_OPENING_STATE: 'is-opening',
    IS_OPEN_STATE: 'is-open',
    IS_SCROLLED: 'is-scrolled',
    IS_ACTIVE_STATE: 'is-active',
    IS_CLOSING_STATE: 'is-closing',
    IS_CLOSED_STATE: 'is-closed',
    IS_VISIBLE_STATE: 'is-visible',
    IS_ORDER_STATE: 'is-order',
    IS_SIGNED_IN_STATE: 'is-signed-in',
    IS_COMPLETED_STATE: 'is-completed',
    DISABLE_SCROLL: 'u-overflow-hidden',
    IS_HIDDEN_STATE: 'is-hidden',
    IS_SOLD_OUT: 'is-sold-out',
    IS_SELECTED: 'is-selected',
    IS_DARK: 'is-dark',
    HAS_RESULTS: 'has-results',
    HAS_TEXT: 'has-text',
    HAS_ERROR: 'has-error',
    IS_STICKY: 'is-sticky',
    IS_FLEXIBLE: 'is-flexible',
    ELLIPSIS: 'u-ellipsis',
    DISPLAY_NONE: 'u-display-none',
    IS_LOADING: 'is-loading',
    HAS_ONE_ITEM: 'has-one-item',
    ERROR_LIGHTBOX: 'open-lightbox-error',
    OPEN_LIGHTBOX: 'open-lightbox',
    IS_TRANSPARENT: 'is-transparent',
    IS_INVISIBLE: 'u-visibility-hidden',
    NO_ANIMATION: 'u-no-animation',
    IS_FILLED: 'is-filled',
    IS_HIGHLIGHTED: 'is-highlighted',
    IS_TREMBLING: 'is-trembling',
    IS_REMOVING_STATE: 'is-removing',
    IS_REPLACING_STATE: 'is-replacing-preview',
    IS_APPEARING_STATE: 'is-appearing',
    IS_LEAVING_STATE: 'is-leaving',
    IS_MORPHING_STATE: 'is-morphing',
    IS_FLYING_IN_AND_OUT: 'fly-in-fly-out',
    IS_SALE: 'is-sale',
    IS_INVERTED: 'is-inverted',
    IS_EXPANDED: 'is-expanded',
    IS_COLLAPSED: 'is-collapsed',
    HAS_NOTIFICATION: 'has-notification',
    HAS_DISABLED_BUTTON_STYLE: 'a-button-nostyle',
    IS_EMPTY: 'IS_EMPTY',
    IS_MOBILE: 'is-mobile',
    IS_DESKTOP: 'is-desktop',
    IS_HALF_OPEN_STATE: 'half-open' ////샵인샵 iframe 때문에 수정 : 20210909
  },
  // Slider related constants
  SWIPER: {
    SELECTOR_ARROW_NEXT: '.swiper-arrow.swiper-next',
    SELECTOR_ARROW_PREV: '.swiper-arrow.swiper-prev',
    SELECTOR_PAGINATION: '.swiper-pagination',
    SELECTOR_SWIPER_WRAPPER: '.swiper-wrapper',
    SELECTOR_SLIDE: '.swiper-slide',
    SELECTOR_SWIPER_CONTROLS: '.swiper-arrow, .swiper-pagination',
    CLASS_CONTAINER: 'swiper-container',
    CLASS_WRAPPER: 'swiper-wrapper',
    CLASS_SLIDE: 'swiper-slide',
    CLASS_ARROW_NEXT: 'swiper-arrow swiper-next',
    CLASS_ARROW_PREV: 'swiper-arrow swiper-prev',
    CLASS_PAGINATION: 'swiper-pagination',
    CLASS_PAGINATION_BULLET: 'swiper-pagination-bullet',
    CLASS_INITIALIZED: 'swiper-initialized'
  },
  SELECTOR: {
    OPEN_LIGHTBOX: '.open-lightbox',
    FOCUSABLE_AREAS: 'a[href], ' + 'area[href], ' + 'input:not([disabled]), ' + 'select:not([disabled]), ' + 'textarea:not([disabled]), ' + 'button:not([disabled]), ' + 'iframe, ' + '[tabindex], ' + '[contentEditable=true]'
  },
  BREAKPOINT: {
    MOBILE: 480,
    TABLET: 1024,
    DESKTOP: 1480
  },
  TIME: {
    ERROR_BANNER_ANIMATION: 400,
    COUNTRY_SELECT_TIMEOUT: 365
  },
  SIZES: {
    HEADER_HEIGHT: 125,
    LIGHTBOX_PADDING: 40
  },
  ENDPOINT: {
    OLAPIC_BASE: '//photorankapi-a.akamaihd.net',
    OLAPIC_TRACKING_BASE: 'https://data.photorank.me/track/widget/',
    STORE_LOCATOR: {
      COUNTRIES: '/locations/locale/%localeID/countries',
      REGIONS: '/locations/locale/%localeID/country/%s/regions',
      CITIES: '/locations/locale/%localeID/country/%s/cities',
      CITY: '/locations/locale/%localeID/country/%s/city/%cityID',
      STORES_BY_COUNTRY: '/stores/locale/%localeID/country/%s',
      STORES_BY_CITY: '/stores/locale/%localeID/country/%s/city/%cityID'
    }
  },
  OLAPIC: {
    TRACKING_EVENTS: {
      WIDGET: {
        RENDER: 'render',
        MOVE_WIDGET: 'move_widget'
      },
      MEDIA: {
        CLICK: 'click',
        VIEW: 'view',
        MOVE_MEDIA: 'move_media',
        CLOSE: 'close'
      },
      MOVE: 'move'
    },
    VERSION: 'v2.2',
    WRAP_RESPONSES: '1',
    TRACKING_COOKIE: '__olapicU'
  },
  REGEX: {
    XSS: /^.*?(?=[\^#%&$\*:;<>\?/\{\|\}\(\)]).*$/,
    PLAIN_TEXT: /[^a-z|A-Z|0-9|\u0020|\u002E|\u002C|\u003F|\u002D|\u0021|\u0027|\u00D8-\u00F6|\u00C0-\u00D6|\u00F8-\u00FF]/,
    //Matches any character except a-z, A-Z, 0-9, [?,.-!'] and " " (space)
    UPPERCASE_CHAR: /(.*[A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2183\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AD\uA7B0-\uA7B4\uA7B6\uFF21-\uFF3A]|\uD806[\uDCA0-\uDCBF]|\uD803[\uDC80-\uDCB2]|\uD801[\uDC00-\uDC27]|\uD835[\uDC00-\uDC19\uDC34-\uDC4D\uDC68-\uDC81\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB5\uDCD0-\uDCE9\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD38\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD6C-\uDD85\uDDA0-\uDDB9\uDDD4-\uDDED\uDE08-\uDE21\uDE3C-\uDE55\uDE70-\uDE89\uDEA8-\uDEC0\uDEE2-\uDEFA\uDF1C-\uDF34\uDF56-\uDF6E\uDF90-\uDFA8\uDFCA])/,
    LOWERCASE_CHAR: /(.*[a-z\xB5\xDF-\xF6\xF8-\xFF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02AF\u0371\u0373\u0377\u037B-\u037D\u0390\u03AC-\u03CE\u03D0\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0529\u052B\u052D\u052F\u0561-\u0587\u13F8-\u13FD\u1D00-\u1D2B\u1D6B-\u1D77\u1D79-\u1D9A\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6\u1FC7\u1FD0-\u1FD3\u1FD6\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6\u1FF7\u210A\u210E\u210F\u2113\u212F\u2134\u2139\u213C\u213D\u2146-\u2149\u214E\u2184\u2C30-\u2C5E\u2C61\u2C65\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73\u2C74\u2C76-\u2C7B\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA699\uA69B\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F\uA771-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793-\uA795\uA797\uA799\uA79B\uA79D\uA79F\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7B5\uA7B7\uA7FA\uAB30-\uAB5A\uAB60-\uAB65\uAB70-\uABBF\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A]|\uD803[\uDCC0-\uDCF2]|\uD835[\uDC1A-\uDC33\uDC4E-\uDC54\uDC56-\uDC67\uDC82-\uDC9B\uDCB6-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDCEA-\uDD03\uDD1E-\uDD37\uDD52-\uDD6B\uDD86-\uDD9F\uDDBA-\uDDD3\uDDEE-\uDE07\uDE22-\uDE3B\uDE56-\uDE6F\uDE8A-\uDEA5\uDEC2-\uDEDA\uDEDC-\uDEE1\uDEFC-\uDF14\uDF16-\uDF1B\uDF36-\uDF4E\uDF50-\uDF55\uDF70-\uDF88\uDF8A-\uDF8F\uDFAA-\uDFC2\uDFC4-\uDFC9\uDFCB]|\uD801[\uDC28-\uDC4F]|\uD806[\uDCC0-\uDCDF])/,
    DIGITS: /.*[0-9]/
  }
};
module.exports = BaseEnums;

},{}],51:[function(require,module,exports){
"use strict";

var _Versions = _interopRequireDefault(require('./versions.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Logger = {
  active: location.hash.indexOf('#log') > -1,
  LOG: function LOG() {
    if (Logger.active === true) {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      console.log(args.join(' '));
    }
  },
  INFO: function INFO() {
    if (Logger.active === true) {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      console.info(args.join(' '));
    }
  },
  ERROR: function ERROR() {
    if (Logger.active === true) {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      console.error(args.join(' '));
    }
  },
  WARN: function WARN() {
    if (Logger.active === true) {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      console.warn(args.join(' '));
    }
  },
  VERSIONS: function () {
    if (location.hash.indexOf('#log') > -1) {
      console.info(_Versions.default);
    }
  }()
};
module.exports = Logger;

},{"./versions.js":59}],52:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _dropdown = _interopRequireDefault(require('./dropdown.js'));

var _Logger = _interopRequireDefault(require('./logger.js'));

var _Enums = _interopRequireDefault(require('./../../themes/p11/enums.js'));

var _Utils = _interopRequireDefault(require('./../../themes/p11/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MDropdown = /*#__PURE__*/function (_Dropdown) {
  _inherits(MDropdown, _Dropdown);

  var _super = _createSuper(MDropdown);

  /**
   * Constructor, will run before page loaded
   */
  function MDropdown() {
    var _this;

    _classCallCheck(this, MDropdown);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    return _this;
  }
  /************************************************************************************************************
   ******************************************** Internal functions ********************************************
   ************************************************************************************************************/

  /**
   * Declare class constants here
   * @private
   */


  _createClass(MDropdown, [{
    key: "_declareConstants",
    value: function _declareConstants() {
      _get(_getPrototypeOf(MDropdown.prototype), "_declareConstants", this).call(this); //Classes


      this.CLASS_BOTTOM_OPTION = 'bottom-option'; //SELECTORS

      this.SELECTOR_PLACEHOLDER = '.placeholder';
      this.SELECTOR_BOTTOM_OPTION = 'ul.bottom-option';
      this.SELECTOR_OPTIONS = '.options li, ul.bottom-option';
      this.SELECTOR_SELECTED_SIBLINGS = '.is-selected ~ li, ul.bottom-option:visible';
      this.SELECTOR_VISIBLE_OPTIONS = '.options li:not(.u-display-none), ul.bottom-option:visible';
      this.SELECTOR_LIGHTBOX = '.o-lightbox';
      this.SELECTOR_ERROR_MESSAGE = '.error-msg';
      this.SELECTOR_INPUT = 'input';
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      _get(_getPrototypeOf(MDropdown.prototype), "_jQueryScopeBinding", this).call(this);

      this._onPlaceholderClick = this._onPlaceholderClick.bind(this);
      this._validate = this._validate.bind(this);
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$input = this.$el.find(this.SELECTOR_INPUT);
      this.$placeholder = this.$el.find(this.SELECTOR_PLACEHOLDER);
      this.$selectedOption = this.$el.find(this.SELECTOR_IS_SELECTED);
      this.$optionsWrapper = this.$el.find(this.SELECTOR_UL_OPTIONS);
      this.$btnBottom = this.$el.find(this.SELECTOR_BOTTOM_OPTION);
      this.$lightbox = $(this.SELECTOR_LIGHTBOX);
      this.$errorMsg = this.$el.find(this.SELECTOR_ERROR_MESSAGE);

      _get(_getPrototypeOf(MDropdown.prototype), "_cacheDOMElements", this).call(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _get(_getPrototypeOf(MDropdown.prototype), "_attachSubscribers", this).call(this);

      this.subscribe(_Enums.default.EVENT.ON_LIGHTBOX_OPEN, this._toggleLightboxListener);
      this.subscribe(_Enums.default.EVENT.ON_QUICKSHOP_LOADED, this._toggleLightboxListener);
      this.subscribe(_Enums.default.EVENT.ON_LIGHTBOX_CLOSE, this._toggleLightboxListener);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _get(_getPrototypeOf(MDropdown.prototype), "_attachSubscribers", this).call(this);

      this.unsubscribe(_Enums.default.EVENT.ON_LIGHTBOX_OPEN, this._toggleLightboxListener);
      this.unsubscribe(_Enums.default.EVENT.ON_QUICKSHOP_LOADED, this._toggleLightboxListener);
      this.unsubscribe(_Enums.default.EVENT.ON_LIGHTBOX_CLOSE, this._toggleLightboxListener);
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      _get(_getPrototypeOf(MDropdown.prototype), "_attachDOMListeners", this).call(this);

      this.$placeholder.on('click', this._onPlaceholderClick);
      this.$btnBottom.on('mouseout', this._onMouseLeave);

      if (this.$input.attr("required")) {
        this.$input.on('invalid change', this._validate);
      }
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      _get(_getPrototypeOf(MDropdown.prototype), "_detachDOMListeners", this).call(this);

      this.$placeholder.off('click', this._onPlaceholderClick);
      this.$btnBottom.off('mouseout', this._onMouseLeave);

      if (this.$input.attr("required")) {
        this.$input.off('invalid change', this._validate);
      }
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Validates the input tag
     * @private
     */

  }, {
    key: "_validate",
    value: function _validate() {
      if (this.$input[0].validity.valueMissing) {
        this.$el.addClass(_Enums.default.CLASS.HAS_ERROR);
        this.$errorMsg.html(this.$input.data('validation-required-text'));
      } else {
        this.$el.removeClass(_Enums.default.CLASS.HAS_ERROR);
      }
    }
    /**
     * Adds or removes lightbox click event listener
     * @private
     */

  }, {
    key: "_toggleLightboxListener",
    value: function _toggleLightboxListener() {
      var cb = this._onBodyClick; // using addEventListener to avoid duplicate event listeners.

      if (this.$lightbox.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        this.$lightbox[0].addEventListener('click', cb);
      } else {
        this.$lightbox[0].removeEventListener('click', cb);
      }
    }
    /**
     * Removes selected state from all options.
     * @private
     */

  }, {
    key: "_removeSelectedOptionState",
    value: function _removeSelectedOptionState() {
      this.$options.removeClass(_Enums.default.CLASS.IS_SELECTED);

      _Utils.default.Accessibility.unselect(this.$options);
    }
    /**
     * Opens dropdown
     * @private
     */

  }, {
    key: "_open",
    value: function _open() {
      this.$el.addClass(_Enums.default.CLASS.IS_OPEN_STATE);

      if (Modernizr.mq(_Enums.default.MQ.IS_MOBILE)) {
        this._preventMobileScroll();
      }

      this.publish(_Enums.default.EVENT.ON_DROPDOWN_OPEN);
    }
    /**
     * Closes dropdown
     * @private
     */

  }, {
    key: "_close",
    value: function _close() {
      if (!this.$lightbox.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        this.publish(_Enums.default.ACTION.HIDE_OVERLAY);
      }

      this._enableMobileScroll();

      this.$el.removeClass(_Enums.default.CLASS.IS_OPEN_STATE);
      this.publish(_Enums.default.EVENT.ON_DROPDOWN_CLOSED, this.$el);
    }
    /**
     * Sets the value of the hidden input element.
     * @private
     */

  }, {
    key: "_setInputValue",
    value: function _setInputValue($target) {
      var currentValue = $target.html();
      this.$input.val(currentValue).attr('data-value', $target.attr('data-value')).trigger('change');
      this.$selectedOption = $target;
      this.$placeholder.text(currentValue);

      if (this.$placeholder.hasClass(this.CLASS_TEMPORARY)) {
        this._resetPlaceholderColor();
      }
    }
    /**
     * Callback when an option is clicked
     * @param event - standard JS event param.
     * @private
     */

  }, {
    key: "_onOptionClick",
    value: function _onOptionClick(event) {
      var $target = $(event.target);

      if (!$target.hasClass(_Enums.default.CLASS.IS_DISABLED_STATE) && !$target.parent().hasClass(this.CLASS_BOTTOM_OPTION) && this.$el.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        var $li = this.$el.find('li');
        $li.removeClass('is-selected');

        _Utils.default.Accessibility.unselect($li);

        $target.addClass('is-selected');

        _Utils.default.Accessibility.select($target);

        this._setInputValue($target);

        this.$selectedOption = $target;

        this._close();
      } else if ($target.parent().hasClass(this.CLASS_BOTTOM_OPTION)) {
        this._close();
      }
    }
  }, {
    key: "_onPlaceholderClick",
    value: function _onPlaceholderClick() {
      if (this.$el.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        this._close();
      } else if (!this.$el.hasClass(_Enums.default.CLASS.IS_DISABLED_STATE) && !this.$el.hasClass(_Enums.default.CLASS.HAS_ONE_ITEM)) {
        this._open();
      }
    }
    /**
     * Prevents mobile scrolling
     * @private
     */

  }, {
    key: "_preventMobileScroll",
    value: function _preventMobileScroll() {
      this.publish(_Enums.default.ACTION.DISABLE_SCROLL, {
        $touchScrollElement: this.$el.find(this.SELECTOR_UL_OPTIONS),
        forceScrollPosition: true
      });
      this.scrollDisabled = true;
    }
    /**
     * Enables mobile scrolling
     * @private
     */

  }, {
    key: "_enableMobileScroll",
    value: function _enableMobileScroll() {
      if (this.scrollDisabled) {
        this.publish(_Enums.default.ACTION.ENABLE_SCROLL);
        this.scrollDisabled = false;
      }
    }
  }]);

  return MDropdown;
}(_dropdown.default); // Export this so we can pick it up and import in main.js


module.exports = MDropdown;

},{"./../../themes/p11/enums.js":66,"./../../themes/p11/utils.js":113,"./dropdown.js":49,"./logger.js":51}],53:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./appeaser-component-base.js'));

var _Enums = _interopRequireDefault(require('./../../themes/p11/enums.js'));

var _Logger = _interopRequireDefault(require('./logger.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OlapicBase = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OlapicBase, _AppeaserComponentBas);

  var _super = _createSuper(OlapicBase);

  function OlapicBase() {
    var _this;

    _classCallCheck(this, OlapicBase);

    _this = _super.apply(this, arguments);
    _this.links = {};
    _this._media = {
      links: {},
      media: []
    };
    _this.callback = undefined;
    _this.settings = {};
    _this.isFilter = false;
    return _this;
  }

  _createClass(OlapicBase, [{
    key: "createProductUrlRequest",
    value: function createProductUrlRequest(onChangeProduct) {
      var _this2 = this;

      var url = _Enums.default.ENDPOINT.OLAPIC_BASE + "/?auth_token=".concat(this.settings.apiKey, "&wrap_responses=").concat(this.settings.wrapResponses, "&version=").concat(this.settings.version);
      $.ajax({
        url: url
      }).done(function (data) {
        url = _Enums.default.ENDPOINT.OLAPIC_BASE + "/customers/".concat(data.data._embedded.customer.id, "/streams/bytag/").concat(_this2.settings.productId, "?auth_token=").concat(_this2.settings.apiKey, "&wrap_responses=").concat(_this2.settings.wrapResponses, "&version=").concat(_this2.settings.version);
        _this2.type = "product";

        _this2.fetchLinks(url, _this2.settings.mediaType, _this2._onMediaFetched, _this2.type, onChangeProduct);
      }).fail(function (e) {
        return _Logger.default.LOG("fetchCustomerId failed", e.responseText);
      });
    }
  }, {
    key: "createRegularUrlRequest",
    value: function createRegularUrlRequest() {
      this.isFilter = false;
      var url = _Enums.default.ENDPOINT.OLAPIC_BASE + "/".concat(this.settings.entity, "/").concat(this.settings.entityId, "?auth_token=").concat(this.settings.apiKey, "&wrap_responses=").concat(this.settings.wrapResponses, "&version=").concat(this.settings.version);
      this.fetchLinks(url, this.settings.mediaType, this._onMediaFetched, this.type);
    }
  }, {
    key: "createCategoryUrlRequest",
    value: function createCategoryUrlRequest() {
      this.isFilter = true;
      var url = _Enums.default.ENDPOINT.OLAPIC_BASE + "/categories/".concat(this.settings.categoryId, "/media/recent?auth_token=").concat(this.settings.apiKey, "&version=").concat(this.settings.version);
      this.fetchLinks(url, this.settings.mediaType, this._onMediaFetched, this.type);
    }
  }, {
    key: "separateMoveEvents",
    value: function separateMoveEvents(type) {
      if (type == _Enums.default.OLAPIC.TRACKING_EVENTS.WIDGET.MOVE_WIDGET || type == _Enums.default.OLAPIC.TRACKING_EVENTS.MEDIA.MOVE_MEDIA) {
        return _Enums.default.OLAPIC.TRACKING_EVENTS.MOVE;
      } else {
        return type;
      }
    }
    /**
     * ajax call to Olapic to send tracking data
     * for "Best photos" widget.
     * */

  }, {
    key: "sendTrackingDataBest",
    value: function sendTrackingDataBest(type, id) {
      var url = null;

      if (type == _Enums.default.OLAPIC.TRACKING_EVENTS.WIDGET.RENDER || type == _Enums.default.OLAPIC.TRACKING_EVENTS.WIDGET.MOVE_WIDGET) {
        type = this.separateMoveEvents(type);
        url = _Enums.default.ENDPOINT.OLAPIC_TRACKING_BASE + "".concat(this.settings.entityId, "/best/") + type + "?auth_token=".concat(this.settings.apiKey, "&analytics_id=") + this.getOlapidTrackingCookie() + "&pics=".concat(this.settings.count, "&version=").concat(this.settings.version);
      } else {
        if (id != null) {
          type = this.separateMoveEvents(type);
          url = _Enums.default.ENDPOINT.OLAPIC_TRACKING_BASE + "".concat(this.settings.entityId, "/best/media/") + id + "/" + type + "?auth_token=".concat(this.settings.apiKey, "&analytics_id=") + this.getOlapidTrackingCookie() + "&pics=1&version=".concat(this.settings.version);
        }
      }

      $.ajax({
        url: url
      }).fail(function (e) {
        return _Logger.default.LOG("sendTrackingDataBest failed", e.responseText);
      });
    }
    /**
     * ajax call to Olapic to send tracking data
     * for "Stream" widget.
     * */

  }, {
    key: "sendTrackingDataStream",
    value: function sendTrackingDataStream(type, streamId, uniqueId) {
      var url = null;

      if ((type == _Enums.default.OLAPIC.TRACKING_EVENTS.WIDGET.RENDER || type == _Enums.default.OLAPIC.TRACKING_EVENTS.WIDGET.MOVE_WIDGET) && streamId != null) {
        type = this.separateMoveEvents(type);
        url = _Enums.default.ENDPOINT.OLAPIC_TRACKING_BASE + "".concat(this.settings.entityId, "/stream/") + streamId + "/" + type + "?auth_token=".concat(this.settings.apiKey, "&analytics_id=") + this.getOlapidTrackingCookie() + "&pics=".concat(this.settings.count, "&version=").concat(this.settings.version);
      } else {
        if (streamId != null && uniqueId != null) {
          type = this.separateMoveEvents(type);
          url = _Enums.default.ENDPOINT.OLAPIC_TRACKING_BASE + "".concat(this.settings.entityId, "/stream/") + streamId + "/media/" + uniqueId + "/" + type + "?auth_token=".concat(this.settings.apiKey, "&analytics_id=") + this.getOlapidTrackingCookie() + "&pics=1&version=".concat(this.settings.version);
        }
      }

      $.ajax({
        url: url
      }).fail(function (e) {
        return _Logger.default.LOG("sendTrackingDataStream failed", e.responseText);
      });
    }
    /**
     * Fetches Olapic links
     * @param url
     * @param callback
     */

  }, {
    key: "fetchLinks",
    value: function fetchLinks(url, mediaType, callback, type, onChangeProduct) {
      var _this3 = this;

      this.callback = callback;
      this.onChangeProduct = onChangeProduct;
      this.mediaType = mediaType || 'recent';
      $.ajax({
        url: url
      }).done(function (data) {
        return _this3.parseLinks(data, type, url);
      }).fail(function (e) {
        return _Logger.default.LOG("fetchLinks failed", e.responseText);
      });
    }
    /**
     * Fetches Olapic media list
     * @param url
     * @param count
     */

  }, {
    key: "fetchMedia",
    value: function fetchMedia(url, count) {
      var _this4 = this;

      $.ajax({
        url: url + (count > 0 ? '&count=' + count : '') + '&include_tagged_galleries=false'
      }).done(function (data) {
        return _this4.parseMedia(data);
      }).fail(function (e) {
        console.log("fetchMedia failed", e.responseText);

        if (_this4._onNoMediaFetched) {
          _this4._onNoMediaFetched();
        }
      });
    }
    /**
     * Fetches olapic media next link
     * @param count
     */

  }, {
    key: "fetchNext",
    value: function fetchNext(count) {
      var _this5 = this;

      if (this.hasNext()) {
        $.ajax({
          url: this._media.links.next.href + (count > 0 ? '&count=' + count : '') + '&include_tagged_galleries=false'
        }).done(function (data) {
          return _this5.parseMedia(data);
        }).fail(function (e) {
          return console.log("fetchMedia next failed", e.responseText);
        });
      }
    }
    /**
     * Checks if we have reached the end of the media stream
     * @returns {boolean}
     */

  }, {
    key: "hasNext",
    value: function hasNext() {
      return this._media.links.next && this._media.links.next.href != null;
    }
    /**
     * Parse links from response
     * @param links
     */

  }, {
    key: "parseLinks",
    value: function parseLinks(json, type, url) {
      if (this.isFilter) {
        return this.fetchMedia(url, this.settings.count || 1);
      } else if (this.settings.entity == "categories" || type == "product") {
        var links;

        if (json.data._embedded) {
          links = json.data._embedded['media:' + this.mediaType]._links.self.href;
        }

        if (links && links.length) {
          return this.fetchMedia(links, this.settings.count || 1);
        } else {
          this.callback();
          return;
        }
      } else {
        var _links = json.data._embedded.customer._embedded;

        for (var key in _links) {
          this.links[key] = _links[key]._links.self.href;
        }

        var media = this.links['media:' + this.mediaType];

        if (media.length > 0) {
          return this.fetchMedia(media, this.settings.count || 1);
        }
      }

      _Logger.default.ERROR("No media:[".concat(this.mediaType, "] links found from Olapic Feed"));
    }
    /**
     * Parse media response
     * @param json
     */

  }, {
    key: "parseMedia",
    value: function parseMedia(json) {
      // get all the links
      var medias = json.data._embedded.media;
      this._media.links = json.data._links;
      var self = this;
      medias.forEach(function (m) {
        var media = m; // clean categories

        if (media._embedded['categories:all']._embedded.category != null) {
          media.stream = media._embedded['categories:all']._embedded.category.map(self._cleanHAL); // add base_image

          media._embedded['streams:all']._embedded.stream.forEach(function (n, index) {
            media._embedded['streams:all']._embedded.stream[index].baseimage = n._embedded;
          }); // clean streams


          media.stream = media._embedded['streams:all']._embedded.stream.map(self._cleanHAL);
        } // clean uploader


        media.uploader = self._cleanHAL(media._embedded.uploader); // remove all _ indexes

        self._cleanHAL(media); // store data


        self._media.media.push(media);
      });

      if (this.callback) {
        this.callback(this.onChangeProduct, medias.length);
      }
    }
    /**
     * Remove HAL specific keys, starting with _
     * @param json
     * @returns {*}
     * @private
     */

  }, {
    key: "_cleanHAL",
    value: function _cleanHAL(json) {
      for (var key in json) {
        if (key.indexOf('_') == 0) {
          delete json[key];
        }
      }

      return json;
    }
    /**
     * Sets the __olapicU cookie value if cookie is not
     * already set. To be passed as a tracking parameter
     * to the Olapic analytics API.
     * */

  }, {
    key: "setOlapicTrackingCookie",
    value: function setOlapicTrackingCookie() {
      if (!Cookies.get(_Enums.default.OLAPIC.TRACKING_COOKIE)) {
        var rString = this.createRandomString(32, '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');
        Cookies.set(_Enums.default.OLAPIC.TRACKING_COOKIE, rString, {
          expires: 30
        });
      }
    }
    /**
    * Returns the __olapicU cookie value if set
    * */

  }, {
    key: "getOlapidTrackingCookie",
    value: function getOlapidTrackingCookie() {
      var cookieValue = Cookies.get(_Enums.default.OLAPIC.TRACKING_COOKIE);

      if (cookieValue) {
        return cookieValue;
      }
    }
    /**
     * Generates and returns a random string
     * to be used as __olapicU cookie value.
     * */

  }, {
    key: "createRandomString",
    value: function createRandomString(length, chars) {
      var result = '';

      for (var i = length; i > 0; --i) {
        result += chars[Math.round(Math.random() * (chars.length - 1))];
      }

      return result;
    }
  }]);

  return OlapicBase;
}(_appeaserComponentBase.default); // Export AMD, CommonJS/ES6 module or assume global namespace


if (typeof define !== 'undefined' && define.amd) {
  define([], OlapicBase);
} else if (typeof module !== 'undefined' && module.exports) {
  module.exports = OlapicBase;
} else {
  window.OlapicBase = OlapicBase;
}

},{"./../../themes/p11/enums.js":66,"./appeaser-component-base.js":47,"./logger.js":51}],54:[function(require,module,exports){
"use strict";

var _Enums = _interopRequireDefault(require('./../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var DEBUG = true;

var win = window,
    doc = document,
    _retinaScreen = win.devicePixelRatio > 1,
    unique = function () {
  var count = 0;
  return function () {
    return ++count;
  };
}();

win.Rimd = function (params) {
  var publ = this;
  var options = {};
  var priv = {
    defaults: {
      nodeList: [],
      className: 'rimd',
      widths: ['320', '600', '1024'],
      heights: ['320', '600', '1024'],
      path: 'resimage/?image={path}&w={width}',
      pathOverride: {},
      blacklist: [],
      reloadOnResize: true,
      lazyload: false,
      closestAbove: false,
      centerImage: false,
      dubbleSizeRetina: false,
      retinaMultiplyer: 2,
      retinaQuality: 40,
      normalQuality: 80
    }
  };
  var images = [],
      elems = [],
      attr = [],
      queue = [],
      lazyQueue = [],
      regexes = {},
      pathHasGet,
      pathRegex,
      nodeList,
      resizeHandler,
      properties,
      scrollHandler;

  priv.init = function (params) {
    options = publ.extend(priv.defaults, params);
    options.dubbleSizeRetina = options.dubbleSizeRetina && _retinaScreen;
    pathHasGet = options.path.split('?').length > 1;
    pathRegex = publ.buildPathRegex(options.path);

    if (publ.sizeOf(options.pathOverride)) {
      ;

      (function () {
        var key;

        for (key in options.pathOverride) {
          if (!options.pathOverride.hasOwnProperty(key)) continue;
          regexes[key] = publ.buildPathRegex(options.pathOverride[key]);
        }
      })();
    }

    publ.manageMobileAlternateImage();

    if (options.nodeList.length) {
      nodeList = options.nodeList;
    } else {
      nodeList = publ.getElementByClass(options.className);
    }

    publ.addImages(nodeList);
    nodeList = null;

    if (options.reloadOnResize) {
      resizeHandler = publ.throttle(function () {
        publ.manageMobileAlternateImage();
        var newAttr = publ.getImageAttributes(elems),
            i = 0,
            len = elems.length;

        for (; i < len; i++) {
          if (!('src' in newAttr[i])) continue;

          if (attr[i].path !== publ.getImagePath(newAttr[i])) {
            images[i].updateImage(newAttr[i]);
          }
        }

        attr = newAttr;
      }, 200);
      win.addEventListener('resize', resizeHandler);
    }

    if (options.lazyload) {
      scrollHandler = publ.throttle(function () {
        var len = lazyQueue.length,
            toLoad,
            docEl,
            clientTop,
            windowHeight,
            top,
            item;
        if (!len) return;
        toLoad = [];
        docEl = doc.documentElement;
        clientTop = docEl.clientTop || 0;
        windowHeight = docEl.clientHeight || win.innerHeigth;

        for (len -= 1; len > -1; len--) {
          top = lazyQueue[len].e.getBoundingClientRect().top;

          if (top - clientTop - windowHeight * 1.5 < 0) {
            toLoad.push(lazyQueue.splice(len, 1)[0]);
          }
        }

        for (len = toLoad.length - 1; len > -1; len--) {
          item = toLoad[len];
          item.i.src = item.s;
          item.e.appendChild(item.i);
        }
      }, 150);
      win.addEventListener('scroll', scrollHandler);
      win.addEventListener('resize', scrollHandler);
    }
  };

  publ.manageMobileAlternateImage = function () {
    var cmpWithSpecificRatios = document.querySelectorAll('*[data-mobile-image]');

    if (cmpWithSpecificRatios.length !== 0) {
      cmpWithSpecificRatios.forEach(function (cmp) {
        var noScriptTag = cmp.querySelector('noscript');
        var mobileDataSrc = noScriptTag === null || noScriptTag === void 0 ? void 0 : noScriptTag.getAttribute('data-mobile-src');
        var desktopDataSrc = noScriptTag === null || noScriptTag === void 0 ? void 0 : noScriptTag.getAttribute('data-desktop-src');

        if (Modernizr.mq(_Enums.default.MQ.MOBILE_AND_TABLET_RANGE)) {
          if (mobileDataSrc && noScriptTag) {
            noScriptTag.innerHTML = "<img src=\"".concat(mobileDataSrc, "\"/>");
            noScriptTag.setAttribute('data-src', mobileDataSrc);
          }
        } else {
          if (desktopDataSrc && noScriptTag) {
            noScriptTag.innerHTML = "<img src=\"".concat(desktopDataSrc, "\"/>");
            noScriptTag.setAttribute('data-src', desktopDataSrc);
          }
        }
      });
    }
  };

  publ.buildPathRegex = function (path) {
    var rex = /\{([\s\S]+?)\}/g,
        pathRegex = '',
        match;

    while ((match = rex.exec(path)) !== null) {
      pathRegex += '|\\{' + match[1] + '\\}';
    }

    return new RegExp(pathRegex.substr(1), 'g');
  };

  publ.addImages = function (nodeList) {
    var attributes = publ.getImageAttributes(nodeList),
        len = nodeList.length,
        i = 0;

    for (; i < len; i++) {
      if (attributes[i].offsetWidth) {
        images.push(publ.singleImage(nodeList[i], attributes[i], options.lazyload, options.centerImage, lazyQueue));
        elems.push(nodeList[i]);
        attr.push(attributes[i]);
      } else {
        queue.push(nodeList[i]);
      }
    }
  };

  publ.getImagePath = function (attr) {
    var parts = attr.src.split('?'),
        rex = pathRegex,
        path = options.path,
        newPath,
        get;
    attr.path = parts[0];
    if (options.blacklist.indexOf(attr.ext) !== -1) return attr.path;

    if (attr.ext in regexes) {
      rex = regexes[attr.ext];
      path = options.pathOverride[attr.ext];
    }

    newPath = path.replace(rex, function (match, tag, cha) {
      return publ.pathReplace(attr, match, tag, cha);
    });

    if (parts.length > 1) {
      get = parts[1];

      if (pathHasGet) {
        newPath += '&' + get;
      } else {
        newPath += '?' + get;
      }
    }

    attr.path = newPath;
    return newPath;
  };

  publ.pathReplace = function (attr, match) {
    var tmp;

    switch (match) {
      case '{width}':
        tmp = publ.getClosestValues(options.widths, attr.offsetWidth) * (options.dubbleSizeRetina ? options.retinaMultiplyer : 1);
        tmp = ~~tmp;
        attr.width = tmp;
        return tmp;

      case '{height}':
        return publ.getHeight(attr);

      case '{retina}':
        return _retinaScreen ? 1 : 0;

      case '{quality}':
        return options.dubbleSizeRetina ? options.retinaQuality : options.normalQuality;

      default:
        tmp = match.substr(1, match.length - 2);
        return tmp in attr ? attr[tmp] : '';
    }
  };

  publ.getHeight = function (attr) {
    var height;

    if (_typeof(options.heights) === 'object') {
      height = publ.getClosestValues(options.heights, attr.offsetHeight);
    } else if (options.heights === 'aspectratio') {
      height = ~~(attr.offsetHeight / attr.offsetWidth * publ.getClosestValues(options.widths, attr.offsetWidth));
    }

    height = height * (options.dubbleSizeRetina ? options.retinaMultiplyer : 1);
    attr.height = ~~height;
    return height;
  };

  publ.getExtension = function (path) {
    var file, ext;
    if (!path) return false;
    file = path.split(/\?|\#/i)[0];
    ext = file.match(/(?:\.([^.]+))?$/)[1];
    return ext;
  };

  publ.getImageAttributes = function (images) {
    var attr = [],
        len = images.length,
        i = 0,
        data = {},
        noscript,
        key;

    for (; i < len; i++) {
      attr[i] = {};
      attr[i].offsetWidth = images[i].offsetWidth;
      attr[i].offsetHeight = images[i].offsetHeight;
      noscript = images[i].getElementsByTagName('noscript')[0];
      if (!noscript) continue;
      data = noscript.dataset ? noscript.dataset : publ.getDataAttr(noscript);
      if (!('src' in data)) continue;

      for (key in data) {
        /* Android DOMStringMap has no method "hasOwnProperty()" */
        attr[i][key] = data[key];
      }

      attr[i].ext = publ.getExtension(attr[i].src);
      attr[i].path = publ.getImagePath(attr[i]);
    }

    return attr;
  }; // el.dataset fallback for IE8


  publ.getDataAttr = function (el) {
    var data = {},
        i = 0,
        attr,
        len,
        key;
    if (typeof el === 'undefined' || !('attributes' in el)) return data;
    attr = el.attributes;
    len = attr.length;

    for (; i < len; i++) {
      if (/^data-/.test(attr[i].name)) {
        key = attr[i].name.substr(5).replace(/-(.)/g);
        data[key] = attr[i].value;
      }
    }

    return data;
  };

  publ.getElementByClass = function (selector) {
    var result = [];
    selector = selector.replace(/[.]/, '');

    if (doc.querySelectorAll) {
      result = doc.querySelectorAll('.' + selector);
    } else {
      result = publ.legacyGetElementByClass(selector);
    }

    return result;
  };

  publ.legacyGetElementByClass = function (selector) {
    var result = [],
        elems = doc.getElementsByTagName('*'),
        i;

    for (i in elems) {
      if ((' ' + elems[i].className + ' ').indexOf(' ' + selector + ' ') > -1) {
        result.push(elems[i]);
      }
    }

    return result;
  };

  publ.updateQueue = function () {
    var imageQueue = queue; // Reset queue

    queue = [];
    publ.addImages(imageQueue);
  };

  publ.getClosestValues = function (stack, needle) {
    var i = 0,
        len,
        lowDiff,
        diff,
        result;
    if (!stack) return needle;
    len = stack.length;
    result = stack[len - 1];

    for (; i < len; i++) {
      diff = stack[i] - needle;

      if (!options.closestAbove) {
        // Turn all values positive
        diff = diff < 0 ? ~diff : diff;
      } else if (diff < 0) continue;

      if (lowDiff === undefined || lowDiff > diff) {
        lowDiff = diff;
        result = stack[i];
      }
    }

    return result;
  };

  publ.destruct = function () {
    var i = 0,
        len = images.length;

    if (options.reloadOnResize) {
      win.removeEventListener('resize', resizeHandler);
    }

    if (options.lazyload) {
      win.removeEventListener('resize', scrollHandler);
      win.removeEventListener('scroll', scrollHandler);
    }

    for (; i < len; i++) {
      images[i].destruct();
    }

    lazyQueue = null;
    images = null;
    elems = null;
    attr = null;
  };

  publ.singleImage = function (elem, attr, lazyload, centerImage, lazyQueue) {
    var id = unique(),
        img,
        src;
    updateImage(attr);

    function updateImage(attr) {
      if (!attr.path) return;

      if (img && img.parentNode) {
        img.parentNode.removeChild(img);
      }

      img = doc.createElement('img');
      src = attr.path;
      img.alt = attr.alt ? attr.alt : '';
      if (attr.title) img.title = attr.title;
      if (attr['class']) img.className = attr['class'];

      if (centerImage) {
        if (attr.width) {
          img.style.left = '50%';
          img.style.marginLeft = -attr.width / 2 + 'px';
        }

        if (attr.height) {
          img.style.top = '50%';
          img.style.marginTop = -attr.height / 2 + 'px';
        }
      }

      removeFromQueue();

      if (!lazyload || isElementInViewport(elem)) {
        img.src = src;
        elem.appendChild(img);
      } else {
        lazyQueue.push({
          id: id,
          e: elem,
          i: img,
          s: src
        });
      }
    }

    function removeFromQueue() {
      for (var i = 0, len = lazyQueue.length; i < len; i++) {
        if (lazyQueue[i].id === id) {
          lazyQueue.splice(i, 1);
          return;
        }
      }
    }

    function isElementInViewport(el) {
      var top = el.getBoundingClientRect().top,
          docEl = doc.documentElement;
      return top - (docEl.clientTop || 0) - (docEl.clientHeight || win.innerHeigth) * 1.5 < 0;
    }

    function destruct() {
      if (img && img.parentNode) {
        img.parentNode.removeChild(img);
      }

      img = null;
    }

    return {
      updateImage: updateImage,
      destruct: destruct
    };
  };

  publ.extend = function (destination, source) {
    for (var property in source) {
      if (source.hasOwnProperty(property) && typeof source[property] !== 'undefined') destination[property] = source[property];
    }

    return destination;
  };

  publ.sizeOf = function (object) {
    var length = 0,
        property;

    for (property in object) {
      if (object.hasOwnProperty(property)) length++;
    }

    return length;
  };

  publ.throttle = function (fn, threshhold, context) {
    var args,
        last = 0,
        deferTimer = null,
        later = function later() {
      last = new Date().getTime();
      fn.apply(context, args);
      context = args = null;
    };

    threshhold = threshhold || 17; // ~ 1000 / 60

    return function () {
      var now = new Date().getTime(),
          remaining = threshhold - (now - last);
      args = arguments;
      context = context || this;

      if (last && (remaining <= 0 || remaining > threshhold)) {
        if (deferTimer) {
          clearTimeout(deferTimer);
          deferTimer = null;
        }

        later();
      } else if (!last) {
        // Leading call
        later();
      } else {
        // Trailing call
        clearTimeout(deferTimer);
        deferTimer = setTimeout(later, remaining);
      }
    };
  };

  priv.init(params);
}; // this is only for the mocked attribute to make demo site works fine.
//The props are instead exposed from AEM on the real site, and based on brand.


window.appRimdService = window.appRimdService || {
  options: {
    rimd: {
      service: '{path}',
      product: '{path}',
      serviceOverride: {
        gif: '{path}'
      }
    }
  }
};
window.rimd = new window.Rimd({
  closestAbove: true,
  reloadOnResize: true,
  className: 'rimd',
  widths: [304, 320, 375, 440, 530, 640, 800, 960, 1280],
  path: window.appRimdService.options.rimd.service || '{path}',
  pathOverride: window.appRimdService.options.rimd.serviceOverride || {},
  lazyload: true,
  dubbleSizeRetina: true,
  retinaQuality: 80,
  retinaMultiplyer: 1.5
});
module.exports = Rimd;

},{"./../../themes/p11/enums.js":66}],55:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./logger.js'));

var _Enums = _interopRequireDefault(require('./../../themes/p11/enums.js'));

var _Utils = _interopRequireDefault(require('./../../themes/p11/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var SiteEntryLocator = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(SiteEntryLocator, _AppeaserComponentBas);

  var _super = _createSuper(SiteEntryLocator);

  /**
   * Constructor, will run before page loaded
   */
  function SiteEntryLocator() {
    var _this;

    _classCallCheck(this, SiteEntryLocator);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(SiteEntryLocator, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      this._detachMQHandlers();

      _get(_getPrototypeOf(SiteEntryLocator.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_COUNTRY_DATA = '.country-data';
      this.GOOGLE_API = '//maps.google.com/maps/api/js?client=gme-hmhennesmauritzab&callback=initialize&language=en';
      this.COOKIE_NOTIFICATION = 'cookie-notification';
      this.COOKIE2_NOTIFICATION = 'cookie2-notification';
      this.COOKIE_LOCALE = 'HMCORP_locale';
      this.COUNTRY_NAME_PLACEHOLDER = '{{country-name}}';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._attachMQHandlers();

      this._appendGoogleApi();
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$countryShippingData = this.$el.find(this.SELECTOR_COUNTRY_DATA);
    }
    /**
     * Scopes "thi-s" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      _Logger.default.INFO(this.constructor.name, ':: _jQueryScopeBinding');

      this._onDOMReady = this._onDOMReady.bind(this);
      this._checkCookies = this._checkCookies.bind(this);
      this._getCurrentLocation = this._getCurrentLocation.bind(this);
      this._setSiteEntryMessage = this._setSiteEntryMessage.bind(this);
      this._getSiteEntryMessages = this._getSiteEntryMessages.bind(this);
      this._initialize = this._initialize.bind(this);
      this._appendGoogleApi = this._appendGoogleApi.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_RETURN_SITE_ENTRY_MESSAGES, this._checkCookies);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_RETURN_SITE_ENTRY_MESSAGES, this._checkCookies);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {}
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
    /**
     * Attach media query handlers
     * @private
     */

  }, {
    key: "_attachMQHandlers",
    value: function _attachMQHandlers() {}
    /**
     * Detach media query handlers
     * @private
     */

  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {}
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Appends the google API if it's not already appended.
     * @private
     */

  }, {
    key: "_appendGoogleApi",
    value: function _appendGoogleApi() {
      window.initialize = this._initialize;

      if (!$("#google-api").length) {
        $('body').append('<script id="google-api"  src="' + this.GOOGLE_API + '" async defer></script>');
      }
    }
    /**
     * Initialize the scripts when the google api has been loaded.
     * @private
     */

  }, {
    key: "_initialize",
    value: function _initialize() {
      this._getSiteEntryMessages(); //If we are on a store-locator page


      if (window.initMap) {
        window.initMap();
      }
    }
    /**
     * Get the brand specific site entry messages from AEM
     * @private
     */

  }, {
    key: "_getSiteEntryMessages",
    value: function _getSiteEntryMessages() {
      this.publish(_Enums.default.ACTION.GET_SITE_ENTRY_MESSAGES);
    }
    /**
     * Checks the cookies for notification and country code from locale, and depending on those either gets a geolocation, sets a new message, or keeps the last message.
     * @param siteEntryData
     * @private
     */

  }, {
    key: "_checkCookies",
    value: function _checkCookies(siteEntryData) {
      var countryId = null,
          cookieMessage = Cookies.get(this.COOKIE_NOTIFICATION) !== undefined ? Cookies.get(this.COOKIE_NOTIFICATION) : Cookies.get(this.COOKIE2_NOTIFICATION);

      try {
        countryId = Cookies.get(this.COOKIE_LOCALE).match(/\w{2}_(\w{2})/)[1];
      } catch (e) {}

      if (cookieMessage !== 'viewed') {
        //If we're not on a global shipping site: select country from list in utils.
        if (countryId !== "WW") {
          var selectedCountry = countryId ? _Utils.default.GetCountry.getCountryNameFromCode(countryId) : undefined;

          this._setSiteEntryMessage(siteEntryData, countryId, selectedCountry, false);
        } //If we are on a global shipping site (WW) and it's either first time or been more than [30] minutes since last geolocation: do new geolocation.
        else if (new Date().getTime() >= sessionStorage.getItem("timeStamp") && countryId === "WW") {
            this._getCurrentLocation(countryId, siteEntryData);
          } else if (new Date().getTime() <= sessionStorage.getItem("timeStamp") && countryId === "WW") {
            var _selectedCountry = countryId ? _Utils.default.GetCountry.getCountryNameFromCode(countryId) : undefined;

            this._setSiteEntryMessage(siteEntryData, countryId, _selectedCountry, false);
          } //Otherwise use the last message stored in session.
          else {
              this.publish(_Enums.default.EVENT.ON_SITE_ENTRY_MESSAGE_SET, sessionStorage.getItem("message"));
            }
      }
    }
    /**
     * Gets the current location of the user, if allowed.
     * @private
     */

  }, {
    key: "_getCurrentLocation",
    value: function _getCurrentLocation(cookieCountryID, siteEntryData) {
      var self = this,
          countryId = null,
          countryName = null;
      var options = {
        enableHighAccuracy: true,
        maximumAge: 0
      }; // Get current location

      if (navigator.geolocation) {
        var id = navigator.geolocation.watchPosition(function (position) {
          var initialLocation = new google.maps.LatLng(position.coords.latitude, position.coords.longitude),
              geocoder = new google.maps.Geocoder();
          geocoder.geocode({
            'location': {
              lat: initialLocation.lat(),
              lng: initialLocation.lng()
            }
          }, function (results, status) {
            if (status === google.maps.GeocoderStatus.OK) {
              findCountry: for (var i = 0; i < results.length; i++) {
                for (var j = 0; j < results[i].address_components.length; j++) {
                  // Get country name and 2 character country code
                  // check so that country exist in dropdown
                  if (results[i].address_components[j].types[0] === "country") {
                    countryId = results[i].address_components[j].short_name;
                    countryName = results[i].address_components[j].long_name;
                    break findCountry;
                  }
                }
              }
            } // Set site entry message when countryID has been found


            if (countryId !== '') {
              self._setSiteEntryMessage(siteEntryData, countryId, countryName, true);

              navigator.geolocation.clearWatch(id);
            }
          });
        }, function (error) {
          if (error.code === 1 || error.code === 2) {
            self._setSiteEntryMessage(siteEntryData, countryId, countryName, true);

            navigator.geolocation.clearWatch(id);
          }
        }, options);
      } else {
        self._setSiteEntryMessage(siteEntryData, countryId, countryName, true);
      }
    }
    /**
     * Sets the site entry message depending on geolocation and if there is a local site, only shipping, or none of those.
     * Sets the session timeout and message
     * @param siteEntryData
     * @param countryID
     * @param countryName
     * @private
     */

  }, {
    key: "_setSiteEntryMessage",
    value: function _setSiteEntryMessage(siteEntryData, countryID, countryName, isGlobal) {
      var message = "",
          localSitesCountries = this.$countryShippingData.data("countries-with-local-sites"),
          shippingCountries = this.$countryShippingData.data("countries-with-delivery"),
          showCountrySelect = false;

      if (isGlobal) {
        //If we cannot get a geolocation.
        if (!countryID) {
          message = siteEntryData['UI-5'];
          showCountrySelect = true;
        } //If the current location does not have a local site or shipping
        else if (!localSitesCountries.includes(countryID) && !shippingCountries.includes(countryID)) {
            message = siteEntryData['UI-4'];
          } //If the current location does have a local site
          else if (localSitesCountries.includes(countryID)) {
              message = siteEntryData['UI-2'];
            } //If the current site does have shipping
            else if (shippingCountries.includes(countryID)) {
                message = siteEntryData['UI-3'];
              }

        var expirationTime = new Date().getTime() + 1000 * 60 * 60 * 24; //24h

        sessionStorage.setItem("timeStamp", expirationTime);
      } else {
        message = siteEntryData['UI-1'];
      } //TODO: Temporary fix. Returns language part of locale


      var getCountryCodeFromURL = function getCountryCodeFromURL() {
        var regexp = new RegExp(/(\/[a-z]{2}_[a-z]{2,3}\/)|(\/en\/)/gi),
            matches = window.location.pathname.match(regexp);

        if (matches === null) {
          // no langCurrency segment in url; should never happen
          return ""; // return something that will fail visibly
        }

        var firstMatch = matches[0];
        var urlLangCurrencySegment = firstMatch.substring(1, 3);
        var lastMatch = firstMatch.substring(4, 6).toLowerCase();
        return urlLangCurrencySegment === "de" ? lastMatch : urlLangCurrencySegment;
      }; //Replace country name placeholders in the messages if there are any.


      if (message.indexOf(this.COUNTRY_NAME_PLACEHOLDER) >= 0 && countryName) {
        var replaceText = new RegExp(this.COUNTRY_NAME_PLACEHOLDER, "g"); //TODO: Temporary fix, race condition for Germany coutry name text

        if (getCountryCodeFromURL() === "de") {
          countryName = "Deutschland";
        } else if (getCountryCodeFromURL() === "ch") {
          countryName = "Schweiz";
        }

        message = message.replace(replaceText, countryName);
      } //Set session timeout and message


      sessionStorage.setItem("message", message);
      var cookieCountryId = countryID ? countryID : "undefined";
      Cookies.set("countryId", cookieCountryId, {
        expires: 7
      });
      this.publish(_Enums.default.EVENT.ON_SITE_ENTRY_MESSAGE_SET, message, showCountrySelect);
    }
  }]);

  return SiteEntryLocator;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = SiteEntryLocator;

},{"./../../themes/p11/enums.js":66,"./../../themes/p11/utils.js":113,"./appeaser-component-base.js":47,"./logger.js":51}],56:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./logger.js'));

var _Enums = _interopRequireDefault(require('./../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var SkeletonLoading = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(SkeletonLoading, _AppeaserComponentBas);

  var _super = _createSuper(SkeletonLoading);

  /**
   * Constructor, will run before page loaded
   */
  function SkeletonLoading() {
    var _this2;

    _classCallCheck(this, SkeletonLoading);

    _this2 = _super.apply(this, arguments);

    _Logger.default.INFO(_this2.constructor.name, ':: Constructor');

    _this2._declareConstants();

    _this2._jQueryScopeBinding();

    _this2.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this2._onDOMReady); // always needed


    return _this2;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(SkeletonLoading, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      this._detachMQHandlers();

      _get(_getPrototypeOf(SkeletonLoading.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.ATTRIBUTE_DATA_SRC = 'data-src';
      this.SELECTOR_IMG_DATA_SRC = 'img[data-src]';
      this.SELECTOR_PLACEHOLDER = '.placeholder-wrapper';
      this.SELECTOR_NAVIGATION = '.o-navigation';
      this.SELECTOR_SKELETON_AREA = '.o-page-content, .m-product-zoom, .m-cart-addition .cart-image-wrapper, .m-cart-addition .basket-wrapper, .o-quick-buy, .o-lightbox, .example';
      this.SELECTOR_RESOLVE_SCRIPT = 'script#lp-resolve';
      this.CLASS_PLACEHOLDER = 'placeholder-wrapper';
      this.CLASS_PAGE_CONTENT = 'o-page-content';
      this.CLASS_HOVER_IMAGE = 'hover-image';
      this.ID_RESOLVE_SCRIPT = 'lp-resolve';
      this.animation_duration_padding = 400;
      this.animation_duration_opacity = 1000;
      this.oberver_delay = 1000;
      this.dom_ready_counter = 0;
      this.resolve = undefined;
      this.lpData = {
        qualityMob: this.$el.data('lpQualityMobile') ? this.$el.data('lpQualityMobile') : 60,
        qualityTab: this.$el.data('lpQualityTablet') ? this.$el.data('lpQualityTablet') : 70,
        qualityDesk: this.$el.data('lpQualityDesk') ? this.$el.data('lpQualityDesk') : 80,
        densityMob: this.$el.data('lpDensityMobile') ? this.$el.data('lpDensityMobile') : 1,
        densityTab: this.$el.data('lpDensityTablet') ? this.$el.data('lpDensityTablet') : 1,
        densityDesk: this.$el.data('lpDensityDesk') ? this.$el.data('lpDensityDesk') : 1,
        format: this.$el.data('lpFormat') ? this.$el.data('lpFormat').split(',') : '',
        cacheThreshold: this.$el.data('lpCacheThreshold') ? this.$el.data('lpCacheThreshold') : 50,
        maxRatio: this.$el.data('lpMaxDensity') ? this.$el.data('lpMaxDensity') : 1,
        imageFit: this.$el.data('lpImageFit') ? this.$el.data('lpImageFit') : 'containerWidth',
        url: this.$el.data('lpUrl'),
        uri: this.$el.data('lpUri')
      };
      this.resolvePlaceholderUrl = 'blank=width[2],height[3],color[none]&sink=format[gif]';
      this.resolvePlaceholderUrlLen = this.resolvePlaceholderUrl.length;
      this.resolveScriptUrl = '//app001prod.liquifire.com/zap/dhtml/com.liquidpixels.Resolve.jsr';
      this.resolveScriptTag = undefined;
      this.$content = $('.content');
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$pageContent = $(this.SELECTOR_SKELETON_AREA);
      this.$allSkeletonItems = this.$pageContent.find(this.SELECTOR_PLACEHOLDER + ' img');
      this.$nativeSkeletonItems = this.$pageContent.find(this.SELECTOR_PLACEHOLDER + ' ' + this.SELECTOR_IMG_DATA_SRC);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      this.$window = $(window);

      this._attachSubscribers();

      this._attachMQHandlers();

      this._trigger();
    }
  }, {
    key: "_attachMQHandlers",
    value: function _attachMQHandlers() {
      this.MQDesktopHandler = {
        deferSetup: true
      };
      enquire.register(_Enums.default.MQ.IS_DESKTOP, this.MQDesktopHandler);
    }
  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {
      enquire.unregister(_Enums.default.MQ.IS_DESKTOP, this.MQDesktopHandler);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_NAVIGATION_MENU_OPEN, this._onNavigationOpen);
      this.subscribe(_Enums.default.ACTION.TRIGGER_SKELETON_LOAD, this._trigger);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_NAVIGATION_MENU_OPEN, this._onNavigationOpen);
      this.unsubscribe(_Enums.default.ACTION.TRIGGER_SKELETON_LOAD, this._trigger);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {
      this._startObserver();
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$window.on('scroll resize', this._onWindowScrollResize);
      this.$content.on('scroll', this._onWindowScrollResize);
      this.$allSkeletonItems.on('load', this._onImgLoaded);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$window.off('scroll resize', this._onWindowScrollResize);
      this.$content.off('scroll', this._onWindowScrollResize);
      if (this.$allSkeletonItems) this.$allSkeletonItems.off('load', this._onImgLoaded);
      if (this.$navSkeletonItems) this.$navSkeletonItems.off('load', this._onImgLoaded);
      if (this.observer) this.observer.disconnect();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onImgLoaded = this._onImgLoaded.bind(this);
      this._trigger = this._trigger.bind(this);
      this._onNavigationOpen = this._onNavigationOpen.bind(this);
      this._startObserver = this._startObserver.bind(this);
      this._resolveLiquidPixels = this._resolveLiquidPixels.bind(this);
      this._switchSrc = this._switchSrc.bind(this);
      this._onWindowScrollResize = this._onWindowScrollResize.bind(this);
      this._loadResolveScript = this._loadResolveScript.bind(this);
      this._setLpQuality = this._setLpQuality.bind(this);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Handles window scroll / resize event
     * @private
     */

  }, {
    key: "_onWindowScrollResize",
    value: function _onWindowScrollResize() {
      this._switchSrc(this.$nativeSkeletonItems);
    }
    /**
     * Triggers skeleton loading by calling Liquid Pixels Resolve API and the native _switchSrc function
     * depending on HTML setup
     * @private
     */

  }, {
    key: "_trigger",
    value: function _trigger() {
      /// re-initialize
      this._cacheDOMElements(); // detach load listeners if any before attaching new


      this.$allSkeletonItems.off('load');

      this._attachDOMListeners(); // Load Liquid Pixels Resolve script and trigger Liquid Pixels Resolve execution


      if (this.lpData.url && this.lpData.uri) {
        this._loadResolveScript();

        this._resolveLiquidPixels();
      } // Trigger native skeleton load


      if (this.$nativeSkeletonItems.length) {
        this._switchSrc(this.$nativeSkeletonItems);
      }
    }
    /**
     * Switches data-src to src for images that are 1) not loaded yet 2) within client bounding rectangle
     * @private
     */

  }, {
    key: "_switchSrc",
    value: function _switchSrc(skeletonItems) {
      var _this3 = this;

      skeletonItems.closest(this.SELECTOR_PLACEHOLDER).filter(this._isInViewport).find(this.SELECTOR_IMG_DATA_SRC).each(function (index, img) {
        img.src = $(img).attr(_this3.ATTRIBUTE_DATA_SRC);
        $(img).removeAttr(_this3.ATTRIBUTE_DATA_SRC);
      });
    }
    /**
     * Removes is-hidden class to show the image after loaded
     * And animates placeholder height (by padding) if image and placeholder sizes does not match
     * Accepts also data-skeleton-background working similar way as data-background for a-pictures (tweaked for skeleton loading)
     * @param e
     * @private
     */

  }, {
    key: "_onImgLoaded",
    value: function _onImgLoaded(e) {
      var _this4 = this;

      //select target as image if called from  DOM listener
      var img = e.target ? e.target : e,
          imgUrl = img.currentSrc || img.src,
          decodedImgUrl = imgUrl.replace(/(^\w+:|^)\/\//, ''),
          backgroundHolder = $(img).parent().data('skeleton-background'),
          placeholder = $(img).closest(this.SELECTOR_PLACEHOLDER),
          isHoverImg = $(img).hasClass(this.CLASS_HOVER_IMAGE); // Exit if current URL load event is called on is LP Resolve placeholder

      var imgUrlLen = decodedImgUrl.length;

      if (decodedImgUrl.substring(imgUrlLen - this.resolvePlaceholderUrlLen, imgUrlLen) === this.resolvePlaceholderUrl) {
        return;
      } // if has background holder, set image to it's holder and animate with opacity


      if (backgroundHolder) {
        var imageUrl = $(img).attr("src");
        $(img).closest('.' + backgroundHolder).css("opacity", 0).css("background-image", "url(" + imageUrl + ")").animate({
          "opacity": 1
        }, this.animation_duration_opacity, function () {
          $(img).css('opacity', ''); //clean up after animation done
        });
        placeholder.removeClass(this.CLASS_PLACEHOLDER); //otherwise animate bottom padding before removing placeholder class
      } else if (!isHoverImg) {
        placeholder.animate({
          'padding-bottom': $(img).height() + 'px'
        }, this.animation_duration_padding, function () {
          placeholder.removeClass(_this4.CLASS_PLACEHOLDER);
          placeholder.css('padding-bottom', '');
        });
      }

      if ($(img).hasClass(_Enums.default.CLASS.IS_HIDDEN_STATE)) {
        $(img).removeClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
      }

      $(img).off('load', this._onImgLoaded);
    }
    /**
     * Checks if object is visible on screen for above/below fold splitting
     * @param index
     * @param object
     * @returns {boolean} True of object is located within client bounding rectangle
     * @private
     */

  }, {
    key: "_isInViewport",
    value: function _isInViewport(index, object) {
      var rect = object.getBoundingClientRect();
      return rect.bottom >= 0 && rect.right >= 0 && rect.top <= (window.innerHeight || document.documentElement.clientHeight) && rect.left <= (window.innerWidth || document.documentElement.clientWidth);
    }
    /**
     * Triggers skeleton loading for navigation images
     * @private
     */

  }, {
    key: "_onNavigationOpen",
    value: function _onNavigationOpen() {
      if (Modernizr.mq(_Enums.default.MQ.IS_DESKTOP)) {
        this.$navContent = $(this.SELECTOR_NAVIGATION);
        this.$navSkeletonItems = this.$navContent.find(this.SELECTOR_IMG_DATA_SRC);

        if (this.$navSkeletonItems) {
          this._switchSrc(this.$navSkeletonItems);

          this.$navSkeletonItems.on('load', this._onImgLoaded);
        }
      }
    }
    /**
     * Mutation observer to trigger skeleton loading on HTML modifications
     * @private
     */

  }, {
    key: "_startObserver",
    value: function _startObserver() {
      MutationObserver = window.MutationObserver || window.WebKitMutationObserver;

      var _this = this;

      this.observer = new MutationObserver(function (mutations, observer) {
        // fired when a mutation occurs
        _this._trigger();
      }); // define what element should be observed by the observer
      // and what types of mutations trigger the callback

      var skeletonAreas = document.querySelectorAll(this.SELECTOR_SKELETON_AREA),
          i;

      for (i = 0; i < skeletonAreas.length; ++i) {
        this.observer.observe(skeletonAreas[i], {
          subtree: true,
          childList: true
        });
      }
    }
    /**
     * Calls LiquidPixels Resolve API (also called LiquiFire)
     * @private
     */

  }, {
    key: "_resolveLiquidPixels",
    value: function _resolveLiquidPixels() {
      var data = this.lpData;
      var setLpQuality = this._setLpQuality; // test if LiquidPixel Resolve library is loaded at first

      if (typeof com !== 'undefined') {
        this.resolve = new com.liquidpixels.Resolve({
          server: data.url,
          uri: data.uri,
          imageFit: data.imageFit,
          base: '',
          lazyLoad: true,
          output: function output(browser, image) {
            var quality, density;

            if (Modernizr.mq(_Enums.default.MQ.IS_MOBILE)) {
              quality = setLpQuality('Mobile', data.qualityMob);
              density = data.densityMob;
            } else if (Modernizr.mq(_Enums.default.MQ.IS_TABLET)) {
              quality = setLpQuality('Tablet', data.qualityTab);
              density = data.densityTab;
            } else {
              // if desktop or unrecognized
              quality = setLpQuality('Desktop', data.qualityDesk);
              density = data.densityDesk;
            } // Detect native pixel ratio and use that if less than requested from data.density{Mob|Tab|Desk}


            if (browser.window.devicePixelRatio < density) {
              density = browser.window.devicePixelRatio;
            }

            return {
              format: data.format,
              quality: quality,
              pixelRatio: density
            };
          },
          advancedOptions: {
            maxPixelRatio: data.maxRatio,
            cacheThreshold: data.cacheThreshold
          },
          handleEvent: function handleEvent(type, data) {
            _Logger.default.INFO('LiquidFire Resolve', type, data ? '\n\tElement: ' + data.element.outerHTML + '\n\tMessage: ' + data.message : '');
          }
        });
      }
    }
    /**
     * _resolveLiquidPixels util to extract all quality settings for a device from this.$el data
     * returns an object of default value + all format quality values found keeping format as a key
     * @param device
     * @param defaultValue
     * @private
     */

  }, {
    key: "_setLpQuality",
    value: function _setLpQuality(device, defaultValue) {
      var data = this.$el.data();
      var qualityObject = {
        'default': defaultValue
      };
      this.lpData.format.forEach(function (format) {
        var formatDeviceQuality = data['lp' + format.charAt(0).toUpperCase() + format.slice(1) + 'Quality' + device];

        if (formatDeviceQuality) {
          qualityObject[format] = formatDeviceQuality;
        }
      });
      return qualityObject;
    }
    /**
     * Applies script tag with LiquidPixels Resolve JS file source to bottom of body tag
     * Calls LiquidPixel Resolve after script is loaded
     * @private
     */

  }, {
    key: "_loadResolveScript",
    value: function _loadResolveScript() {
      var _resolveLiquidPixels = this._resolveLiquidPixels;

      if ($('body').find(this.SELECTOR_RESOLVE_SCRIPT).length < 1) {
        var el = document.createElement('script');
        el.src = this.resolveScriptUrl;
        el.id = this.ID_RESOLVE_SCRIPT;

        el.onload = function () {
          _resolveLiquidPixels();

          el.onload = null;
        };

        document.body.appendChild(el);
      }
    }
  }]);

  return SkeletonLoading;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = SkeletonLoading;

},{"./../../themes/p11/enums.js":66,"./appeaser-component-base.js":47,"./logger.js":51}],57:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./logger.js'));

var _Enums = _interopRequireDefault(require('./../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var StickyComponent = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(StickyComponent, _AppeaserComponentBas);

  var _super = _createSuper(StickyComponent);

  /**
   * Constructor, will run before page loaded
   */
  function StickyComponent() {
    var _this;

    _classCallCheck(this, StickyComponent);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this.bannerHeight = 0;

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(StickyComponent, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachMQHandlers();

      this._detachSubscribers();

      _get(_getPrototypeOf(StickyComponent.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_PAGE_CONTENT = '.o-page-content';
      this.SELECTOR_STICKY_TO = '';
    }
    /**
     * Caching DOM elements for performance
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      var $stickyElement = $(this.$el.data("stickyElement"));
      this.$stickyTo = $(this.SELECTOR_STICKY_TO);
      this.$stickyElement = $stickyElement.length ? $stickyElement : this.$el;
      this.$window = $(window);
      this.$body = $('body');
      this.$pageContent = $(this.SELECTOR_PAGE_CONTENT);
      this.stickyThreshold = this.$stickyElement.offset().top;
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this.originPosition = parseInt(this.$stickyElement.offset().top) - this.bannerHeight;

      this._updateThreshold();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onScroll = this._onScroll.bind(this);
      this._onResize = this._onResize.bind(this);
      this._onPageContentMarginChange = this._onPageContentMarginChange.bind(this);
      this._enableStickyScroll = this._enableStickyScroll.bind(this);
      this._disableStickyScroll = this._disableStickyScroll.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_PAGE_CONTENT_MARGIN_CHANGE, this._onPageContentMarginChange);
      this.subscribe(_Enums.default.ACTION.ENABLE_STICKY_SCROLL, this._enableStickyScroll);
      this.subscribe(_Enums.default.ACTION.DISABLE_STICKY_SCROLL, this._disableStickyScroll);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_PAGE_CONTENT_MARGIN_CHANGE, this._onPageContentMarginChange);
      this.unsubscribe(_Enums.default.ACTION.ENABLE_STICKY_SCROLL, this._enableStickyScroll);
      this.unsubscribe(_Enums.default.ACTION.DISABLE_STICKY_SCROLL, this._disableStickyScroll);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$window.on('scroll', this._onScroll);
      this.$window.on('resize', this._onResize);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$window.off('scroll', this._onScroll);
      this.$window.off('resize', this._onResize);
    }
    /**
     * Deattach AQ handlers in the DOM
     * @private
     */

  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {}
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Enables EventListeners
     * @private
     */

  }, {
    key: "_enableStickyScroll",
    value: function _enableStickyScroll() {
      this._attachDOMListeners();
    }
    /**
     * Disables EventListeners
     * @private
     */

  }, {
    key: "_disableStickyScroll",
    value: function _disableStickyScroll() {
      this._detachDOMListeners();
    }
  }, {
    key: "_onResize",
    value: function _onResize() {
      if (this.$el.hasClass(_Enums.default.CLASS.IS_STICKY) && !this.ignorePageMargin) {
        this.publish(_Enums.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, {
          margin: this.$el.outerHeight(),
          element: this.$el
        });
      }
    }
  }, {
    key: "_onPageContentMarginChange",
    value: function _onPageContentMarginChange($element) {
      if (!$element.is(this.$el)) {
        this._updateThreshold();
      }
    }
    /**
     * Updates the sticky threshold
     * @private
     */

  }, {
    key: "_updateThreshold",
    value: function _updateThreshold() {
      if (!this.$pageContent) return;
      this.stickyThreshold = this.originPosition - this.$stickyTo.outerHeight();
    }
    /**
     * Scroll event handler
     * @private
     */

  }, {
    key: "_onScroll",
    value: function _onScroll() {
      if (!this.$el.hasClass(_Enums.default.CLASS.IS_STICKY) && this.$stickyTo.hasClass(_Enums.default.CLASS.IS_STICKY) && this.$stickyTo.offset().top + this.$stickyTo.outerHeight() > this.$stickyElement.offset().top) {
        this.publish(_Enums.default.EVENT.ON_BEFORE_STICKY_COMPONENT_STICKY);

        if (!this.ignorePageMargin) {
          this.publish(_Enums.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, {
            margin: this.$el.outerHeight(true),
            element: this.$el
          });
        }

        this.$el.css('margin-top', this.bannerHeight);
        this.$el.addClass(_Enums.default.CLASS.IS_STICKY);

        this._updateThreshold();
      } else if (this.$el.hasClass(_Enums.default.CLASS.IS_STICKY) && this.$window.scrollTop() < this.stickyThreshold) {
        this.$el.removeClass(_Enums.default.CLASS.IS_STICKY);
        this.publish(_Enums.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, {
          margin: 0,
          element: this.$el
        });
        this.$el.css('margin-top', '');

        this._updateThreshold();
      }
    }
  }]);

  return StickyComponent;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = StickyComponent;

},{"./../../themes/p11/enums.js":66,"./appeaser-component-base.js":47,"./logger.js":51}],58:[function(require,module,exports){
"use strict";

var _Enums = _interopRequireDefault(require('./../../themes/p11/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var Utils = {
  Form: {
    /**
     * Get data from form
     * @param $form - {JQuery Object}
     * @returns {{}}
     */
    getData: function getData($form) {
      var formDataList = $form.serializeArray(),
          formDataObj = {};

      for (var i = 0, ilen = formDataList.length; i < ilen; i++) {
        formDataObj[formDataList[i].name] = $.trim(formDataList[i].value);
      }

      return formDataObj;
    },

    /**
     * Setting for displaying global error messages.
     */
    displayGlobalmessages: true,

    /**
     * Validates any given form based on HTML5 validation rules
     * @param form - {JQuery Object} the form to be validated
     * @param callback {Function} a callback function to run after validation is done
     */
    validate: function validate(form, callback) {
      var isValid = true,
          $error = form.find('.m-error'),
          $errorLabel = $error.find('.has-error'),
          SELECTOR_LIGHTBOX = '.o-lightbox';

      if (!form[0].checkValidity()) {
        var validationErrorMessages = [],
            $inputs = form.find("input");
        $inputs.each(function (index, input) {
          if ($(input).is(':checkbox, :radio', ':checked')) {
            $(input).parent().removeClass(_Enums.default.CLASS.HAS_ERROR);
          }

          if (!input.checkValidity()) {
            var $input = $(input);

            if ($input.is(':checkbox, :radio')) {
              $input.parent().addClass(_Enums.default.CLASS.HAS_ERROR);
            }

            if (input.validity.valueMissing && $input.data('validation-required-text').length != 0) {
              validationErrorMessages.push($input.data('validation-required-text'));
            } // MATCH ANOTHER FIELD
            else if ($input.parent().data("validation-match-field") && $input.val() != $("#" + $input.parent().data("validation-match-field") + " input").val()) {
                validationErrorMessages.push($input.data('validation-match-field-text'));
              } // MATCH A REGEX PATTERN OR TYPE
              else if (input.validity.patternMismatch || input.validity.typeMismatch) {
                  validationErrorMessages.push($input.data('validation-pattern-text'));
                } // MAX LENGTH
                else if (input.validity.tooLong) {
                    validationErrorMessages.push($input.data('validation-maxlen-text'));
                  }
          }
        });
        $error.addClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
        $errorLabel.html("");

        if (validationErrorMessages.length > 0) {
          $errorLabel.html(validationErrorMessages.join("<br>"));

          if (Utils.Form.displayGlobalmessages) {
            $error.removeClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
          } //Scroll to error message, unless the form is within a lightbox.


          if (!form.closest(SELECTOR_LIGHTBOX).length) {
            appeaser.publish(_Enums.default.ACTION.SCROLL_TO_FORM_ERROR_MSG, form);
          }
        }

        isValid = false;
      } // Check to set isValid based on dropdown filter validation status


      if ($(form[0]).find('.m-dropdown-filter').length) {
        var dropdownFilter = $(form[0]).find('.m-dropdown-filter');

        if (dropdownFilter.find('.a-input.filter').val() != dropdownFilter.find('.a-option.is-selected').html()) {
          dropdownFilter.addClass(_Enums.default.CLASS.HAS_ERROR);
          isValid = false;
        } else {
          dropdownFilter.removeClass(_Enums.default.CLASS.HAS_ERROR);
        }

        if (dropdownFilter.hasClass('has-error')) {
          isValid = false;
        }
      } //Check to set isValid based on password help text status


      if ($(form[0]).find('.help-text').length) {
        var $helpText = $(form[0]).find('.help-text'),
            pwdErrorMsg = $helpText.siblings('.a-input').data('password-error-text');

        if ($helpText.find('.passed').length != 4 && $helpText.siblings('.a-input').val() != '') {
          $helpText.find(":not(.passed)").addClass('has-error');
          $helpText.parents('.m-input').addClass('has-error');
          isValid = false;
        }
      }

      callback(isValid);
    },

    /**
     * Validates any given inputs based on HTML5 validation rules
     * @param inputs - array of selectors of the inputs to be validated. Ex: ['.last-name input', '#policy-checkbox', 'input.first-name']
     * @param callback {Function} a callback function to run after validation is done
     */
    validateInputs: function validateInputs(inputs, callback) {
      var isValid = true,
          $error = $(inputs[0]).closest('.main-area').find('.m-error'),
          $errorLabel = $error.find('.js-a-label'),
          validationErrorMessages = [];
      $(inputs).each(function (index, input) {
        var $input = $(input);

        if (!$input.length) {
          // Skip iteration if a wrong selector has been passed or an element that doesn't exist
          return true;
        }

        if ($input.is(':checkbox, :radio', ':checked')) {
          $input.parent().removeClass(_Enums.default.CLASS.HAS_ERROR);
        }

        if (!$input[0].checkValidity()) {
          isValid = false;

          if ($input.is(':checkbox, :radio')) {
            $input.parent().addClass(_Enums.default.CLASS.HAS_ERROR);
          }

          if ($input[0].validity.valueMissing && $input.data('validation-required-text').length !== 0) {
            validationErrorMessages.push($input.data('validation-required-text'));
          } // MATCH ANOTHER FIELD
          else if ($input.parent().data("validation-match-field") && $input.val() !== $("#" + $input.parent().data("validation-match-field") + " input").val()) {
              validationErrorMessages.push($input.data('validation-match-field-text'));
            } // MATCH A REGEX PATTERN OR TYPE
            else if ($input[0].validity.patternMismatch || $input[0].validity.typeMismatch) {
                validationErrorMessages.push($input.data('validation-pattern-text'));
              } // MAX LENGTH
              else if ($input[0].validity.tooLong) {
                  validationErrorMessages.push($input.data('validation-maxlen-text'));
                }
        }
      });
      $error.addClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
      $errorLabel.html("");

      if (validationErrorMessages.length > 0) {
        $error.removeClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
        $errorLabel.html(validationErrorMessages.join("<br>"));
      }

      callback(isValid);
    }
  },
  Slider: {
    reInitialize: function reInitialize($slider, clearContent) {
      if ($slider.hasClass('slick-initialized')) {
        var slickInstance = $slider.slick("getSlick");

        if (clearContent) {
          while (slickInstance.slideCount) {
            slickInstance.removeSlide(0);
          }
        }

        slickInstance.unslick();
        slickInstance.init();
      }
    }
  },
  Stores: {
    stringToArrayHandler: function stringToArrayHandler(data) {
      if (typeof data === 'string' || _typeof(data) === 'object' && !$.isArray(data)) {
        return [data];
      }

      return data;
    },
    getMonth: function getMonth(number) {
      var monthNames = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];

      if (number <= 12) {
        return monthNames[number - 1];
      } else {
        return number;
      }
    },
    popupsDisabled: function popupsDisabled() {
      return location.hash.indexOf('#disablepopups') > -1;
    },
    createStoreInformationDataObject: function createStoreInformationDataObject(store) {
      var obj = {
        "title": store.name,
        "phone": store.phone,
        "city": store.city,
        "displayOpeningDate": store.openingDate,
        "latitude": parseFloat(store.latitude),
        "longitude": parseFloat(store.longitude)
      };

      if (store.openingHours) {
        var firstObject,
            i = 0,
            openingHours = [];
        $.each(store.openingHours, function (index, object) {
          if (!firstObject) {
            openingHours[i] = object.name + " " + object.opens + " - " + object.closes;
            firstObject = object;
          } else {
            //As long as this object has the same opening hours as the first object we keep updating
            //the same row.
            if (firstObject.opens == object.opens && firstObject.closes == object.closes) {
              openingHours[i] = firstObject.name + "-" + object.name + " " + object.opens + " - " + object.closes;
            } //If the opening hours do not match with the first object we create a new row for this
            //day and set a new first object.
            else {
                i++;
                openingHours[i] = object.name + " " + object.opens + " - " + object.closes;
                firstObject = object;
              }
          }
        });
        $.extend(obj, {
          "openingHours": openingHours
        });
      }

      if (store.address) {
        if (store.address.streetName1) {
          $.extend(obj, {
            "streetName1": store.address.streetName1
          });
        }

        if (store.address.streetName2) {
          $.extend(obj, {
            "streetName2": store.address.streetName2
          });
        }

        if (store.address.postCode) {
          $.extend(obj, {
            "postCode": store.address.postCode
          });
        }

        if (store.address.postalAddress) {
          $.extend(obj, {
            "postalAddress": store.address.postalAddress
          });
        }

        if (store.address.state) {
          $.extend(obj, {
            "state": store.address.state
          });
        }
      }

      if (store.openingHourExceptions) {
        var openingHourExceptions = [],
            isClosed = false;
        $.each(store.openingHourExceptions, function (index, object) {
          var openingHours = '';

          if (object.closedAllDay) {
            openingHours = '';
            isClosed = true;
          } else {
            openingHours = object.opens + " - " + object.closes;
            isClosed = false;
          }

          openingHourExceptions[index] = {
            'time': object.date + " " + openingHours,
            'isClosed': isClosed
          };
        });
        $.extend(obj, {
          "openingHourExceptions": openingHourExceptions
        });
      }

      if (store.campaignConcepts) {
        $.extend(obj, {
          "campaignConcepts": Utils.Stores.stringToArrayHandler(store.campaignConcepts)
        });
      }

      if (store.departmentsWithConcepts) {
        $.extend(obj, {
          "departmentsWithConcepts": Utils.Stores.stringToArrayHandler(store.departmentsWithConcepts)
        });
      }

      return obj;
    }
  },
  Accessibility: {
    hide: function hide($elements, $cta) {
      if ($cta) {
        $cta.attr('aria-expanded', 'false');
      }

      $elements.attr('aria-hidden', 'true');
    },
    show: function show($elements, $cta) {
      if ($cta) {
        $cta.attr('aria-expanded', 'true');
      }

      $elements.removeAttr('aria-hidden');
    },
    clear: function clear($elements, $cta) {
      if ($cta) {
        $cta.removeAttr('aria-expanded');
      }

      $elements.removeAttr('aria-hidden aria-expanded tabindex');
    },
    select: function select($elements) {
      $elements.attr('aria-selected', 'true');
    },
    unselect: function unselect($elements) {
      $elements.removeAttr('aria-selected');
    },
    preventFocus: function preventFocus($elements) {
      $elements.attr('tabindex', '-1');
    },
    allowFocus: function allowFocus($elements) {
      $elements.attr('tabindex', '0');
    },
    isUsingKeyboard: function isUsingKeyboard() {
      if ($('body').hasClass('is-using-keyboard')) {
        return true;
      } else return false;
    }
  },
  Focus: {
    nextItem: function nextItem(tgt, items, stop) {
      var index = $.inArray(tgt, items);
      var numItems = items.length;
      var firstItem = items[0];
      var nextItem;

      if (numItems > index + 1) {
        nextItem = items[index + 1];
      } else {
        nextItem = stop ? tgt : firstItem;
      }

      nextItem.focus();
    },
    prevItem: function prevItem(tgt, items, stop) {
      var index = $.inArray(tgt, items);
      var numItems = items.length;
      var prevItem;

      if (index - 1 >= 0) {
        prevItem = items[index - 1];
      } else {
        prevItem = stop ? tgt : items[numItems - 1];
      }

      prevItem.focus();
    }
  },
  GetCountry: {
    getCountryNameFromCode: function getCountryNameFromCode(countryID) {
      var isoCountries = {
        DK: {
          name: "Denmark"
        },
        NL: {
          name: "Netherlands"
        },
        GB: {
          name: "United Kingdom"
        },
        DE: {
          name: "Germany"
        },
        BE: {
          name: "Belgium"
        },
        AT: {
          name: "Austria"
        },
        FI: {
          name: "Finland"
        },
        FR: {
          name: "France"
        },
        ES: {
          name: "Spain"
        },
        PL: {
          name: "Poland"
        },
        CZ: {
          name: "Czech Republic"
        },
        PT: {
          name: "Portugal"
        },
        IT: {
          name: "Italy"
        },
        SI: {
          name: "Slovenia"
        },
        IE: {
          name: "Ireland"
        },
        HU: {
          name: "Hungary"
        },
        SK: {
          name: "Slovakia"
        },
        SE: {
          name: "Sweden"
        },
        NO: {
          name: "Norway"
        },
        WW: {
          name: "International Shipping"
        },
        US: {
          name: "United States"
        },
        CY: {
          name: "Cyprus"
        },
        EE: {
          name: "Estonia"
        },
        GR: {
          name: "Greece"
        },
        LV: {
          name: "Latvia"
        },
        LT: {
          name: "Lithuania"
        },
        LU: {
          name: "Luxembourg"
        },
        RO: {
          name: "Romania"
        },
        BG: {
          name: "Bulgaria"
        },
        HR: {
          name: "Croatia"
        },
        CH: {
          name: "Switzerland"
        }
      };
      return isoCountries[countryID].name;
    }
  },
  Newsletter: {
    isNewsletter: function isNewsletter(template) {
      return template === 'newsletter-signup' || template === 'newsletter-signup-ntn' || template === 'newsletter-popup' || template === 'newsletter-popup-ntn';
    }
  },
  ConstructUrl: {
    localeUrl: function localeUrl(path) {
      var regex = new RegExp(/[a-z]*_[A-Z]*/i);
      var locale = '';

      if (window.location.pathname.match(regex)) {
        locale = '/' + window.location.pathname.match(regex);
      } else if (window.location.pathname.includes('/en/')) {
        locale = '/en';
      } else if (window.location.pathname.includes('/de/')) {
        locale = '/de';
      }

      var baseUrl = window.location.origin;
      return baseUrl + locale + path;
    }
  }
};
module.exports = Utils;

},{"./../../themes/p11/enums.js":66}],59:[function(require,module,exports){
"use strict";

var Versions = {
  "version": "1.5.2-hotfix.8"
};
module.exports = Versions;

},{}],60:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var ANIMATION, ANIMATION_END, TRANSITION_END, name;
var el = document.createElement('div'),
    animationNames = {
  'WebkitAnimation': 'webkitAnimationEnd',
  'MozAnimation': 'animationend',
  'OAnimation': 'oAnimationEnd oanimationend',
  'animation': 'animationend'
},
    transitionNames = {
  'WebkitAnimation': 'webkitTransitionEnd',
  'MozAnimation': 'transitionend',
  'OAnimation': 'oTransitionEnd otransitionend',
  'animation': 'transitionend'
};

for (name in animationNames) {
  if (el.style[name] !== undefined) {
    ANIMATION = name;
    ANIMATION_END = animationNames[name];
    TRANSITION_END = transitionNames[name];
  }
}
/**
 * Assigns an animation class to the selected elements, removing it when
 * the animation finishes.
 * @param  {jQuery}   el     The jQuery element.
 * @param  {string}   name   Class name to add.
 * @param  {Function} cb     Callback function when animation finishes.
 * @param  {Boolean}  nowait Call the callback without waiting.
 * @param  {String}   child  Child element that runs the animation or transition.
 * @param  {Boolean}  revert to previous state
 */


var _default = function _default(el, name, cb, nowait, child, revert) {
  var elem = child ? el.find(child) : el;
  elem.one(ANIMATION_END + ' ' + TRANSITION_END, function (e) {
    if (revert) el.removeClass(name);

    if (cb && nowait) {
      cb.apply(el[0]);
    } else if (cb) {
      setTimeout(function () {
        cb.apply(el[0]);
      }, 0);
    }
  });
  el.addClass(name);
};

exports.default = _default;

},{}],61:[function(require,module,exports){
/**
 * ComponentLoader Class
 *
 * Instantiates JavaScript Classes when their name is found in the DOM using attribute data-component=""
 *
 */
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

var ComponentLoader = function () {
  /**
   * Constructor for the ComponentLoader
   * @class
   * @public
   * @param {Object} components - Optional collection of available components: {componentName: classDefinition}
   * @param {Node} context - Optional DOM node to search for components. Defaults to document.
   */
  function ComponentLoader() {
    var components = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
    var context = arguments.length <= 1 || arguments[1] === undefined ? document : arguments[1];

    _classCallCheck(this, ComponentLoader);

    this.contextEl = context;
    this.initializedComponents = {};
    this.numberOfInitializedComponents = 0;
    this.components = {};
    this.topics = {};
    this.register(components);
  }
  /**
   * Add component(s) to collection of available components
   * @public
   * @param {Object} components - Collection of components: {componentName: classDefinition}
   */


  _createClass(ComponentLoader, [{
    key: "register",
    value: function register() {
      var _this = this;

      var components = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
      Object.keys(components).forEach(function (componentName) {
        _this.components[componentName] = components[componentName];
      });
    }
    /**
     * Remove component from collection of available components
     * @public
     * @param {String} componentName - Name of the component to remove
     */

  }, {
    key: "unregister",
    value: function unregister(componentName) {
      delete this.components[componentName];
    }
    /**
     * Mediator functionality.
     * Stores the topic and callback given by the component.
     * for further reference.
     * @param  {String} topic      Topic string
     * @param  {Function} callback Callback function that would be triggered.
     * @param  {Function} context  Class instance which owns the callback
     */

  }, {
    key: "subscribe",
    value: function subscribe(topic, callback, context) {
      // Is this a new topic?
      if (!this.topics.hasOwnProperty(topic)) {
        this.topics[topic] = [];
      } // Store the subscriber callback


      this.topics[topic].push({
        context: context,
        callback: callback
      });
    }
    /**
     * Mediator functionality.
     * Removes the stored topic and callback given by the component.
     * @param  {String}   topic    Topic string
     * @param  {Function} callback Callback function that would be triggered.
     * @param  {Function} context  Class instance which owns the callback
     * @return {Boolean}           True on success, False otherwise.
     */

  }, {
    key: "unsubscribe",
    value: function unsubscribe(topic, callback, context) {
      // Do we have this topic?
      if (!this.topics.hasOwnProperty(topic)) {
        return false;
      } // Find out where this is and remove it


      for (var i = 0, len = this.topics[topic].length; i < len; i++) {
        if (this.topics[topic][i].callback === callback) {
          if (!context || this.topics[topic][i].context === context) {
            this.topics[topic].splice(i, 1);
            return true;
          }
        }
      }

      return false;
    }
    /**
     * [publish description]
     * @param  {[type]} topic [description]
     * @return {[type]}       [description]
     */

  }, {
    key: "publish",
    value: function publish(topic) {
      // Check if we have subcribers to this topic
      if (!this.topics.hasOwnProperty(topic)) {
        return false;
      } // don't slice on arguments because it prevents optimizations in JavaScript engines (V8 for example)
      // https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/arguments
      // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments


      var args = new Array(arguments.length - 1);

      for (var i = 0; i < args.length; ++i) {
        args[i] = arguments[i + 1]; // remove first argument
      } // Loop through them and fire the callbacks


      for (var _i = 0, len = this.topics[topic].length; _i < len; _i++) {
        var subscription = this.topics[topic][_i]; // Call it's callback

        if (subscription && subscription.callback) {
          subscription.callback.apply(subscription.context, args);
        }
      }

      return true;
    }
    /**
     * Scan the DOM, initialize new components and destroy removed components.
     * @public
     * @param {Object} data - Optional data object to pass to the component constructor
     */

  }, {
    key: "scan",
    value: function scan() {
      var _this2 = this;

      var data = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
      var activeComponents = {},
          elements = this.contextEl.querySelectorAll("[data-component]");
      [].forEach.call(elements, function (el) {
        _this2._scanElement(el, activeComponents, data);
      });
      if (this.numberOfInitializedComponents > 0) this.cleanUp_(activeComponents);
    }
    /**
     * Find all components registered on a specific DOM element and initialize them if new
     * @private
     * @param {Element} el - DOM element to scan for components
     * @param {Object} activeComponents - All componentIds currently found in the DOM
     * @param {Object} data - Optional data object to pass to the component constructor
     */

  }, {
    key: "_scanElement",
    value: function _scanElement(el, activeComponents, data) {
      var _this3 = this; // check of component(s) for this DOM element already have been initialized


      var elementId = el.getAttribute("data-component-id");

      if (!elementId) {
        // give unique id so we can track it on next scan
        elementId = this._generateUUID();
        el.setAttribute('data-component-id', elementId);
      } // find the name of the component instance


      var componentList = el.getAttribute("data-component").match(/\S+/g);
      componentList.forEach(function (componentName) {
        var componentId = componentName + "-" + elementId;
        activeComponents[componentId] = true; // check if component not initialized before

        if (!_this3.initializedComponents[componentId]) {
          _this3._initializeComponent(componentName, componentId, el, data);
        }
      });
    }
    /**
     * Call constructor of component and add instance to the collection of initialized components
     * @private
     * @param {String} componentName - Name of the component to initialize. Used to lookup class definition in components collection.
     * @param {String} componentId - Unique component ID (combination of component name and element ID)
     * @param {Element} el - DOM element that is the context of this component
     * @param {Object} data - Optional data object to pass to the component constructor
     */

  }, {
    key: "_initializeComponent",
    value: function _initializeComponent(componentName, componentId, el, data) {
      var component = this.components[componentName];
      if (typeof component !== 'function') throw "ComponentLoader: unknown component '" + componentName + "'";
      var instance = new component(el, data, this);
      this.initializedComponents[componentId] = instance;
      this.numberOfInitializedComponents++;
    }
    /**
     * Call destroy() on a component instance and remove it from the collection of initialized components
     * @private
     * @param {String} componentId - Unique component ID used to find component instance
     */

  }, {
    key: "_destroyComponent",
    value: function _destroyComponent(componentId) {
      var instance = this.initializedComponents[componentId];
      if (instance && typeof instance.destroy === 'function') instance.destroy(); // safe to delete while object keys while loopinghttp://stackoverflow.com/questions/3463048/is-it-safe-to-delete-an-object-property-while-iterating-over-them

      delete this.initializedComponents[componentId];
      this.numberOfInitializedComponents--;
    }
    /**
     * Destroy inaitialized components that no longer are active
     * @private
     * @param {Object} activeComponents - All componentIds currently found in the DOM
     */

  }, {
    key: "cleanUp_",
    value: function cleanUp_() {
      var _this4 = this;

      var activeComponents = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
      Object.keys(this.initializedComponents).forEach(function (componentId) {
        if (!activeComponents[componentId]) {
          _this4._destroyComponent(componentId);
        }
      });
    }
    /**
     * Generates a rfc4122 version 4 compliant unique ID
     * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript
     * @private
     */

  }, {
    key: "_generateUUID",
    value: function _generateUUID() {
      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        var r = Math.random() * 16 | 0,
            v = c == 'x' ? r : r & 0x3 | 0x8;
        return v.toString(16);
      });
    }
  }]);

  return ComponentLoader;
}();

exports["default"] = ComponentLoader;
module.exports = exports["default"];

},{}],62:[function(require,module,exports){
/**
 * Component Base Class
 * 
 * Sets all arguments passed in to constructor from ComponentLoader
 *
 * Exposes pub/sub methods for triggering events to other components
 *
 */
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ('value' in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError('Cannot call a class as a function');
  }
}

var Component = function () {
  /**
   * Constructor for the Component
   *
   * Call `super(...arguments);` in the base class constructor
   *
   * @public
   * @param {Node} context - DOM node that contains the component markup
   * @param {Object} data - Optional data object from ComponentLoader.scan()
   * @param {Object} mediator - instance of ComponentLoader for pub/sub
   */
  function Component() {
    _classCallCheck(this, Component);

    this.el = arguments[0];
    if (typeof jQuery !== 'undefined') this.$el = jQuery(this.el);
    this.data = arguments[1];
    this.__mediator = arguments[2];
  }
  /**
   * Publish an event for other components
   * @protected
   * @param {String} topic - Event name
   * @param {Object} data - Optional params to pass with the event
   */


  _createClass(Component, [{
    key: 'publish',
    value: function publish() {
      var _mediator;

      (_mediator = this.__mediator).publish.apply(_mediator, arguments);
    }
    /**
     * Subscribe to an event from another component
     * @protected
     * @param {String} topic - Event name
     * @param {Function} callback - Function to bind
     */

  }, {
    key: 'subscribe',
    value: function subscribe(topic, callback) {
      this.__mediator.subscribe(topic, callback, this);
    }
    /**
     * Unsubscribe from an event from another component
     * @protected
     * @param {String} topic - Event name
     * @param {Function} callback - Function to unbind
     */

  }, {
    key: 'unsubscribe',
    value: function unsubscribe(topic, callback) {
      this.__mediator.unsubscribe(topic, callback, this);
    }
    /**
     * Utility method for triggering the ComponentLoader to scan the markup for new components
     * @protected
     * @param {Object} data - Optional data to pass to the constructor of any Component initialized by this scan
     */

  }, {
    key: 'scan',
    value: function scan(data) {
      this.__mediator.scan(data);
    }
    /**
     * Utility method for defering a function call
     * @protected
     * @param {Function} callback - Function to call
     * @param {Number} ms - Optional ms to delay, defaults to 17ms (just over 1 frame at 60fps)
     */

  }, {
    key: 'defer',
    value: function defer(callback) {
      var ms = arguments.length <= 1 || arguments[1] === undefined ? 17 : arguments[1];
      setTimeout(callback, ms);
    }
    /**
     * Called by ComponentLoader when component is no longer found in the markup
     * usually happens as a result of replacing the markup using AJAX
     *	
     * Override in subclass and make sure to clean up event handlers etc
     *
     * @protected
     */

  }, {
    key: 'destroy',
    value: function destroy() {}
  }]);

  return Component;
}();

exports['default'] = Component;
module.exports = exports['default'];

},{}],63:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

var _Utils = _interopRequireDefault(require('./../../utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var ASizeSwatch = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(ASizeSwatch, _AppeaserComponentBas);

  var _super = _createSuper(ASizeSwatch);

  /**
   * Constructor, will run before page loaded
   */
  function ASizeSwatch() {
    var _this;

    _classCallCheck(this, ASizeSwatch);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(ASizeSwatch, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(ASizeSwatch.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_IN_STOCK = '.in-stock';
      this.SELECTOR_OUT_OF_STOCK = '.out-of-stock';
      this.SELECTOR_SIZE_OPTIONS = '.size-options';
      this.SELECTOR_INPUT = '.a-input';
      this.SELECTOR_LOW_STOCK = '.low-stock';
      this.CLASS_IN_STOCK = 'in-stock';
      this.CLASS_LOW_IN_STOCK = 'low-in-stock';
      this.CLASS_FIRST_SWATCH = 'first-size-swatch';
      this.CLASS_SHOW_LOW_STOCK = 'show-low-stock';
      this.DELAY_TIME = 1000;
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$inStock = this.$el.find(this.SELECTOR_IN_STOCK);
      this.$outOfStock = this.$el.find(this.SELECTOR_OUT_OF_STOCK);
      this.$input = this.$el.find(this.SELECTOR_INPUT);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onSwatchClick = this._onSwatchClick.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$el.find(this.SELECTOR_SIZE_OPTIONS).on('click', this._onSwatchClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$el.find(this.SELECTOR_SIZE_OPTIONS).off('click', this._onSwatchClick);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._addFirstSwatch();

      _Utils.default.Accessibility.preventFocus(this.$outOfStock);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_addFirstSwatch",
    value: function _addFirstSwatch() {
      var _this2 = this;

      setTimeout(function () {
        _this2.$el.find(_this2.SELECTOR_SIZE_OPTIONS).first().addClass(_this2.CLASS_FIRST_SWATCH);
      }, this.DELAY_TIME);
    }
  }, {
    key: "_onSwatchClick",
    value: function _onSwatchClick(e) {
      var $target = $(e.target);
      var value = $target.parent().data('value'),
          isInStock = false;
      this.$el.find(this.SELECTOR_SIZE_OPTIONS).removeClass(_Enums.default.CLASS.IS_SELECTED);
      this.$el.find(this.SELECTOR_LOW_STOCK).removeClass(this.CLASS_SHOW_LOW_STOCK);

      if ($(e.target).is('span')) {
        $target.parent().addClass(_Enums.default.CLASS.IS_SELECTED);

        if ($target.parent().hasClass(this.CLASS_IN_STOCK)) {
          isInStock = true;
        }

        if ($target.parent().hasClass(this.CLASS_LOW_IN_STOCK)) {
          $target.parent().find(this.SELECTOR_LOW_STOCK).addClass(this.CLASS_SHOW_LOW_STOCK);
        }
      } else {
        $target.addClass(_Enums.default.CLASS.IS_SELECTED);

        if ($target.hasClass(this.CLASS_IN_STOCK)) {
          isInStock = true;
        }

        if ($target.hasClass(this.CLASS_LOW_IN_STOCK)) {
          $target.find(this.SELECTOR_LOW_STOCK).addClass(this.CLASS_SHOW_LOW_STOCK);
        }
      }

      this.publish(_Enums.default.EVENT.ON_SIZE_SWATCH_SELECTED, isInStock);
    }
  }]);

  return ASizeSwatch;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = ASizeSwatch;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66,"./../../utils.js":113}],64:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var AVimeoVideo = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(AVimeoVideo, _AppeaserComponentBas);

  var _super = _createSuper(AVimeoVideo);

  /**
   * Constructor, will run before page loaded
   */
  function AVimeoVideo() {
    var _this;

    _classCallCheck(this, AVimeoVideo);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(AVimeoVideo, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(AVimeoVideo.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {}
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {}
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {}
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this.video = new Vimeo.Player(this.$el);

      this._setAudioState();
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_setAudioState",
    value: function _setAudioState() {
      if (this.$el.data('mute')) {
        this.video.setVolume(0);
      }
    }
  }]);

  return AVimeoVideo;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = AVimeoVideo;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],65:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var AYoutubeVideo = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(AYoutubeVideo, _AppeaserComponentBas);

  var _super = _createSuper(AYoutubeVideo);

  /**
   * Constructor, will run before page loaded
   */
  function AYoutubeVideo() {
    var _this;

    _classCallCheck(this, AYoutubeVideo);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(AYoutubeVideo, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(AYoutubeVideo.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.ID_YOUTUBE_API = 'youtube-api';
      this.SELECTOR_BODY = 'body';
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {}
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onFrameworkReady = this._onFrameworkReady.bind(this);
      this._onInit = this._onInit.bind(this);
      this._onPlayerReady = this._onPlayerReady.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_YOUTUBE_API_INIT, this._onInit);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_YOUTUBE_API_INIT, this._onInit);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {}
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      var _this2 = this;

      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this.playerID = this.$el.find('iframe').attr('id');

      if (!$('#youtube-api').length) {
        window.onYouTubeIframeAPIReady = function () {
          _this2.publish(_Enums.default.EVENT.ON_YOUTUBE_API_INIT);
        };

        $(this.SELECTOR_BODY).append('<script id="' + this.ID_YOUTUBE_API + '"  src="' + _Enums.default.ENDPOINT.YOUTUBE_API + '" async ></script>');
      }
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_onInit",
    value: function _onInit() {
      this.player = new YT.Player(this.playerID, {
        events: {
          onReady: this._onPlayerReady
        }
      });
    }
  }, {
    key: "_onPlayerReady",
    value: function _onPlayerReady(e) {
      if (this.$el.data('mute')) {
        this.player.setVolume(0);
      }
    }
  }]);

  return AYoutubeVideo;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = AYoutubeVideo;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],66:[function(require,module,exports){
"use strict";

var _BaseEnums = _interopRequireDefault(require('./../../js/base/enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Enums = $.extend({}, _BaseEnums.default, {
  // MEDIA QUERIES
  // - To be used with enquire.js
  MQ: {
    IS_MOBILE_SMALL: 'screen and (max-width: 400px)',
    IS_MOBILE: 'screen and (max-width: 630px)',
    IS_MOBILE_HEADER: 'screen and (max-width: 768px)',
    IS_TABLET: 'screen and (min-width: 630px) and (max-width: 1024px)',
    IS_PORTRAIT_TABLET: 'screen and (min-width: 630px) and (max-width: 900px)',
    IS_LANDSCAPE_TABLET: 'screen and (min-width: 901px) and (max-width: 1024px)',
    IS_DESKTOP: 'screen and (min-width: 1025px)',
    IS_DESKTOP_HD: 'screen and (min-width: 1281px)',
    MOBILE_AND_TABLET_RANGE: 'screen and (max-width: 1024px)',
    LARGE_MOBILE_AND_DESKTOP_RANGE: 'screen and (min-width: 415px)',
    TABLET_AND_DESKTOP_RANGE: 'screen and (min-width: 630px)',
    TABLET_AND_DESKTOP_RANGE_HEADER: 'screen and (min-width: 769px)'
  },
  TEMPLATE: {
    SELECTOR_NOTIFICATION_TEMPLATE_NO_SALE: '#notification-no-sale',
    SELECTOR_NOTIFICATION_TEMPLATE_NO_SALE_IN_CATEGORY: '#notification-no-sale-in-category',
    SELECTOR_NOTIFICATION_TEMPLATE_NO_RESULT: '#notification-no-result',
    SELECTOR_NOTIFICATION_TEMPLATE_UNDO: '#notification-undo',
    SELECTOR_NOTIFICATION_TEMPLATE_NO_PAGE: '#page-not-found'
  },
  ENDPOINT: {
    COUNTRY_PATH: (location.pathname.match(/^\/\w+_\w+\//g) || ['/en_eur/']).join(''),
    // /en_eur/ or /en_sek/, etc.
    GOOGLE_API: '//maps.google.com/maps/api/js?client=gme-hmhennesmauritzab&callback=initMap&v=3&channel=storelocator_arket',
    YOUTUBE_API: 'https://www.youtube.com/iframe_api'
  },
  REGEXFORSEARCH: {
    XSS: /^.*?(?=[\^#%$\*:;<>\?/\{\|\}\(\)]).*$/
  }
}); // combine common events with theme specific events

Enums.EVENT = $.extend({}, _BaseEnums.default.EVENT, {
  ON_BEFORE_CONTENT_LOAD: 'ON_NEW_CONTENT_LOAD',
  ON_PRODUCT_AVAILABILITY_UPDATED: 'ON_PRODUCT_AVAILABILITY_UPDATED',
  ON_SEARCH_CURTAIN_CLOSE: 'ON_SEARCH_CURTAIN_CLOSE',
  ON_NEWSLETTER_POPUP_VISIBLE: 'ON_NEWSLETTER_POPUP_VISIBLE',
  ON_DROPDOWN_CLOSED_FILTERS: 'ON_DROPDOWN_CLOSED_FILTERS'
}); // combine common actions with theme specific actions

Enums.ACTION = $.extend({}, _BaseEnums.default.ACTION, {
  SET_SEARCH_INPUT_PLACEHOLDER: 'SET_SEARCH_INPUT_PLACEHOLDER',
  OPEN_NEWSLETTER_LIGHTBOX: 'OPEN_NEWSLETTER_LIGHTBOX',
  OPEN_NEWSLETTER_NTN_LIGHTBOX: 'OPEN_NEWSLETTER_NTN_LIGHTBOX',
  SHOW_SEARCH: 'SHOW_SEARCH',
  HIDE_SEARCH: 'HIDE_SEARCH'
});
module.exports = Enums;

},{"./../../js/base/enums.js":50}],67:[function(require,module,exports){
"use strict";

var _Enums = _interopRequireDefault(require('./enums.js'));

var _appeaserComponentLoader = _interopRequireDefault(require('./../../js/base/appeaser-component-loader.js'));

var _Utils = _interopRequireDefault(require('./utils.js'));

var _index = _interopRequireDefault(require("./atoms/a-vimeo-video/index"));

var _index2 = _interopRequireDefault(require("./atoms/a-youtube-video/index"));

var _index3 = _interopRequireDefault(require("../../themes/p11/molecules/m-site-banner/index"));

var _index4 = _interopRequireDefault(require("./molecules/m-input/index"));

var _index5 = _interopRequireDefault(require("./molecules/m-cookie-bar/index"));

var _index6 = _interopRequireDefault(require("./molecules/m-product-shipping-info/index"));

var _index7 = _interopRequireDefault(require("./molecules/m-availability-store/index"));

var _index8 = _interopRequireDefault(require("./molecules/m-product-zoom/index"));

var _index9 = _interopRequireDefault(require("./molecules/m-dropdown/index"));

var _index10 = _interopRequireDefault(require("./molecules/m-dropdown-filter/index"));

var _index11 = _interopRequireDefault(require("./molecules/m-cart-addition/index"));

var _index12 = _interopRequireDefault(require("./molecules/m-notification-ticker/index"));

var _index13 = _interopRequireDefault(require("./organisms/o-lightbox/index"));

var _index14 = _interopRequireDefault(require("./organisms/o-search/index"));

var _index15 = _interopRequireDefault(require("./organisms/o-page/index"));

var _index16 = _interopRequireDefault(require("./organisms/o-search-suggestion/index"));

var _index17 = _interopRequireDefault(require("./organisms/o-filter-color/index"));

var _index18 = _interopRequireDefault(require("./organisms/o-cart-item/index"));

var _index19 = _interopRequireDefault(require("./organisms/o-slider/index"));

var _index20 = _interopRequireDefault(require("./organisms/o-accordion/index"));

var _index21 = _interopRequireDefault(require("./organisms/o-my-page-navigation/index"));

var _index22 = _interopRequireDefault(require("./organisms/o-quick-buy/index"));

var _index23 = _interopRequireDefault(require("./organisms/o-shown-with/index"));

var _index24 = _interopRequireDefault(require("./organisms/o-zoom-slider/index"));

var _index25 = _interopRequireDefault(require("./organisms/o-availability/index"));

var _index26 = _interopRequireDefault(require("./organisms/o-product-attributes/index"));

var _index27 = _interopRequireDefault(require("./organisms/o-product-gallery/index"));

var _index28 = _interopRequireDefault(require("./organisms/o-chooser/index"));

var _index29 = _interopRequireDefault(require("./organisms/o-product-details/index"));

var _index30 = _interopRequireDefault(require("./organisms/o-map/index"));

var _index31 = _interopRequireDefault(require("./organisms/o-checkout/index"));

var _index32 = _interopRequireDefault(require("./organisms/o-page-content/index"));

var _index33 = _interopRequireDefault(require("./organisms/o-my-details/index"));

var _index34 = _interopRequireDefault(require("./organisms/o-hero/index"));

var _index35 = _interopRequireDefault(require("./organisms/o-width/index"));

var _index36 = _interopRequireDefault(require("./molecules/m-site-splash/index"));

var _index37 = _interopRequireDefault(require("./molecules/m-country-selection/index"));

var _index38 = _interopRequireDefault(require("./molecules/m-splash/index"));

var _index39 = _interopRequireDefault(require("./molecules/m-notification/index"));

var _index40 = _interopRequireDefault(require("./organisms/o-slider-cofs/index"));

var _index41 = _interopRequireDefault(require("./organisms/o-order/index"));

var _index42 = _interopRequireDefault(require("./organisms/o-newsletter-popup/index"));

var _index43 = _interopRequireDefault(require("./organisms/o-header/index"));

var _index44 = _interopRequireDefault(require("./organisms/o-product-filters/index"));

var _index45 = _interopRequireDefault(require("./organisms/o-navigation/index"));

var _index46 = _interopRequireDefault(require("./organisms/o-local-navigation/index"));

var _index47 = _interopRequireDefault(require("./organisms/o-pra-component/index"));

var _index48 = _interopRequireDefault(require("./atoms/a-size-swatch/index"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// needed imports
// optional theme based imports
// combine common imports with theme imports
var imports = $.extend({}, commonImports, {
  OPage: _index15.default,
  MInput: _index4.default,
  OLightbox: _index13.default,
  OCartItem: _index18.default,
  OSearchSuggestion: _index16.default,
  OFilterColor: _index17.default,
  OSearch: _index14.default,
  OAccordion: _index20.default,
  OMyPageNavigation: _index21.default,
  OQuickBuy: _index22.default,
  OSlider: _index19.default,
  MSiteBanner: _index3.default,
  MCookieBar: _index5.default,
  MAvailabilityStore: _index7.default,
  OAvailability: _index25.default,
  OProductAttributes: _index26.default,
  MShippingInfo: _index6.default,
  OShownWith: _index23.default,
  OChooser: _index28.default,
  MProductZoom: _index8.default,
  OProductGallery: _index27.default,
  OZoomSlider: _index24.default,
  OProductDetails: _index29.default,
  MDropdown: _index9.default,
  MDropdownFilter: _index10.default,
  MCartAddition: _index11.default,
  OMap: _index30.default,
  OCheckout: _index31.default,
  OPageContent: _index32.default,
  OMyDetails: _index33.default,
  MSiteSplash: _index36.default,
  OHero: _index34.default,
  MCountrySelection: _index37.default,
  MNotification: _index39.default,
  MSplash: _index38.default,
  OWidth: _index35.default,
  OSliderCofs: _index40.default,
  OOrder: _index41.default,
  AVimeoVideo: _index.default,
  AYoutubeVideo: _index2.default,
  ONewsletterPopup: _index42.default,
  OHeader: _index43.default,
  MNotificationTicker: _index12.default,
  OProductFilters: _index44.default,
  ONavigation: _index45.default,
  OLocalNavigation: _index46.default,
  OPra: _index47.default,
  ASizeSwatch: _index48.default
});
/**
 * Log function for handlebars
 * @usage {{log data}}
 */

Handlebars.registerHelper('listTags', function (items, options) {
  var $holder = $('<div>', {
    class: 'content '
  });

  for (var i = 0, l = items.length; i < l; i++) {
    if (items[i].title) {
      $holder.append($('<span>', {
        class: 'a-tag is-' + items[i].type,
        html: items[i].title || ''
      }).data(items[i]));
    }
  }

  return $holder.html();
}); // load all imported components

var loader = new _appeaserComponentLoader.default(imports); // Initialize new components.
// Destroy components no longer in DOM.
// Tell component this scan was not trigger after a pjax (smoothstate) load

loader.scan({
  pjax: false
}); // publish loader for external access

window.appeaser = function () {
  return $.extend({}, utils, {
    publish: function publish(topic, options, callback) {
      loader.publish(topic, options, callback);
    },
    subscribe: function subscribe(topic, callback) {
      loader.subscribe(topic, callback, loader);
    },
    unsubscribe: function unsubscribe(topic, callback) {
      loader.unsubscribe(topic, callback);
    },
    destroy: function destroy(element) {
      loader.destroy(element);
    },
    scan: function scan() {
      loader.scan({
        pjax: true
      });
    },
    sitemap: function () {
      return _Utils.default.Sitemap;
    }(),
    Enums: {
      trigger: _Enums.default.ACTION,
      listen: _Enums.default.EVENT,
      MQ: _Enums.default.MQ,
      TEMPLATE: _Enums.default.TEMPLATE,
      ENDPOINT: _Enums.default.ENDPOINT
    }
  });
}();

},{"../../themes/p11/molecules/m-site-banner/index":79,"./../../js/base/appeaser-component-loader.js":48,"./atoms/a-size-swatch/index":63,"./atoms/a-vimeo-video/index":64,"./atoms/a-youtube-video/index":65,"./enums.js":66,"./molecules/m-availability-store/index":68,"./molecules/m-cart-addition/index":69,"./molecules/m-cookie-bar/index":70,"./molecules/m-country-selection/index":71,"./molecules/m-dropdown-filter/index":72,"./molecules/m-dropdown/index":73,"./molecules/m-input/index":74,"./molecules/m-notification-ticker/index":75,"./molecules/m-notification/index":76,"./molecules/m-product-shipping-info/index":77,"./molecules/m-product-zoom/index":78,"./molecules/m-site-splash/index":80,"./molecules/m-splash/index":81,"./organisms/o-accordion/index":82,"./organisms/o-availability/index":83,"./organisms/o-cart-item/index":84,"./organisms/o-checkout/index":85,"./organisms/o-chooser/index":86,"./organisms/o-filter-color/index":87,"./organisms/o-header/index":88,"./organisms/o-hero/index":89,"./organisms/o-lightbox/index":90,"./organisms/o-local-navigation/index":91,"./organisms/o-map/index":92,"./organisms/o-my-details/index":93,"./organisms/o-my-page-navigation/index":94,"./organisms/o-navigation/index":95,"./organisms/o-newsletter-popup/index":96,"./organisms/o-order/index":97,"./organisms/o-page-content/index":98,"./organisms/o-page/index":99,"./organisms/o-pra-component/index":100,"./organisms/o-product-attributes/index":101,"./organisms/o-product-details/index":102,"./organisms/o-product-filters/index":103,"./organisms/o-product-gallery/index":104,"./organisms/o-quick-buy/index":105,"./organisms/o-search-suggestion/index":106,"./organisms/o-search/index":107,"./organisms/o-shown-with/index":108,"./organisms/o-slider-cofs/index":109,"./organisms/o-slider/index":110,"./organisms/o-width/index":111,"./organisms/o-zoom-slider/index":112,"./utils.js":113}],68:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MAvailabilityStore = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(MAvailabilityStore, _AppeaserComponentBas);

  var _super = _createSuper(MAvailabilityStore);

  /**
   * Constructor, will run before page loaded
   */
  function MAvailabilityStore() {
    var _this;

    _classCallCheck(this, MAvailabilityStore);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MAvailabilityStore, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(MAvailabilityStore.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.CLASS_IS_VISIBLE = 'is-visible';
      this.SELECTOR_FAVORITE = 'span';
      this.SELECTOR_CITY = '.city';
      this.LOCALSTORAGE_ITEM = 'favoriteStore';
      this.SELECTOR_STATUS = '.status';
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$city = this.$el.find(this.SELECTOR_CITY);
      this.$spanFavorite = this.$city.find(this.SELECTOR_FAVORITE);
      this.$status = this.$el.find(this.SELECTOR_STATUS);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._saveFavorite = this._saveFavorite.bind(this);
      this._checkFavoriteStore = this._checkFavoriteStore.bind(this);
      this._removeSpan = this._removeSpan.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_SAVE_FAVORITE, this._removeSpan);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_SAVE_FAVORITE, this._removeSpan);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$el.on('click', this._saveFavorite);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$el.off('click', this._saveFavorite);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._checkFavoriteStore();
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * @param options - not mandatory
     * @private
     */

  }, {
    key: "_saveFavorite",
    value: function _saveFavorite() {
      localStorage.setItem(this.LOCALSTORAGE_ITEM, this.storeId);

      if (!this.$spanFavorite.hasClass(this.CLASS_IS_VISIBLE)) {
        this.$spanFavorite.addClass(this.CLASS_IS_VISIBLE);
        this.$status.addClass(this.CLASS_IS_VISIBLE);
      }

      this.publish(_Enums.default.EVENT.ON_SAVE_FAVORITE, this.storeId);
    }
  }, {
    key: "_checkFavoriteStore",
    value: function _checkFavoriteStore() {
      var lsFavoriteStore = localStorage.getItem(this.LOCALSTORAGE_ITEM);
      this.storeId = this.$el.attr('data-store-id');

      if (lsFavoriteStore && lsFavoriteStore === this.storeId) {
        this.$spanFavorite.addClass(this.CLASS_IS_VISIBLE);
        this.$status.addClass(this.CLASS_IS_VISIBLE);
      }
    }
  }, {
    key: "_removeSpan",
    value: function _removeSpan(storeId) {
      if (this.storeId != storeId && this.$spanFavorite.hasClass(this.CLASS_IS_VISIBLE)) {
        this.$spanFavorite.removeClass(this.CLASS_IS_VISIBLE);
        this.$status.removeClass(this.CLASS_IS_VISIBLE);
      }
    }
  }]);

  return MAvailabilityStore;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = MAvailabilityStore;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],69:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MCartAddition = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(MCartAddition, _AppeaserComponentBas);

  var _super = _createSuper(MCartAddition);

  /**
   * Constructor, will run before page loaded
   */
  function MCartAddition() {
    var _this;

    _classCallCheck(this, MCartAddition);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();

    _this._jQueryScopeBinding();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MCartAddition, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      this._detachMQHandlers();

      _get(_getPrototypeOf(MCartAddition.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.DISPLAY_NEW_ITEM_DURATION = 5000;
      this.HIDE_NEW_ITEM_DURATION = 500;
      this.SELECTOR_ITEM_ADDED_IMG = '.added-item .a-image';
      this.SELECTOR_ITEM_ADDED_TITLE = '.added-item .item-title';
      this.SELECTOR_ITEM_ADDED_PRICE = '.added-item .u-price';
      this.CLASS_HAS_NEW_CART_ITEM = 'has-new-cart-item';
      this.CLASS_IS_CLOSING = 'is-closing';
      this.CLASS_PLACEHOLDER_WRAPPER = 'placeholder-wrapper';
      this.CLASS_RESOLVE = 'Resolve';
      this.lp_resolve_placeholder_url = '//lp2.hm.com/hmgoepprod?blank=width[2],height[3],color[none]&sink=format[gif]';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$itemAddedImg = this.$el.find(this.SELECTOR_ITEM_ADDED_IMG);
      this.$itemAddedTitle = this.$el.find(this.SELECTOR_ITEM_ADDED_TITLE);
      this.$itemAddedPrice = this.$el.find(this.SELECTOR_ITEM_ADDED_PRICE);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_ITEM_ADDED_TO_CART, this._onItemAddedToCart);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_ITEM_ADDED_TO_CART, this._onItemAddedToCart);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {}
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Remove a class so m-cart-addition is in-visible.
     * @private
     */

  }, {
    key: "_closeNewCartAddition",
    value: function _closeNewCartAddition() {
      var _this2 = this;

      this.$el.addClass(this.CLASS_IS_CLOSING);
      setTimeout(function () {
        _this2.$el.removeClass(_this2.CLASS_HAS_NEW_CART_ITEM);

        _this2.$el.removeClass(_this2.CLASS_IS_CLOSING);
      }, this.HIDE_NEW_ITEM_DURATION);

      if (this.displayNewItemTimeout) {
        clearTimeout(this.displayNewItemTimeout);
        this.displayNewItemTimeout = undefined;
      }
    }
    /**
     * Temporarily adds a class so m-cart-addition is visible.
     * @private
     */

  }, {
    key: "_onItemAddedToCart",
    value: function _onItemAddedToCart(data) {
      var _this3 = this;

      if (this.displayNewItemTimeout) {
        clearTimeout(this.displayNewItemTimeout);
      }

      if (data.resolveChain) {
        this.$itemAddedImg.parent().addClass(this.CLASS_PLACEHOLDER_WRAPPER);
        this.$itemAddedImg.attr('data-resolvechain', data.resolveChain);
        this.$itemAddedImg.attr('src', this.lp_resolve_placeholder_url);
        this.$itemAddedImg.addClass(this.CLASS_RESOLVE);
      } else {
        this.$itemAddedImg.attr('src', data.imgSrc);
      }

      this.$itemAddedTitle.text(data.title);
      this.$itemAddedPrice.text(data.price);
      this.$el.addClass(this.CLASS_HAS_NEW_CART_ITEM);
      this.displayNewItemTimeout = setTimeout(function () {
        _this3._closeNewCartAddition();
      }, this.DISPLAY_NEW_ITEM_DURATION);
    }
  }]);

  return MCartAddition;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = MCartAddition;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],70:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

var _Utils = require('./../../utils.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MCookieBar = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(MCookieBar, _AppeaserComponentBas);

  var _super = _createSuper(MCookieBar);

  /**
   * Constructor, will run before page loaded
   */
  function MCookieBar() {
    var _this;

    _classCallCheck(this, MCookieBar);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MCookieBar, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(MCookieBar.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.CLASS_IS_DISASTER = 'is-disaster';
      this.CLASS_IS_VISIBLE = 'is-visible';
      this.SELECTOR_CLOSE = '.close-click-area, .a-button';
      this.COOKIE_HISTORY = 'cookie-notification';
      this.UG_COUNTRY_SELECTOR = 'ug-country-selector';
      this.DISASTER_MESSAGE = 'disaster-message';
      this.CLASS_IS_CHECKOUT = 'is-checkout';
      this.SELECTOR_PAGE_CONTENT = '.o-page-content';
      this.SELECTOR_PAGE_404 = '.o-404-error';
      this.SELECTOR_IS_STATIC = '.is-static';
      this.FADE_ANIMATION_DELAY = 500;
      this.CLASS_FADE_IN = 'fade-in';
      this.CLASS_FADE_OUT = 'fade-out';
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$window = $(window);
      this.$body = $('html, body');
      this.$pageContent = this.$body.find(this.SELECTOR_PAGE_CONTENT);
      this.$closeElements = this.$el.find(this.SELECTOR_CLOSE);
      this.$siteEntryMessageContainer = this.$el.find(this.SELECTOR_IS_STATIC);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onScroll = this._onScroll.bind(this);
      this._close = this._close.bind(this);
      this._fadeIn = this._fadeIn.bind(this);
      this._onMQMobileMatch = this._onMQMobileMatch.bind(this);
      this._setMobileVisibilityState = this._setMobileVisibilityState.bind(this);
      this._setAboveMobileVisibilityState = this._setAboveMobileVisibilityState.bind(this);
      this._updateCookieMessage = this._updateCookieMessage.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.ACTION.ON_NOTIFICATION_MSG_CLOSED, this._setMobileVisibilityState);
      this.subscribe(_Enums.default.EVENT.ON_SITE_ENTRY_MESSAGE_SET, this._updateCookieMessage);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.ACTION.ON_NOTIFICATION_MSG_CLOSED, this._setMobileVisibilityState);
      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_SITE_ENTRY_MESSAGE_SET, this._updateCookieMessage);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$window.on('scroll', this._onScroll);
      this.$closeElements.on('click', this._close);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$window.off('scroll', this._onScroll);
      this.$closeElements.off('click', this._close);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._ifCheckoutPage();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._attachMQHandlers();

      this.isMessageVisible = true;
    }
    /**
     * Attach media query handlers
     * @private
     */

  }, {
    key: "_attachMQHandlers",
    value: function _attachMQHandlers() {
      this.MQMobileHandler = {
        match: this._onMQMobileMatch.bind(this)
      };
      this.MQTabletAndDesktopHandler = {
        match: this._setAboveMobileVisibilityState.bind(this)
      };
      enquire.register(_Enums.default.MQ.IS_MOBILE_SMALL, this.MQMobileHandler);
      enquire.register(_Enums.default.MQ.LARGE_MOBILE_AND_DESKTOP_RANGE, this.MQTabletAndDesktopHandler);
    }
    /**
     * Detach media query handlers
     * @private
     */

  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {
      enquire.unregister(_Enums.default.MQ.IS_MOBILE_SMALL, this.MQMobileHandler);
      enquire.unregister(_Enums.default.MQ.LARGE_MOBILE_AND_DESKTOP_RANGE, this.MQTabletAndDesktopHandler);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Removes cookie for disaster message to show it on checkout page
     * @private
     */

  }, {
    key: "_ifCheckoutPage",
    value: function _ifCheckoutPage() {
      if (this.$pageContent.hasClass(this.CLASS_IS_CHECKOUT)) {
        Cookies.remove(this.DISASTER_MESSAGE);
      }
    }
    /**
     * Shoes only one notification at the time, mobile only
     *
     * @private
     */

  }, {
    key: "_setMobileVisibilityState",
    value: function _setMobileVisibilityState() {
      if (_Utils.Stores.popupsDisabled()) {
        this.isMessageVisible = false;
      } else if (this.$pageContent.find(this.SELECTOR_PAGE_404).length && this.$el.hasClass(this.CLASS_IS_DISASTER)) {
        this.$el.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
        this.isMessageVisible = false;
      } else if (Cookies.get(this.COOKIE_HISTORY) !== 'viewed' && !this.$el.hasClass(this.CLASS_IS_DISASTER) || Cookies.get(this.DISASTER_MESSAGE) !== 'viewed' && this.$el.hasClass(this.CLASS_IS_DISASTER)) {
        this.$el.addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);

        this._fadeIn();

        this.isMessageVisible = true;
      }
    }
    /**
     * Shows all notifications if cookie is not set, desktop and tablet only
     * @private
     */

  }, {
    key: "_setAboveMobileVisibilityState",
    value: function _setAboveMobileVisibilityState() {
      if (this.$pageContent.find(this.SELECTOR_PAGE_404).length && this.$el.hasClass(this.CLASS_IS_DISASTER)) {
        this.$el.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
        this.isMessageVisible = false;
      } else if (Cookies.get(this.COOKIE_HISTORY) === 'viewed' && !this.$el.hasClass(this.CLASS_IS_DISASTER) || Cookies.get(this.DISASTER_MESSAGE) === 'viewed' && this.$el.hasClass(this.CLASS_IS_DISASTER)) {
        this.$el.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
        this.isMessageVisible = false;
      } else if (_Utils.Stores.popupsDisabled()) {
        this.isMessageVisible = false;
      } else {
        this.$el.addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
        this.isMessageVisible = true;
      }
    }
    /**
     * Closes the notifications and sets cookie and disaster message history
     * @param e
     * @private
     */

  }, {
    key: "_close",
    value: function _close(e) {
      this.$el.remove();

      if (!this.$el.hasClass(this.CLASS_IS_DISASTER)) {
        Cookies.set(this.COOKIE_HISTORY, 'viewed', {
          expires: 7
        });

        if (Modernizr.mq(_Enums.default.MQ.IS_MOBILE_SMALL)) {
          this.publish(_Enums.default.ACTION.ON_NOTIFICATION_MSG_CLOSED, this);
        }
      } else {
        Cookies.set(this.DISASTER_MESSAGE, 'viewed');
      }
    }
    /**
     * Hide/Show (fade) cookies notifications on scroll
     * Works only with visible cookies notification (need this to avoid js work with closed cookies notifications)
     * @param e
     * @private
     */

  }, {
    key: "_onScroll",
    value: function _onScroll(e) {
      var _this2 = this;

      if (this.$el.hasClass(this.CLASS_IS_VISIBLE) && !Modernizr.mq(_Enums.default.MQ.IS_MOBILE)) {
        if (this.$window.scrollTop() > 0) {
          if (this.isMessageVisible) {
            this.$el.addClass(this.CLASS_FADE_OUT);
            setTimeout(function () {
              _this2.$el.css('display', 'none').removeClass(_this2.CLASS_FADE_OUT);
            }, this.FADE_ANIMATION_DELAY);
            this.isMessageVisible = false;
          }
        } else {
          this._fadeIn();
        }
      }
    }
  }, {
    key: "_fadeIn",
    value: function _fadeIn() {
      var _this3 = this;

      this.$el.addClass(this.CLASS_FADE_IN).css('display', 'block');
      setTimeout(function () {
        _this3.$el.removeClass(_this3.CLASS_FADE_IN);
      }, this.FADE_ANIMATION_DELAY);
      this.isMessageVisible = true;
    }
    /**
     *Removes visibility state when going from tablet to mobile
     * @private
     */

  }, {
    key: "_onMQMobileMatch",
    value: function _onMQMobileMatch() {
      if (Cookies.get(this.COOKIE_HISTORY) !== 'viewed' && this.$el.hasClass(this.CLASS_IS_DISASTER)) {
        this.$el.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
        this.isMessageVisible = false;
      }

      this._setMobileVisibilityState();
    }
  }, {
    key: "_updateCookieMessage",
    value: function _updateCookieMessage(message, showCountrySelect) {
      this.$siteEntryMessageContainer.html(message);

      if (showCountrySelect) {
        if (Cookies.get(this.UG_COUNTRY_SELECTOR) !== 'viewed') {
          this.publish(_Enums.default.ACTION.SHOW_LIGHTBOX, {
            template: 'country-selector',
            classes: 'is-country-selector is-multi-language'
          });
          Cookies.set(this.UG_COUNTRY_SELECTOR, 'viewed', {
            expires: _Enums.default.TIME.COUNTRY_SELECT_TIMEOUT
          });
        }
      }
    }
  }]);

  return MCookieBar;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = MCookieBar;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66,"./../../utils.js":113}],71:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MCountrySelection = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(MCountrySelection, _AppeaserComponentBas);

  var _super = _createSuper(MCountrySelection);

  /**
   * Constructor, will run before page loaded
   */
  function MCountrySelection() {
    var _this;

    _classCallCheck(this, MCountrySelection);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MCountrySelection, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(MCountrySelection.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_MATRIX_ELEMENTS = '.matrix-row-el';
      this.SELECTOR_MATRIX_ROW = '.matrix-row';
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$matrixBlocks = this.$el.find(this.SELECTOR_MATRIX_ELEMENTS);
      this.$matrixRow = this.$el.find(this.SELECTOR_MATRIX_ROW);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onMatrixBlockClick = this._onMatrixBlockClick.bind(this);
      this._getLocation = this._getLocation.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$matrixBlocks.on('click', this._onMatrixBlockClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$matrixBlocks.off('click', this._onMatrixBlockClick);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._breakSomeCountries();

      this._getLocation(); // callback for google maps init


      if (!$('#google-api').length) {
        $('body').append('<script id="google-api" src="' + _Enums.default.ENDPOINT.GOOGLE_API + '" async defer></script>');
      }
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Function to break some countries text to fit properly
     * @private
     */

  }, {
    key: "_breakSomeCountries",
    value: function _breakSomeCountries() {
      var countries = {
        NL: 'Nether- lands'
      };

      for (var _i = 0, _Object$keys = Object.keys(countries); _i < _Object$keys.length; _i++) {
        var locale = _Object$keys[_i];
        this.$el.find(this.SELECTOR_MATRIX_ELEMENTS + '[data-country="' + locale + '"] span').html(countries[locale]);
      }
    }
    /**
     * Fetch country name from google API and and adds class .is-active to relevant country matrix
     * @param position
     * @private
     */

  }, {
    key: "_getLocation",
    value: function _getLocation(position) {
      var _this2 = this;

      // Get current location
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function (position) {
          var initialLocation = new google.maps.LatLng(position.coords.latitude, position.coords.longitude),
              geocoder = new google.maps.Geocoder();
          geocoder.geocode({
            location: {
              lat: initialLocation.lat(),
              lng: initialLocation.lng()
            }
          }, function (results, status) {
            if (status !== google.maps.GeocoderStatus.OK) return;
            var countryName = results.find(function (addrs) {
              return addrs.types.some(function (i) {
                return i == 'country';
              });
            }).address_components.map(function (i) {
              return i.short_name;
            });

            _this2.$matrixRow.find("[data-country=\"".concat(countryName, "\"]")).addClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
          });
        });
      }
    }
    /**
     * Handles click on matrix block
     * @private
     */

  }, {
    key: "_onMatrixBlockClick",
    value: function _onMatrixBlockClick(e) {
      this.$matrixBlocks.removeClass(_Enums.default.CLASS.IS_ACTIVE_STATE);

      if (!$(e.currentTarget).hasClass(_Enums.default.CLASS.IS_ACTIVE_STATE)) {
        $(e.currentTarget).addClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
      } else {
        $(e.currentTarget).removeClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
      }
    }
  }]);

  return MCountrySelection;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = MCountrySelection;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],72:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _dropdown = _interopRequireDefault(require('./../../../../js/base/dropdown.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

var _Utils = _interopRequireDefault(require('./../../utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MDropdownFilter = /*#__PURE__*/function (_Dropdown) {
  _inherits(MDropdownFilter, _Dropdown);

  var _super = _createSuper(MDropdownFilter);

  /**
   * Constructor, will run before page loaded
   */
  function MDropdownFilter() {
    var _this;

    _classCallCheck(this, MDropdownFilter);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    return _this;
  }
  /************************************************************************************************************
   ******************************************** Internal functions ********************************************
   ************************************************************************************************************/

  /**
   * Declare class constants here
   * @private
   */


  _createClass(MDropdownFilter, [{
    key: "_declareConstants",
    value: function _declareConstants() {
      _get(_getPrototypeOf(MDropdownFilter.prototype), "_declareConstants", this).call(this); //Classes


      this.CLASS_DISPLAY_NONE = 'u-display-none';
      this.CLASS_ALIGN_STICKY_HEADER = 'align-sticky';
      this.CLASS_COUNTRY_DROPDOWN = 'country-dropdown'; //SELECTORS

      this.SELECTOR_INPUT = '.a-input.filter';
      this.SELECTOR_DROPDOWN_FILTER = '.m-dropdown-filter';
      this.SELECTOR_NEWSLETTER = '.o-newsletter-popup, .o-newsletter-signup';
      this.SELECTOR_M_COUNTRY_SELECT = '.m-country-select';
      this.optionHeight = null;
      this.isCountryDropdown = this.$el.hasClass(this.CLASS_COUNTRY_DROPDOWN);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      _get(_getPrototypeOf(MDropdownFilter.prototype), "_jQueryScopeBinding", this).call(this);

      this._removeFilter = this._removeFilter.bind(this);
      this._onHeaderSticky = this._onHeaderSticky.bind(this);
      this._onHeaderNotSticky = this._onHeaderNotSticky.bind(this);
      this._openDropdown = this._openDropdown.bind(this);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady'); //Elements


      this.$input = this.$el.find(this.SELECTOR_INPUT);
      this.$countryBtn = $(this.SELECTOR_M_COUNTRY_SELECT);

      this._checkInputValue(); //_onDOMReady in parent calls _attachDOMListeners, so we need perform our own actions first.


      _get(_getPrototypeOf(MDropdownFilter.prototype), "_onDOMReady", this).call(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _get(_getPrototypeOf(MDropdownFilter.prototype), "_attachSubscribers", this).call(this);

      this.subscribe(_Enums.default.EVENT.ON_HEADER_STICY, this._onHeaderSticky);
      this.subscribe(_Enums.default.EVENT.ON_HEADER_NOT_STICKY, this._onHeaderNotSticky);
      this.subscribe(_Enums.default.ACTION.SET_DROPDOWN_SELECTED_OPTION, this._checkInputValue);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _get(_getPrototypeOf(MDropdownFilter.prototype), "_attachSubscribers", this).call(this);

      this.unsubscribe(_Enums.default.EVENT.ON_HEADER_STICY, this._onHeaderSticky);
      this.unsubscribe(_Enums.default.EVENT.ON_HEADER_NOT_STICKY, this._onHeaderNotSticky);
      this.unsubscribe(_Enums.default.ACTION.SET_DROPDOWN_SELECTED_OPTION, this._checkInputValue);
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      _get(_getPrototypeOf(MDropdownFilter.prototype), "_attachDOMListeners", this).call(this);

      this.$countryBtn.on('click', this._openDropdown);
      this.$input.on('click', this._open);
      this.$input.on('input', this._filterOptions);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      _get(_getPrototypeOf(MDropdownFilter.prototype), "_detachDOMListeners", this).call(this);

      this.$countryBtn.off('click', this._openDropdown);
      this.$input.off('focus', this._open);
      this.$input.off('input', this._filterOptions);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * ON_HEADER_STICKY event handler
     * @private
     */

  }, {
    key: "_onHeaderSticky",
    value: function _onHeaderSticky() {
      this.$el.addClass(this.CLASS_ALIGN_STICKY_HEADER);
    }
    /**
     * ON_HEADER_NOT_STICKY event handler
     * @private
     */

  }, {
    key: "_onHeaderNotSticky",
    value: function _onHeaderNotSticky() {
      this.$el.removeClass(this.CLASS_ALIGN_STICKY_HEADER);
    }
    /**
     * Removes filter so all options are visible.
     * @private
     */

  }, {
    key: "_removeFilter",
    value: function _removeFilter() {
      this.$options.removeClass(this.CLASS_DISPLAY_NONE);
    }
    /**
     * Opens dropdown
     * @private
     */

  }, {
    key: "_openDropdown",
    value: function _openDropdown(event) {
      var target = event ? event.target : window.event.srcElement,
          targetElement = target.querySelector('.country-dropdown');

      this._open(event, $(targetElement));

      if (_Utils.default.Helpers.isIE11()) {
        this.$countryBtn.one('click', function (e) {
          var x = e.clientX,
              y = e.clientY,
              elementMouseIsOver = document.elementFromPoint(x, y);
          elementMouseIsOver.click();
        });
      }
    }
    /**
     * Opens dropdown
     * @private
     */

  }, {
    key: "_open",
    value: function _open(event, $targetEl) {
      event !== undefined && event.stopPropagation();
      var $thisEl = typeof $targetEl !== 'undefined' ? $targetEl : this.$el;
      if ($thisEl.hasClass(_Enums.default.CLASS.IS_DISABLED_STATE)) return;

      if ($thisEl.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        this._close();

        return;
      }

      $(this.SELECTOR_DROPDOWN_FILTER).removeClass(_Enums.default.CLASS.IS_OPEN_STATE);

      this._removeFilter();

      $thisEl.addClass(_Enums.default.CLASS.IS_OPEN_STATE); //Scroll to the selected option

      var scrollTop = this.$options.index(this.$selectedOption) * this.$selectedOption.outerHeight();
      this.$optionsWrapper.scrollTop(scrollTop);
    }
    /**
     * Closes dropdown
     * @private
     */

  }, {
    key: "_close",
    value: function _close() {
      this.$el.removeClass(_Enums.default.CLASS.IS_OPEN_STATE);

      this._checkInputValue();

      this.publish(_Enums.default.EVENT.ON_DROPDOWN_CLOSED_FILTERS);
    }
    /**
     * Filters the options of the dropdown.
     * @private
     */

  }, {
    key: "_filterOptions",
    value: function _filterOptions() {
      var searchString = this.$input.val().toLowerCase();

      this._open();

      this.$options.each(function (index, element) {
        var $element = $(element);

        if ($element.html().toLowerCase().substring(0, searchString.length) == searchString) {
          $element.removeClass(_Enums.default.CLASS.DISPLAY_NONE);
        } else {
          $element.addClass(_Enums.default.CLASS.DISPLAY_NONE);
          $element.removeClass(_Enums.default.CLASS.IS_SELECTED);
        }
      });
    }
    /**
     * Prevents mobile scrolling
     * @private
     */

  }, {
    key: "_preventMobileScroll",
    value: function _preventMobileScroll() {
      this.publish(_Enums.default.ACTION.DISABLE_SCROLL, {
        $touchScrollElement: this.$optionsWrapper,
        forceScrollPosition: true
      });
      this.scrollDisabled = true;
    }
    /**
     * Enables mobile scrolling
     * @private
     */

  }, {
    key: "_enableMobileScroll",
    value: function _enableMobileScroll() {
      if (this.scrollDisabled) {
        this.publish(_Enums.default.ACTION.ENABLE_SCROLL);
        this.scrollDisabled = false;
      }
    }
  }, {
    key: "_checkInputValue",
    value: function _checkInputValue() {
      if (!this.$input.parents(this.SELECTOR_NEWSLETTER).length) {
        if (this.$input.val()) {
          this.$input.css('border-color', 'black');
        } else {
          this.$input.css('border-color', '');
        }
      }
    }
    /**
     * Sets the hidden input value so that the of the selected
     * element in the form is properly sent in the call.
     * */

  }, {
    key: "_setHiddenInput",
    value: function _setHiddenInput($target) {
      if (this.$hiddenInput.length) {
        var hiddenValue;

        if ($target && $target.length) {
          hiddenValue = $target.data('value');
        } else if (this.$selectedAndIsValue.length) {
          hiddenValue = this.$selectedAndIsValue.data('value');
        } else {
          hiddenValue = '';
        }

        this.$hiddenInput.val(hiddenValue);
      }
    }
  }, {
    key: "_onOptionClick",
    value: function _onOptionClick(e) {
      if (!this.isCountryDropdown) {
        this._setInputValue($(e.target));

        this._close();
      }
    }
  }, {
    key: "_setInputValue",
    value: function _setInputValue($target) {
      if (!this.isCountryDropdown) {
        _get(_getPrototypeOf(MDropdownFilter.prototype), "_setInputValue", this).call(this, $target);

        this._setHiddenInput($target);
      }
    }
  }, {
    key: "_setInputOnLoad",
    value: function _setInputOnLoad() {
      _get(_getPrototypeOf(MDropdownFilter.prototype), "_setInputOnLoad", this).call(this);

      this._setHiddenInput();
    }
  }]);

  return MDropdownFilter;
}(_dropdown.default); // Export this so we can pick it up and import in main.js


module.exports = MDropdownFilter;

},{"./../../../../js/base/dropdown.js":49,"./../../../../js/base/logger.js":51,"./../../enums.js":66,"./../../utils.js":113}],73:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _MDropdownCommon2 = _interopRequireDefault(require('./../../../../js/base/m-dropdown.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MDropdown = /*#__PURE__*/function (_MDropdownCommon) {
  _inherits(MDropdown, _MDropdownCommon);

  var _super = _createSuper(MDropdown);

  /**
   * Constructor, will run before page loaded
   */
  function MDropdown() {
    var _this;

    _classCallCheck(this, MDropdown);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    return _this;
  }
  /************************************************************************************************************
   ****************************************** Implementation functions ****************************************
   ************************************************************************************************************/

  /**
   * Opens but without preventing scroll in mobile like the common script does
   * @private
   */


  _createClass(MDropdown, [{
    key: "_open",
    value: function _open() {
      this.$el.addClass(_Enums.default.CLASS.IS_OPEN_STATE);
      this.publish(_Enums.default.EVENT.ON_DROPDOWN_OPEN);
    }
    /**
     * Sets the value of the hidden input element.
     * @param $target - Input value will be set to the HTML of the target.
     * @private
     */

  }, {
    key: "_setInputValue",
    value: function _setInputValue($target, el) {
      if (!$target.length && el !== undefined) {
        $(el).trigger('click');
      } else {
        _get(_getPrototypeOf(MDropdown.prototype), "_setInputValue", this).call(this, $target);
      }

      if ($target.length) {
        this.$el.addClass(_Enums.default.CLASS.IS_FILLED);
      }
    }
  }]);

  return MDropdown;
}(_MDropdownCommon2.default); // Export this so we can pick it up and import in main.js


module.exports = MDropdown;

},{"./../../../../js/base/logger.js":51,"./../../../../js/base/m-dropdown.js":52,"./../../enums.js":66}],74:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _index = _interopRequireDefault(require("common/molecules/m-input/index"));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MInput = /*#__PURE__*/function (_BaseInput) {
  _inherits(MInput, _BaseInput);

  var _super = _createSuper(MInput);

  /**
   * Constructor, will run before page loaded
   */
  function MInput() {
    _classCallCheck(this, MInput);

    return _super.apply(this, arguments);
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MInput, [{
    key: "destroy",
    value: function destroy() {
      _get(_getPrototypeOf(MInput.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /** Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      _get(_getPrototypeOf(MInput.prototype), "_declareConstants", this).call(this);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _get(_getPrototypeOf(MInput.prototype), "_onDOMReady", this).call(this); // Trigger to check if input field was pre-filled


      this._onKeyUp();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      _get(_getPrototypeOf(MInput.prototype), "_jQueryScopeBinding", this).call(this);

      this._onKeyUp = this._onKeyUp.bind(this);
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      _get(_getPrototypeOf(MInput.prototype), "_attachDOMListeners", this).call(this);

      if (!Modernizr.touchevents) {
        this.$input.on('keyup', this._onKeyUp);
      }
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      _get(_getPrototypeOf(MInput.prototype), "_detachDOMListeners", this).call(this);

      this.$input.off('keyup', this._onKeyUp);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_onKeyUp",
    value: function _onKeyUp() {
      _get(_getPrototypeOf(MInput.prototype), "_onKeyUp", this).call(this);

      if (this.$input.val() && this.$input.val().length) {
        this.$el.addClass(_Enums.default.CLASS.IS_FILLED);
      } else {
        this.$el.removeClass(_Enums.default.CLASS.IS_FILLED);
      }
    }
  }]);

  return MInput;
}(_index.default); // Export this so we can pick it up and import in main.js


module.exports = MInput;

},{"./../../enums.js":66,"common/molecules/m-input/index":7}],75:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MNotificationTicker = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(MNotificationTicker, _AppeaserComponentBas);

  var _super = _createSuper(MNotificationTicker);

  /**
   * Constructor, will run before page loaded
   */
  function MNotificationTicker() {
    var _this;

    _classCallCheck(this, MNotificationTicker);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MNotificationTicker, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(MNotificationTicker.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {}
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$window = $(window);
      this.$body = $('html, body');
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {
      this._activateTicker();
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {}
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._attachMQHandlers();
    }
    /**
     * Attach media query handlers
     * @private
     */

  }, {
    key: "_attachMQHandlers",
    value: function _attachMQHandlers() {}
    /**
     * Detach media query handlers
     * @private
     */

  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {}
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_activateTicker",
    value: function _activateTicker() {
      var _this2 = this;

      this.$el.addClass('is-active');
      var index = 0,
          length = this.$el.find('li').length;
      this.$el.find('li:eq(' + index + ')').addClass('is-visible');
      setInterval(function () {
        index++;

        if (index === length) {
          index = 0;
        }

        _this2.$el.find('li').removeClass('is-visible');

        setTimeout(function () {
          _this2.$el.find('li:eq(' + index + ')').addClass('is-visible');
        }, 500);
      }, 3000);
    }
  }]);

  return MNotificationTicker;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = MNotificationTicker;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],76:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MNotification = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(MNotification, _AppeaserComponentBas);

  var _super = _createSuper(MNotification);

  /**
   * Constructor, will run before page loaded
   */
  function MNotification() {
    var _this;

    _classCallCheck(this, MNotification);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();

    _this._jQueryScopeBinding();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MNotification, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      this._detachMQHandlers();

      _get(_getPrototypeOf(MNotification.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.ANIMATION_DURATION = 400;
      this.SELECTOR_TAG_TEMPLATE = '#hbs-search-tag';
      this.SELECTOR_CURTAIN_WRAPPER = '.curtain-wrapper';
      this.SELECTOR_PAGE_CONTENT = '.o-page-content';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$curtainWrapper = $(this.SELECTOR_CURTAIN_WRAPPER);
      this.$pageContent = $(this.SELECTOR_PAGE_CONTENT);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._show = this._show.bind(this);
      this._hide = this._hide.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.ACTION.SHOW_NOTIFICATION_AREA, this._show);
      this.subscribe(_Enums.default.ACTION.HIDE_NOTIFICATION_AREA, this._hide);
      this.subscribe(_Enums.default.EVENT.ON_BEFORE_CONTENT_LOAD, this._onBeforeContentLoad);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.ACTION.SHOW_NOTIFICATION_AREA, this._show);
      this.unsubscribe(_Enums.default.ACTION.HIDE_NOTIFICATION_AREA, this._hide);
      this.unsubscribe(_Enums.default.EVENT.ON_BEFORE_CONTENT_LOAD, this._onBeforeContentLoad);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {}
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Trigged by o-search/index.js before load page
     * @param loadParams
     * @private
     */

  }, {
    key: "_onBeforeContentLoad",
    value: function _onBeforeContentLoad(loadParams) {
      this._hide();
    }
    /**
     * Fetches and compiles handlebar templates
     * @param template
     * @param templateData (data to be sent to the template)
     * @returns {string}
     * @private
     */

  }, {
    key: "_compileHandlebars",
    value: function _compileHandlebars(template, templateData) {
      var $template = $(template);

      if ($template.length > 0) {
        return Handlebars.compile($(template).html())(templateData || {});
      }

      return '';
    }
    /**
     * Callback for showing notification
     * @param template
     * @param templateData (data to be provided to the handlebar template)
     * @private
     */

  }, {
    key: "_show",
    value: function _show(template, templateData) {
      this.isVisible = true;
      this.$el.html(this._compileHandlebars(template, templateData)).removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE).addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
      this.$el.css({
        transform: '',
        opacity: '',
        transition: ''
      }); // make sure we reset the css the header sets on scroll

      this.$curtainWrapper.addClass(_Enums.default.CLASS.HAS_NOTIFICATION);
    }
    /**
     * Callback for hiding the notification
     * @private
     */

  }, {
    key: "_hide",
    value: function _hide() {
      var _this2 = this;

      if (!this.isVisible) {
        return;
      }

      this.$el.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
      setTimeout(function () {
        _this2.$el.html('');

        _this2.isVisible = false;

        _this2.$curtainWrapper.removeClass(_Enums.default.CLASS.HAS_NOTIFICATION);
      }, this.ANIMATION_DURATION);
    }
  }]);

  return MNotification;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = MNotification;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],77:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MShippingInfo = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(MShippingInfo, _AppeaserComponentBas);

  var _super = _createSuper(MShippingInfo);

  /**
   * Constructor, will run before page loaded
   */
  function MShippingInfo() {
    var _this;

    _classCallCheck(this, MShippingInfo);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();

    _this._jQueryScopeBinding();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MShippingInfo, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(MShippingInfo.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      //SELECTORS
      this.SELECTOR_ROOT = '.m-product-shipping-info';
      this.SELECTOR_TOOLTIP = '.a-tooltip'; //Include share-container in the selector in order to avoid two tooltips being open at the same time.

      this.SELECTOR_BODY = 'body, .share-container'; //CLASSES

      this.CLASS_TOOLTIP = 'a-tooltip';
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onClick = this._onClick.bind(this);
      this._onBodyClick = this._onBodyClick.bind(this);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /**
     * Caching DOM elements for performance
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$body = $(this.SELECTOR_BODY);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      //We don't use the global body click event since we don't want two tooltips to be open at the same time.
      this.$body.on('click', this._onBodyClick);
      this.$el.on('click', this._onClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$body.off('click', this._onBodyClick);
      this.$el.off('click', this._onClick);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Opens and closes tooltip on click.
     * @param e
     * @private
     */

  }, {
    key: "_onClick",
    value: function _onClick(e) {
      e.stopPropagation();
      var $target = $(e.target);

      if (!$target.hasClass(this.CLASS_TOOLTIP) && !$target.parent(this.SELECTOR_TOOLTIP).length) {
        if (!this.$el.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
          this.$el.addClass(_Enums.default.CLASS.IS_OPEN_STATE);
        } else {
          this.$el.removeClass(_Enums.default.CLASS.IS_OPEN_STATE);
        }
      }
    }
    /**
     * Closing tooltip on body click.
     * @private
     */

  }, {
    key: "_onBodyClick",
    value: function _onBodyClick() {
      this.$el.removeClass(_Enums.default.CLASS.IS_OPEN_STATE);
    }
  }]);

  return MShippingInfo;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = MShippingInfo;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],78:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MProductZoom = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(MProductZoom, _AppeaserComponentBas);

  var _super = _createSuper(MProductZoom);

  /**
   * Constructor, will run before page loaded
   */
  function MProductZoom() {
    var _this;

    _classCallCheck(this, MProductZoom);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MProductZoom, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      this._detachMQHandlers();

      _get(_getPrototypeOf(MProductZoom.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_CLOSE = '.a-icon-close-circle';
      this.SELECTOR_IMAGE_WRAPPER = '.img-wrapper';
      this.SELECTOR_PDP_GALLERY_IMAGE = '.pdp-image';
      this.SELECTOR_PDP_ZOOMED_IMAGE = '.zoomed-image';
      this.SELECTOR_IMAGE = '.a-image';
      this.CLASS_FULL_OPACITY = 'full-opacity';
      this.CLASS_RESOLVE_COMPLETE = 'ResolveComplete';
      this.CLASS_RESOLVE = 'Resolve';
      this.CLASS_PLACEHOLDER_WRAPPER = 'placeholder-wrapper';
      this.lp_placeholder_url = '//lp2.hm.com/hmgoepprod?blank=width[2],height[3],color[none]&sink=format[gif]';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this.$closeIcon = this.$el.find(this.SELECTOR_CLOSE);
      this.$imgWrapper = this.$el.find(this.SELECTOR_IMAGE_WRAPPER);
      this.zoomImg = $(this.SELECTOR_IMAGE_WRAPPER).find(this.SELECTOR_PDP_ZOOMED_IMAGE);
      this.isSingleTapInProgress = false;

      this._attachSubscribers();

      this._attachDOMListeners();

      this._attachMQHandlers();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onDesktopMatch = this._onDesktopMatch.bind(this);
      this._onDesktopUnMatch = this._onDesktopUnMatch.bind(this);
      this._show = this._show.bind(this);
      this._hide = this._hide.bind(this);
      this._onPanzoomStart = this._onPanzoomStart.bind(this);
      this._onPanzoomChange = this._onPanzoomChange.bind(this);
      this._onPanzoomEnd = this._onPanzoomEnd.bind(this);
      this._switchLpChain = this._switchLpChain.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.ACTION.SHOW_ZOOMED_IMAGE, this._show);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.ACTION.SHOW_ZOOMED_IMAGE, this._show);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$closeIcon.on('click', this._hide);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$closeIcon.off('click', this._hide);
    }
    /**
     * Attach media query handlers
     * @private
     */

  }, {
    key: "_attachMQHandlers",
    value: function _attachMQHandlers() {
      this.MQDesktopHandler = {
        match: this._onDesktopMatch,
        unmatch: this._onDesktopUnMatch
      };
      enquire.register(_Enums.default.MQ.IS_DESKTOP, this.MQDesktopHandler);
    }
    /**
     * Detach media query handlers
     * @private
     */

  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {
      enquire.unregister(_Enums.default.MQ.IS_DESKTOP, this.MQDesktopHandler);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Handles opening of the overlay and makes sure to trigger the correct zoom
     * @param imageSources
     * @private
     */

  }, {
    key: "_show",
    value: function _show(imageSources) {
      var _this2 = this;

      this.currentScrollTop = $('body').scrollTop() || $('html').scrollTop();
      this.$el.addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
      setTimeout(function () {
        _this2.$el.addClass(_this2.CLASS_FULL_OPACITY);
      }, 25);

      if (this.$imgWrapper.find(this.SELECTOR_PDP_ZOOMED_IMAGE).length) {
        this.$imgWrapper.children(this.SELECTOR_PDP_GALLERY_IMAGE).removeClass(_Enums.default.CLASS.DISPLAY_NONE);
        this.$imgWrapper.children(this.SELECTOR_PDP_ZOOMED_IMAGE).addClass(_Enums.default.CLASS.DISPLAY_NONE);
      }

      this.publish(_Enums.default.ACTION.DISABLE_SCROLL);

      this._showTouchZoom(imageSources.zoomImgSrc, imageSources.pdpGallerySrc, imageSources.resolveChain);
    }
    /**
     * Hides the overlay
     * @param event
     * @private
     */

  }, {
    key: "_hide",
    value: function _hide(event) {
      var _this3 = this;

      event.preventDefault();
      this.$imgWrapper.panzoom('reset');
      this.$el.removeClass(this.CLASS_FULL_OPACITY);
      setTimeout(function () {
        _this3.$el.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
      }, 250);
      this.publish(_Enums.default.ACTION.ENABLE_SCROLL);
      $('html,body').scrollTop(this.currentScrollTop);
    }
    /**
     * Applies the touch zoom
     * @param zoomSrc
     * @param pdpGallerySrc
     * @param resolveChain
     * @private
     */

  }, {
    key: "_showTouchZoom",
    value: function _showTouchZoom(zoomSrc, pdpGallerySrc, resolveChain) {
      if (!this.$imgWrapper.find(this.SELECTOR_PDP_ZOOMED_IMAGE).length) {
        if (this.$imgWrapper.find(this.SELECTOR_IMAGE).length && !this.$imgWrapper.find(this.SELECTOR_IMAGE).attr('src').length) {
          this.$imgWrapper.empty();
        }

        if (resolveChain) {
          this.$img = $("<img alt='pdp gallery image' class='a-image pdp-image is-hidden Resolve'/>" + "<img alt='zoomed image' class='a-image u-display-none zoomed-image is-hidden Resolve'/>");
        } else {
          this.$img = $("<img alt='pdp gallery image' class='a-image pdp-image' />" + "<img alt='zoomed image' class='a-image u-display-none zoomed-image' />");
        }

        this.$imgWrapper.append(this.$img);
      }

      var $pdpGalleryImg = this.$imgWrapper.children(this.SELECTOR_PDP_GALLERY_IMAGE),
          $pdpZoomedImg = this.$imgWrapper.children(this.SELECTOR_PDP_ZOOMED_IMAGE);

      if (resolveChain) {
        this._switchLpChain($pdpZoomedImg, resolveChain);

        this._switchLpChain($pdpGalleryImg, resolveChain);

        this.publish(_Enums.default.ACTION.TRIGGER_SKELETON_LOAD);
      } else {
        $pdpZoomedImg.attr('src', zoomSrc);
        $pdpGalleryImg.attr('src', pdpGallerySrc.replace(/&amp;/g, '&'));
      }

      $pdpZoomedImg.on('load', function () {
        if (resolveChain) {
          $pdpZoomedImg.parent().removeClass(this.CLASS_PLACEHOLDER_WRAPPER);
        } else {
          $pdpGalleryImg.addClass(_Enums.default.CLASS.DISPLAY_NONE);
          $pdpZoomedImg.removeClass(_Enums.default.CLASS.DISPLAY_NONE);
        }
      });

      if (Modernizr.touchevents) {
        this.$imgWrapper.panzoom({
          minScale: 2,
          startTransform: 'scale(2.0)',
          contain: 'invert'
        });
      }

      this.$imgWrapper.on('panzoomstart', this._onPanzoomStart);
      this.$imgWrapper.on('panzoomchange', this._onPanzoomChange);
      this.$imgWrapper.on('panzoomend', this._onPanzoomEnd);
    }
  }, {
    key: "_onDesktopMatch",
    value: function _onDesktopMatch() {
      this.$imgWrapper.on('click', this._hide);
    }
  }, {
    key: "_onDesktopUnMatch",
    value: function _onDesktopUnMatch() {
      this.$imgWrapper.off('click', this._hide);
    }
  }, {
    key: "_onPanzoomStart",
    value: function _onPanzoomStart(e, panzoom, event, touches) {
      if (touches.length === 1) {
        this.isSingleTapInProgress = true;
      }
    }
  }, {
    key: "_onPanzoomChange",
    value: function _onPanzoomChange() {
      this.isSingleTapInProgress = false;
    }
  }, {
    key: "_onPanzoomEnd",
    value: function _onPanzoomEnd(e) {
      if (this.isSingleTapInProgress && e.changedTouches.length === 1) {
        this._hide(e);
      }
    }
  }, {
    key: "_switchLpChain",
    value: function _switchLpChain($el, resolveChain) {
      $el.parent().addClass(this.CLASS_PLACEHOLDER_WRAPPER);
      $el.removeClass(this.CLASS_RESOLVE_COMPLETE).removeAttr('id').attr('src', this.lp_placeholder_url).attr('data-resolvechain', resolveChain).addClass(this.CLASS_RESOLVE);
    }
  }]);

  return MProductZoom;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = MProductZoom;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],79:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

var _Utils = require('./../../utils.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MSiteBanner = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(MSiteBanner, _AppeaserComponentBas);

  var _super = _createSuper(MSiteBanner);

  /**
   * Constructor, will run before page loaded
   */
  function MSiteBanner() {
    var _this;

    _classCallCheck(this, MSiteBanner);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_WINDOW_LOAD, _this._onWindowLoad);

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MSiteBanner, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(MSiteBanner.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_SEARCH = '.o-search-full';
      this.SELECTOR_NAVIGATION_MENU = '.o-navigation-menu';
      this.SELECTOR_SITE_BANNER = '.a-paragraph.is-site-banner';
      this.SELECTOR_ERROR = '.a-paragraph.is-error';
      this.SELECTOR_PARAGRAPH_ENABLED = '.a-paragraph.is-enabled';
      this.SELECTOR_ERROR_BANNER = '.m-error-banner';
      this.CLASS_SLIDE_DOWN = 'slide-down';
      this.INIT_BANNER_TIMEOUT = 200;
      this.ANIMATION_TIME = 400;
      this.BOOL_FLAG = false;
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this.isDomReadyInitiated = true;
    }
    /**
     * Caching DOM elements for performance
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$window = $(window);
      this.$searchFull = $(this.SELECTOR_SEARCH);
      this.$navigationMenu = $(this.SELECTOR_NAVIGATION_MENU);
      this.$siteBanner = this.$el.find(this.SELECTOR_SITE_BANNER);
      this.$error = this.$el.find(this.SELECTOR_ERROR);
      this.$errorBanner = $(this.SELECTOR_ERROR_BANNER);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onResize = this._onResize.bind(this);
      this._initSiteBanner = this._initSiteBanner.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.ACTION.ADJUST_SITE_BANNER_POSITION, this._adjustBannerPosition);
      this.subscribe(_Enums.default.EVENT.ON_NAVIGATION_MENU_OPEN, this._hide);
      this.subscribe(_Enums.default.EVENT.ON_NAVIGATION_MENU_CLOSE, this._onNavigationMenuClose);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_WINDOW_LOAD, this._onWindowLoad);
      this.unsubscribe(_Enums.default.ACTION.ADJUST_SITE_BANNER_POSITION, this._adjustBannerPosition);
      this.unsubscribe(_Enums.default.EVENT.ON_NAVIGATION_MENU_OPEN, this._hide);
      this.unsubscribe(_Enums.default.EVENT.ON_NAVIGATION_MENU_CLOSE, this._onNavigationMenuClose);
      this.unsubscribe(_Enums.default.EVENT.ON_BEFORE_SEARCH_SHOW, this._hide);
      this.unsubscribe(_Enums.default.EVENT.ON_SEARCH_HIDDEN, this._onSearchFullHidden);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {}
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Runs on window load
     * @private
     */

  }, {
    key: "_onWindowLoad",
    value: function _onWindowLoad() {
      var _this2 = this;

      if (this.isDomReadyInitiated) {
        this._initSiteBanner();
      } else {
        this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady);
        this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, function () {
          _this2._onDOMReady();

          _this2._onWindowLoad();
        });
      }
    }
    /**
     * initialize site banner
     */

  }, {
    key: "_initSiteBanner",
    value: function _initSiteBanner() {
      var _this3 = this;

      var showBanner = true;

      if (_Utils.Stores.popupsDisabled()) {
        showBanner = false;
      }

      if (showBanner) {
        this.$siteBanner.addClass(_Enums.default.CLASS.IS_ENABLED_STATE);
        setTimeout(function () {
          if (!_this3.$navigationMenu.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
            _this3._show(_this3.ANIMATION_TIME);
          }
        }, this.INIT_BANNER_TIMEOUT);
        this.subscribe(_Enums.default.EVENT.ON_BEFORE_SEARCH_SHOW, this._hide);
        this.subscribe(_Enums.default.EVENT.ON_SEARCH_HIDDEN, this._onSearchFullHidden);
      } else {
        this.destroy();
        this.$el.remove();
      }
    }
    /**
     * On resize callback
     * @private
     */

  }, {
    key: "_onResize",
    value: function _onResize(animationDuration) {
      animationDuration = typeof animationDuration == 'number' ? animationDuration : false;
      this.$errorBanner = $(this.SELECTOR_ERROR_BANNER);

      if (this.$errorBanner.length < 1) {
        this.publish(_Enums.default.EVENT.ON_ERROR_BANNER_RESIZE, {
          newHeight: this.$el.outerHeight(),
          animationDuration: animationDuration
        });
        this.unsubscribe(_Enums.default.ACTION.ADJUST_SITE_BANNER_POSITION, this._adjustBannerPosition);
      }
    }
    /**
     * On search full hidden callback
     * @private
     */

  }, {
    key: "_onSearchFullHidden",
    value: function _onSearchFullHidden() {
      var _this4 = this;

      //The search is opened and closed from the navigation menu in mobile, so check if we should be visible.
      if (!this.$navigationMenu.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        setTimeout(function () {
          _this4._show(_this4.ANIMATION_TIME);
        }, this.INIT_BANNER_TIMEOUT);
      }
    }
    /**
     * On navigation close callback
     * @private
     */

  }, {
    key: "_onNavigationMenuClose",
    value: function _onNavigationMenuClose() {
      var _this5 = this;

      //The search is opened and closed from the navigation menu in mobile, so check if we should be visible.
      if (!this.$searchFull.hasClass(_Enums.default.CLASS.IS_ENABLED_STATE)) {
        setTimeout(function () {
          _this5._show(_this5.ANIMATION_TIME);
        }, this.INIT_BANNER_TIMEOUT);
      }
    }
    /**
     * Show the component
     * @private
     */

  }, {
    key: "_show",
    value: function _show(animationOverride) {
      var animationDuration = typeof animationOverride == 'number' ? animationOverride : _Enums.default.TIME.ERROR_BANNER_ANIMATION;

      this._onResize(animationDuration);

      this.$el.show();

      if (animationDuration != 0) {
        this.$el.addClass(this.CLASS_SLIDE_DOWN);
      }

      this.$window.on('resize', this._onResize);
    }
    /**
     * Hides the component
     * @param closeButtonClick true if X clicked
     * @private
     */

  }, {
    key: "_hide",
    value: function _hide(closeButtonClick) {
      this.$el.hide();

      if (closeButtonClick) {
        this.publish(_Enums.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, {
          margin: 0,
          element: this.$el
        });
      }

      this.publish(_Enums.default.EVENT.ON_ERROR_BANNER_RESIZE, {
        newHeight: 0
      });
      this.$window.off('resize', this._onResize);
    }
    /**
     * Adjust Banner Position
     * @private
     */

  }, {
    key: "_adjustBannerPosition",
    value: function _adjustBannerPosition(args) {
      var adjustFromTop = this.$errorBanner.height() + 'px';
      this.$el.css('top', adjustFromTop);

      if (this.BOOL_FLAG) {
        this._onResize();
      } else {
        this._initSiteBanner();
      }

      this.BOOL_FLAG = true;
    }
  }]);

  return MSiteBanner;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = MSiteBanner;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66,"./../../utils.js":113}],80:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MSiteSplash = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(MSiteSplash, _AppeaserComponentBas);

  var _super = _createSuper(MSiteSplash);

  /**
   * Constructor, will run before page loaded
   */
  function MSiteSplash() {
    var _this;

    _classCallCheck(this, MSiteSplash);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this._cacheDOMElements();

    _this.timestamp = +new Date();
    _this.storageData = JSON.parse(localStorage.getItem(_this.KEY_STORAGE)) || {
      lastView: _this.timestamp
    }; // check if we should show the site splash, if not just return and don't engage in overriding dom ready events

    if (_this.timestamp != _this.storageData.lastView && _this.timestamp < _this.storageData.lastView + _this.INTERVAL_SHOW_SITE_SPLASH * 1000) {
      _this.$el.remove();
    } else {
      _this._attachDOMListeners();

      _this.publish(_Enums.default.ACTION.HALT_DOMREADY_EVENTS, {});
    }

    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MSiteSplash, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(MSiteSplash.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_LOGO = '.a-logo';
      this.SELECTOR_PAGE_CONTENT = '.o-page-content';
      this.TIMER_FADE = 800;
      this.DELAY_SHOW_PAGE_CONTENT = 3000;
      this.INTERVAL_SHOW_SITE_SPLASH = 3600;
      this.KEY_STORAGE = 'site-splash';
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$document = $(document);
      this.$mainLogo = this.$el.find(this.SELECTOR_LOGO);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._logoFading = this._logoFading.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      var _this2 = this;

      $(function () {
        _this2._onDOMReady();
      });
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._attachSubscribers();

      this._logoFading();
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Logo is appearing on white background screen, and then everything disappears including white bg
     * @private
     */

  }, {
    key: "_logoFading",
    value: function _logoFading() {
      var _this3 = this;

      // make sure we hide page content
      $(this.SELECTOR_PAGE_CONTENT).hide(); // fade in logo

      this.$mainLogo.delay(this.TIMER_FADE).fadeIn(this.TIMER_FADE); // prep fade out

      setTimeout(function () {
        // show page content
        $(_this3.SELECTOR_PAGE_CONTENT).show(); // get scrollbar width to skip the left-hopping-logo

        var scrollBarWidth = window.innerWidth - $(document).width();

        _this3.$el.css('left', scrollBarWidth / 2); // fade out logo


        _this3.$el.fadeOut(_this3.TIMER_FADE); // force push the dom ready events again


        _this3.publish(_Enums.default.ACTION.RESUME_DOMREADY_EVENTS);
      }, this.DELAY_SHOW_PAGE_CONTENT);
      this.storageData.lastView = this.timestamp;
      localStorage.setItem(this.KEY_STORAGE, JSON.stringify(this.storageData));
    }
  }]);

  return MSiteSplash;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = MSiteSplash;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],81:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

var _Utils = require('./../../utils.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var MSplash = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(MSplash, _AppeaserComponentBas);

  var _super = _createSuper(MSplash);

  /**
   * Constructor, will run before page loaded
   */
  function MSplash() {
    var _this;

    _classCallCheck(this, MSplash);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(MSplash, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(MSplash.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_CLOSE = '.a-link';
      this.SELECTOR_PAGE_TO_HIDE = '.o-product-details, .cofs-page, .o-404-error';
      this.CLASS_SPLASH_HISTORY = 'splash-notification';
      this.CLASS_CLOSE = 'a-icon-lg-close-circle';
      this.FADE_ANIMATION_DELAY = 1000;
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$window = $(window);
      this.$closeElement = this.$el.find(this.SELECTOR_CLOSE);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onScroll = this._onScroll.bind(this);
      this._close = this._close.bind(this);
      this._setCookie = this._setCookie.bind(this);
      this._setVisibilityState = this._setVisibilityState.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_PAGE_CONTENT_REPLACED, this._setVisibilityState);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_PAGE_CONTENT_REPLACED, this._setVisibilityState);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$closeElement.on('click', this._close);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$closeElement.off('click', this._close);
      this.$window.off('scroll', this._onScroll);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._attachMQHandlers();

      this.visiblity = false;

      this._setVisibilityState();
    }
    /**
     * Attach media query handlers
     * @private
     */

  }, {
    key: "_attachMQHandlers",
    value: function _attachMQHandlers() {
      this.MQMobileHandler = {
        match: this._onMQMobileMatch.bind(this)
      };
      this.MQTabletAndDesktopHandler = {
        match: this._onDesktopMatch.bind(this)
      };
      enquire.register(_Enums.default.MQ.MOBILE_AND_TABLET_RANGE, this.MQMobileHandler);
      enquire.register(_Enums.default.MQ.IS_DESKTOP, this.MQTabletAndDesktopHandler);
    }
    /**
     * Detach media query handlers
     * @private
     */

  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {
      enquire.unregister(_Enums.default.MQ.MOBILE_AND_TABLET_RANGE, this.MQMobileHandler);
      enquire.unregister(_Enums.default.MQ.IS_DESKTOP, this.MQTabletAndDesktopHandler);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Checks if cookie is set and sets visibility
     * @private
     */

  }, {
    key: "_setVisibilityState",
    value: function _setVisibilityState() {
      var forceHide = $(this.SELECTOR_PAGE_TO_HIDE).length || _Utils.Stores.popupsDisabled();

      if (Cookies.get(this.CLASS_SPLASH_HISTORY) === 'viewed' || forceHide) {
        this.$el.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
        this.visiblity = true;
      } else if (!forceHide) {
        this.$el.addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
        this.visiblity = false;
      }
    }
    /**
     * Sets visibility in mobile
     * @private
     */

  }, {
    key: "_onMQMobileMatch",
    value: function _onMQMobileMatch() {
      this.$window.off('scroll', this._onScroll);

      this._setVisibilityState();

      if (this.$el.hasClass(_Enums.default.CLASS.IS_VISIBLE_STATE)) {
        this.$el.css('opacity', '1');
        this.visiblity = false;
      }
    }
    /**
     * Attach dome listeners on desktop only
     *
     * @private
     */

  }, {
    key: "_onDesktopMatch",
    value: function _onDesktopMatch() {
      this.$window.on('scroll', this._onScroll);

      this._setVisibilityState();
    }
    /**
     * Calulates days to expiration and sets cookie
     * @private
     */

  }, {
    key: "_setCookie",
    value: function _setCookie() {
      var daysToExpiration = this.$el.data('expires');

      if (daysToExpiration > 0) {
        Cookies.set(this.CLASS_SPLASH_HISTORY, 'viewed', {
          expires: daysToExpiration
        });
      } else {
        Cookies.set(this.CLASS_SPLASH_HISTORY, 'viewed', {
          expires: 7
        });
      }
    }
    /**
     * Closes the splash and sets cookie history
     * @param e
     * @private
     */

  }, {
    key: "_close",
    value: function _close(e) {
      if ($(e.target).hasClass(this.CLASS_CLOSE)) {
        e.preventDefault();
      }

      this.$el.remove();

      this._setCookie();

      this.publish(_Enums.default.ACTION.OPEN_NEWSLETTER_LIGHTBOX);
    }
    /**
     * Hide/Show (fade) splash on scroll
     * Works only with visible cookies notification (need this to avoid js work with closed cookies notifications)
     * @private
     */

  }, {
    key: "_onScroll",
    value: function _onScroll() {
      if (this.$el.hasClass(_Enums.default.CLASS.IS_VISIBLE_STATE)) {
        if (this.$window.scrollTop() > 0) {
          if (!this.visiblity) {
            this.$el.css('opacity', '1');
            this.visiblity = true;
          }
        } else if (this.visiblity) {
          this.$el.css('opacity', '0');
          this.visiblity = false;
        }
      }
    }
  }]);

  return MSplash;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = MSplash;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66,"./../../utils.js":113}],82:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _accordion = _interopRequireDefault(require('./../../../../js/base/accordion.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OAccordion = /*#__PURE__*/function (_Accordion) {
  _inherits(OAccordion, _Accordion);

  var _super = _createSuper(OAccordion);

  /**
   * Constructor, will run before page loaded
   */
  function OAccordion() {
    _classCallCheck(this, OAccordion);

    return _super.apply(this, arguments);
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OAccordion, [{
    key: "destroy",
    value: function destroy() {
      _get(_getPrototypeOf(OAccordion.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      _get(_getPrototypeOf(OAccordion.prototype), "_declareConstants", this).call(this);

      this.SELECTOR_ACCORDION_CONTENT = '.accordion-content';
      this.SELECTOR_ACCORDION = '.o-accordion';
      this.SELECTOR_ACCORDION_HEADER = '.accordion-header';
      this.SELECTOR_READ_MORE_CONTENT = '.read-more-content';
      this.SELECTOR_READ_MORE_HEADER = '.read-more-header';
      this.SELECTOR_IS_OPEN = 'is-open';
      this.SLIDE_DELAY_TIME = 400;
      this.SLIDE_DELAY_TIME_DYNAMIC_CONTENT = 2500;
    }
    /**
     * Caching DOM elements for performance
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$accordionContent = this.$el.find(this.SELECTOR_ACCORDION_CONTENT);
      this.$accordion = this.$el.find(this.SELECTOR_ACCORDION_HEADER);
      this.$readMoreHeader = this.$el.find(this.SELECTOR_READ_MORE_HEADER);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      this._cacheDOMElements();

      _get(_getPrototypeOf(OAccordion.prototype), "_onDOMReady", this).call(this);
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$accordion.on('click', this._onClickLink);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$accordion.off('click', this._onClickLink);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Show only one accordion at the time
     * @param event
     * @private
     */

  }, {
    key: "_onClickLink",
    value: function _onClickLink(event) {
      var _this = this;

      event.preventDefault();

      if ($(event.currentTarget).hasClass('read-more-header')) {
        if ($(this.SELECTOR_READ_MORE_CONTENT).is(':hidden')) {
          $(this.SELECTOR_READ_MORE_CONTENT).stop().slideDown(this.SLIDE_DELAY_TIME_DYNAMIC_CONTENT);
          this.$readMoreHeader.addClass(this.SELECTOR_IS_OPEN);
        } else {
          $(this.SELECTOR_READ_MORE_CONTENT).stop().slideUp(this.SLIDE_DELAY_TIME);
          this.$readMoreHeader.removeClass(this.SELECTOR_IS_OPEN);
        }
      } else {
        if (this.$el.hasClass(_Enums.default.CLASS.IS_DISABLED_STATE)) return;

        if (this.isExclusive) {
          var $otherExclusives = this.$exclusiveGroup.not(this.$el);
          $otherExclusives.find(this.SELECTOR_ACCORDION_CONTENT + ':visible').slideUp(this.SLIDE_DELAY_TIME, function () {
            $otherExclusives.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
          });
        }

        if (this.$accordionContent.is(':hidden')) {
          this.$el.addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
          this.$accordionContent.stop().slideDown(this.SLIDE_DELAY_TIME);
        } else {
          this.$accordionContent.stop().slideUp(this.SLIDE_DELAY_TIME, function () {
            _this.$el.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
          });
        }
      }
    }
  }]);

  return OAccordion;
}(_accordion.default); // Export this so we can pick it up and import in main.js


module.exports = OAccordion;

},{"./../../../../js/base/accordion.js":46,"./../../enums.js":66}],83:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OAvailability = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OAvailability, _AppeaserComponentBas);

  var _super = _createSuper(OAvailability);

  /**
   * Constructor, will run before page loaded
   */
  function OAvailability() {
    var _this;

    _classCallCheck(this, OAvailability);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OAvailability, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OAvailability.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.LOCALSTORAGE_ITEM = 'favoriteStore';
      this.SELECTOR_INSTORE_LABEL = '.instore-label';
      this.SELECTOR_STORES_ITEM = '.m-availability-store';
      this.SELECTOR_TOOLTIP = '.a-tooltip';
      this.SELECTER_AVAILABILITY_LABEL = '.availability-label';
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$body = $('html, body');
      this.$instoreLabel = this.$el.find(this.SELECTOR_INSTORE_LABEL);
      this.$stores = this.$instoreLabel.siblings(this.SELECTOR_TOOLTIP).find(this.SELECTOR_STORES_ITEM);
      this.$availabilityLabel = this.$el.find(this.SELECTER_AVAILABILITY_LABEL);
      this.$toolTips = this.$el.find(this.SELECTOR_TOOLTIP);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._setFavoriteStore = this._setFavoriteStore.bind(this);
      this._showTooltip = this._showTooltip.bind(this);
      this._closeTooltip = this._closeTooltip.bind(this);
      this._onProductAvailabilityUpdated = this._onProductAvailabilityUpdated.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_SAVE_FAVORITE, this._setFavoriteStore);
      this.subscribe(_Enums.default.EVENT.ON_PRODUCT_AVAILABILITY_UPDATED, this._onProductAvailabilityUpdated);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_SAVE_FAVORITE, this._setFavoriteStore);
      this.unsubscribe(_Enums.default.EVENT.ON_PRODUCT_AVAILABILITY_UPDATED, this._onProductAvailabilityUpdated);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$availabilityLabel.on('click', this._showTooltip);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$availabilityLabel.off('click', this._showTooltip);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this.stockStatusClass = '';

      this._setFavoriteStore();
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Updates the $stores variable.
     */

  }, {
    key: "_onProductAvailabilityUpdated",
    value: function _onProductAvailabilityUpdated() {
      this.$stores = this.$instoreLabel.siblings(this.SELECTOR_TOOLTIP).find(this.SELECTOR_STORES_ITEM);
    }
    /**
     * @param options - not mandatory
     * @private
     */

  }, {
    key: "_setFavoriteStore",
    value: function _setFavoriteStore() {
      var localItem = localStorage.getItem(this.LOCALSTORAGE_ITEM);
      var element = this.$instoreLabel;

      if (!this.$stores.length) {
        element.removeClass = this.stockStatusClass;
        return;
      } else if (localItem) {
        $.each(this.$stores, function () {
          if ($(this).attr('data-store-id') == localItem) {
            var stockStatusClass = $(this).attr('data-status');
            this.stockStatusClass = stockStatusClass;
            element.addClass(stockStatusClass);
          } else {
            element.removeClass($(this).attr('data-status'));
          }
        });
      }
    }
  }, {
    key: "_showTooltip",
    value: function _showTooltip(e) {
      e.stopPropagation();
      var $currentToolTip = $(e.currentTarget).siblings(this.SELECTOR_TOOLTIP);

      if ($currentToolTip.hasClass(_Enums.default.CLASS.IS_VISIBLE_STATE)) {
        $currentToolTip.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
      } else {
        this.$toolTips.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
        $currentToolTip.addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
      }

      this.$body.on('click', this._closeTooltip);
    }
  }, {
    key: "_closeTooltip",
    value: function _closeTooltip(e) {
      this.$toolTips.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
      this.$body.off('click', this._closeTooltip);
    }
  }]);

  return OAvailability;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OAvailability;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],84:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

var _Utils = _interopRequireDefault(require('./../../utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OCartItem = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OCartItem, _AppeaserComponentBas);

  var _super = _createSuper(OCartItem);

  /**
   * Constructor, will run before page loaded
   */
  function OCartItem() {
    var _this;

    _classCallCheck(this, OCartItem);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OCartItem, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OCartItem.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_SUBTRACT = '.quantity-label';
      this.SELECTOR_ADD = '.a-icon-arrow-down-small';
      this.SELECTOR_PLACEHOLDER = '.m-dropdown .placeholder span';
      this.SELECTOR_INPUT = '.m-dropdown .js-input';
      this.SELECTOR_REMOVE = '.remove'; //CLASSES

      this.CLASS_LAST_ITEM = 'last-item';
      this.CLASS_HAS_MULTIPLE_QUANTITY = 'has-multiple-quantity';
      this.CLASS_MAX_QUANTITY = 'has-max-quantity';
      this.CLASS_SUBTRACT = 'quantity-label';
      this.CLASS_ADD = 'a-icon-arrow-down-small';
      this.MAX_ITEM_IN_BAG = 20;
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$subtract = this.$el.find(this.SELECTOR_SUBTRACT);
      this.$add = this.$el.find(this.SELECTOR_ADD);
      this.$qtyLabel = this.$el.find(this.SELECTOR_PLACEHOLDER);
      this.$input = this.$el.find(this.SELECTOR_INPUT);
      this.$lastItem = this.$el.find(this.CLASS_LAST_ITEM);
      this.$removeItem = this.$el.find(this.SELECTOR_REMOVE);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onAddClick = this._onAddClick.bind(this);
      this._onSubtractClick = this._onSubtractClick.bind(this);
      this._onKeyDown = this._onKeyDown.bind(this);
      this._onKeyUp = this._onKeyUp.bind(this);
      this._lastItemCheck = this._lastItemCheck.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.$el.on('keydown', this._onKeyDown);
      this.$el.on('keyup', this._onKeyUp);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.$el.off('keydown', this._onKeyDown);
      this.$el.off('keyup', this._onKeyUp);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$add.on('click', this._onAddClick);
      this.$subtract.on('click', this._onSubtractClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$add.off('click', this._onAddClick);
      this.$subtract.off('click', this._onSubtractClick);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      _Utils.default.Accessibility.allowFocus(this.$subtract);

      _Utils.default.Accessibility.allowFocus(this.$add);

      _Utils.default.Accessibility.preventFocus(this.$qtyLabel.parent());

      this.itemCount = parseInt(this.$qtyLabel.html());

      this._lastItemCheck();
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Adds an item to cart
     * @private
     */

  }, {
    key: "_onAddClick",
    value: function _onAddClick() {
      this.itemCount++;

      if (this.itemCount > 1) {
        if (this.itemCount === this.MAX_ITEM_IN_BAG) {
          this.$add.addClass(this.CLASS_MAX_QUANTITY);
        }

        this.$subtract.removeClass(this.CLASS_LAST_ITEM);
        this.$el.addClass(this.CLASS_HAS_MULTIPLE_QUANTITY);
        this.$input.val(this.itemCount.toString()).trigger('change');
      }
    }
    /**
     * Subtracts an item from cart
     * @private
     */

  }, {
    key: "_onSubtractClick",
    value: function _onSubtractClick() {
      if (this.itemCount === this.MAX_ITEM_IN_BAG) {
        this.$add.removeClass(this.CLASS_MAX_QUANTITY);
      }

      if (!this.$subtract.hasClass(this.CLASS_LAST_ITEM)) {
        this.itemCount--;
      }

      this._lastItemCheck();

      this.$qtyLabel.html(this.itemCount.toString());
      this.$input.val(this.itemCount.toString()).trigger('change');

      if (this.$subtract.hasClass(this.CLASS_LAST_ITEM)) {
        this._onRemoveItem();
      }
    }
    /**
     * Ads a class if only 1 item left
     * @private
     */

  }, {
    key: "_lastItemCheck",
    value: function _lastItemCheck() {
      if (this.itemCount == 1) {
        this.$subtract.addClass(this.CLASS_LAST_ITEM);
        this.$el.removeClass(this.CLASS_HAS_MULTIPLE_QUANTITY);
      }
    }
    /**
     * remove item in the cart page
     * @private
     */

  }, {
    key: "_onRemoveItem",
    value: function _onRemoveItem() {
      this.$removeItem.trigger('click');
    }
  }, {
    key: "_onKeyDown",
    value: function _onKeyDown(event) {
      if (event.key.match(_Enums.default.KEYSTROKE.ENTER)) {
        if ($(event.target).hasClass(this.CLASS_SUBTRACT)) {
          this.$subtract.click();
        }
      }
    }
  }, {
    key: "_onKeyUp",
    value: function _onKeyUp(event) {
      if (event.key.match(_Enums.default.KEYSTROKE.ENTER)) {
        if ($(event.target).hasClass(this.CLASS_ADD)) {
          this.$add.click();
        }
      }
    }
  }]);

  return OCartItem;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OCartItem;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66,"./../../utils.js":113}],85:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _index = _interopRequireDefault(require("common/organisms/o-checkout/index"));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OCheckoutTheme = /*#__PURE__*/function (_OCheckout) {
  _inherits(OCheckoutTheme, _OCheckout);

  var _super = _createSuper(OCheckoutTheme);

  /**
   * Constructor, will run before page loaded
   */
  function OCheckoutTheme() {
    _classCallCheck(this, OCheckoutTheme);

    return _super.apply(this, arguments);
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OCheckoutTheme, [{
    key: "destroy",
    value: function destroy() {
      _get(_getPrototypeOf(OCheckoutTheme.prototype), "destroy", this).call(this);
    }
    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_HEADER = '.o-header';
      this.SELECTOR_CHECKOUT_LOGIN = '.o-checkout-login';
      this.SELECTOR_LOGIN_OPTIONS = '.m-tablist';
      this.SELECTOR_LOGIN_OPTION = '.m-tablist li';
      this.SELECTOR_LOGIN_CONTAINER = '.tablist-content';
      this.SELECTOR_HOME_DELIVERY = '.o-home-delivery';
      this.SELECTOR_ADD_ADDRESS_BUTTON = '.o-address-box-add .o-add-element-button';
      this.SELECTOR_ADD_ADDRESS = '.o-address-box-add';
      this.SELECTOR_CLOSE_ADDRESS_FORM = '.o-home-delivery .delivery-change-address-section .a-button.is-secondary';
      this.SELECTOR_CHECKOUT_DELIVERY = '.o-delivery';
      this.SELECTOR_DELIVERY_OPTIONS = '.delivery-option .a-radio-button';
      this.SELECTOR_DELIVERY_CONTAINER = '.selector-content';
      this.SELECTOR_CHECKOUT_PAYMENT = '.o-payment-checkout .o-form';
      this.SELECTOR_CARD_PAYMENTS = '.card-selection-section';
      this.SELECTOR_PAYMENT_OPTION = '.card-option';
      this.SELECTOR_ADD_CARD = '.add-card-option';
      this.SELECTOR_NEW_CARD = '.new-card-section';
      this.SELECTOR_NUMBER_INPUT = '.m-input.cvv .a-input, .m-input.expire-date-month .a-input, .m-input.expire-date-year .a-input, .m-input.new-card-number .a-input';
      this.SELECTOR_TELEPHONE_INPUT = '.m-input.delivery-phone .a-input';
      this.SELECTOR_LOW_STOCK = '.low-stock';
      this.SELECTOR_CART_ITEM = '.o-cart-item';

      _get(_getPrototypeOf(OCheckoutTheme.prototype), "_declareConstants", this).call(this);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _get(_getPrototypeOf(OCheckoutTheme.prototype), "_onDOMReady", this).call(this);

      this.$numberInput.prop('type', 'tel');
      this.$telephoneInput.prop('type', 'tel');

      this._setPositionlowinstock();
    }
    /**
     * Caching DOM elements for performance
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$body = $('html,body');
      this.$header = this.$body.find(this.SELECTOR_HEADER);
      this.$checkoutLogin = this.$el.find(this.SELECTOR_CHECKOUT_LOGIN);
      this.$checkoutLoginOptions = this.$checkoutLogin.find(this.SELECTOR_LOGIN_OPTIONS);
      this.$checkoutLoginOption = this.$checkoutLogin.find(this.SELECTOR_LOGIN_OPTION);
      this.$checkoutLoginContainer = this.$checkoutLogin.find(this.SELECTOR_LOGIN_CONTAINER);
      this.$ODelivery = this.$el.find(this.SELECTOR_CHECKOUT_DELIVERY);
      this.$deliveryOption = this.$ODelivery.find(this.SELECTOR_DELIVERY_OPTIONS);
      this.$deliveryContainer = this.$ODelivery.find(this.SELECTOR_DELIVERY_CONTAINER);
      this.$oHomeDelivery = this.$el.find(this.SELECTOR_HOME_DELIVERY);
      this.$closeAddressFormBtn = this.$el.find(this.SELECTOR_CLOSE_ADDRESS_FORM);
      this.$checkoutPayment = this.$el.find(this.SELECTOR_CHECKOUT_PAYMENT);
      this.$paymentOptions = this.$checkoutPayment.children(this.SELECTOR_PAYMENT_OPTION);
      this.$cardPaymentOption = this.$checkoutPayment.find(this.SELECTOR_CARD_PAYMENTS + ' ' + this.SELECTOR_PAYMENT_OPTION);
      this.$addCardOption = this.$checkoutPayment.find(this.SELECTOR_ADD_CARD);
      this.$newCardSection = this.$checkoutPayment.find(this.SELECTOR_NEW_CARD);
      this.$numberInput = this.$el.find(this.SELECTOR_NUMBER_INPUT);
      this.$telephoneInput = this.$el.find(this.SELECTOR_TELEPHONE_INPUT);
      this.$cartitem = this.$el.find(this.SELECTOR_CART_ITEM);
      this.$lowstock = this.$el.find(this.SELECTOR_LOW_STOCK);

      _get(_getPrototypeOf(OCheckoutTheme.prototype), "_cacheDOMElements", this).call(this);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._scroll = this._scroll.bind(this);
      this._onDeliveryOptionClick = this._onDeliveryOptionClick.bind(this);
      this._onLoginOptionClick = this._onLoginOptionClick.bind(this);
      this._onPaymentOptionClick = this._onPaymentOptionClick.bind(this);
      this._getScrollToPosition = this._getScrollToPosition.bind(this);
      this._onCardOptionClick = this._onCardOptionClick.bind(this);
      this._onAddCardClick = this._onAddCardClick.bind(this);
      this._onNewAddressClick = this._onNewAddressClick.bind(this);
      this._onDeliveryAddressEditClose = this._onDeliveryAddressEditClose.bind(this);
      this._setPositionlowinstock = this._setPositionlowinstock.bind(this);

      _get(_getPrototypeOf(OCheckoutTheme.prototype), "_jQueryScopeBinding", this).call(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _get(_getPrototypeOf(OCheckoutTheme.prototype), "_attachSubscribers", this).call(this);

      this.subscribe(_Enums.default.EVENT.ON_NEW_DELIVERY_ADDRESS_SAVED, this._onDeliveryAddressEditClose);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _get(_getPrototypeOf(OCheckoutTheme.prototype), "_detachSubscribers", this).call(this);

      this.unsubscribe(_Enums.default.EVENT.ON_NEW_DELIVERY_ADDRESS_SAVED, this._onDeliveryAddressEditClose);
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$deliveryOption.on('change', this._onDeliveryOptionClick);
      this.$checkoutLoginOption.on('click', this._onLoginOptionClick);
      this.$paymentOptions.on('click', this._onPaymentOptionClick);
      this.$cardPaymentOption.on('click', this._onCardOptionClick);
      this.$addCardOption.on('click', this._onAddCardClick);
      this.$oHomeDelivery.on('change', this.SELECTOR_ADD_ADDRESS_BUTTON, this._onNewAddressClick);
      this.$closeAddressFormBtn.on('click', this._onDeliveryAddressEditClose);

      _get(_getPrototypeOf(OCheckoutTheme.prototype), "_attachDOMListeners", this).call(this);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$deliveryOption.off('change', this._onDeliveryOptionClick);
      this.$checkoutLoginOption.off('click', this._onLoginOptionClick);
      this.$paymentOptions.off('click', this._onPaymentOptionClick);
      this.$cardPaymentOption.off('click', this._onCardOptionClick);
      this.$addCardOption.off('click', this._onAddCardClick);
      this.$oHomeDelivery.off('change', this.SELECTOR_ADD_ADDRESS_BUTTON, this._onNewAddressClick);
      this.$closeAddressFormBtn.off('click', this._onDeliveryAddressEditClose);

      _get(_getPrototypeOf(OCheckoutTheme.prototype), "_detachDOMListeners", this).call(this);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     *
     * @param scrollPosition
     * @param onlyMobile
     * @returns {boolean}
     * @private
     */

  }, {
    key: "_scroll",
    value: function _scroll(scrollPosition, onlyMobile) {
      var offset = this.$header.outerHeight() + 5;

      if (onlyMobile) {
        if (Modernizr.mq(_Enums.default.MQ.IS_MOBILE)) {
          this.$body.animate({
            scrollTop: scrollPosition - offset
          }, this.SCROLL_DURATION);
        }
      } else {
        this.$body.animate({
          scrollTop: scrollPosition - offset
        }, this.SCROLL_DURATION);
      }
    }
    /**
     * Overrides parent
     * @private
     */

  }, {
    key: "_onSectionCompleted",
    value: function _onSectionCompleted() {
      var $activeSection = this.$el.find(this.SELECTOR_ACTIVE_SECTION),
          $nextSection = $activeSection.next();
      $activeSection.addClass(_Enums.default.CLASS.IS_CLOSED_STATE);
      $nextSection.removeClass(_Enums.default.CLASS.IS_DISABLED_STATE);

      if (Modernizr.mq(_Enums.default.MQ.IS_MOBILE)) {
        this.$body.scrollTop(0);

        this._scroll($activeSection.offset().top);
      } else {
        this.$body.scrollTop(0);
      }
    }
  }, {
    key: "_onDeliveryAddressEditClose",
    value: function _onDeliveryAddressEditClose() {
      this._scroll(this._getScrollToPosition(this.$deliveryContainer, false), false);
    }
    /**
     * _onNewAddressClick calling scroll function
     * @private
     */

  }, {
    key: "_onNewAddressClick",
    value: function _onNewAddressClick(e) {
      var $target = $(e.currentTarget);

      this._scroll(this._getScrollToPosition($target.closest(this.SELECTOR_ADD_ADDRESS), true, true), false);
    }
    /**
     * _onDeliveryOptionClick calling scroll function
     * @private
     */

  }, {
    key: "_onDeliveryOptionClick",
    value: function _onDeliveryOptionClick() {
      if (this.$deliveryContainer.length > 0) {
        this._scroll(this._getScrollToPosition(this.$deliveryContainer, false), false);
      }
    }
    /**
     * _onLoginOptionClick calling scroll function but last login option is still visible
     * Last button must be visible regarding requirements of task PIIFED-771
     * @private
     */

  }, {
    key: "_onLoginOptionClick",
    value: function _onLoginOptionClick() {
      if (this.$checkoutLoginContainer.length > 0) {
        var loginContainerBottomMargin = parseInt(this.$checkoutLoginOptions.css('marginBottom'));
        var optionButtonHeight = this.$checkoutLoginOption.outerHeight();
        var scrollMinus = loginContainerBottomMargin + optionButtonHeight / 3;

        this._scroll(this._getScrollToPosition(this.$checkoutLoginContainer, false) - scrollMinus, true);
      }
    }
    /**
     * _onPaymentOptionClick calling scroll function
     * @private
     */

  }, {
    key: "_onPaymentOptionClick",
    value: function _onPaymentOptionClick() {
      this._scroll(this._getScrollToPosition(this.$paymentOptions, true, false), false);
    }
    /**
     * _onCardOptionClick calling scroll function
     * @private
     */

  }, {
    key: "_onCardOptionClick",
    value: function _onCardOptionClick() {
      this._scroll(this._getScrollToPosition(this.$addCardOption, true, false), true);
    }
    /**
     * _onAddCardClick calling scroll function
     * @private
     */

  }, {
    key: "_onAddCardClick",
    value: function _onAddCardClick() {
      this._scroll(this._getScrollToPosition(this.$addCardOption, true, true), true);
    }
    /**
     * _getScrollToPosition calling scroll function
     * @private
     */

  }, {
    key: "_getScrollToPosition",
    value: function _getScrollToPosition(container, bottomPosition, includeMargin) {
      return container.offset().top + (bottomPosition ? container.outerHeight(includeMargin) : 0);
    }
    /**
     * _setPositionlowinstock calling set position of low in stock
     * @private
     */

  }, {
    key: "_setPositionlowinstock",
    value: function _setPositionlowinstock() {
      if (this.$cartitem.find(this.$lowstock)) {
        this.$lowstock.closest(this.SELECTOR_CART_ITEM).css('padding-bottom', '20px');
      }
    }
  }]);

  return OCheckoutTheme;
}(_index.default); // Export this so we can pick it up and import in main.js


module.exports = OCheckoutTheme;

},{"./../../enums.js":66,"common/organisms/o-checkout/index":21}],86:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OChooser = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OChooser, _AppeaserComponentBas);

  var _super = _createSuper(OChooser);

  /**
   * Constructor, will run before page loaded
   */
  function OChooser() {
    var _this;

    _classCallCheck(this, OChooser);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OChooser, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      this._detachMQHandlers();

      _get(_getPrototypeOf(OChooser.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_ITEM = '.m-chooser-item';
      this.SELECTOR_ITEM_CONTAINER = '.item-container';
      this.SELECTOR_ITEM_LINK = '.a-link';
      this.SELECTOR_HANDLEBARS_TEMPLATE = '#chooser-item';
      this.SELECTOR_DATA_CHOOSER_ITEM = '[data-chooser]';
      this.CLASS_MOBILE_OVERFLOW = 'mobile-overflow';
      this.CLASS_WITH_IMAGE = 'with-image';
      this.CLASS_FULL_WIDTH = 'full-width';
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$itemContainer = this.$el.find(this.SELECTOR_ITEM_CONTAINER);
      this.$item = this.$itemContainer.find(this.SELECTOR_ITEM);
      this.$itemLink = this.$item.find(this.SELECTOR_ITEM_LINK);
      this.$window = $(window);
      this.$body = $('html,body');
      this.$chooserItems = this.$body.find(this.SELECTOR_DATA_CHOOSER_ITEM);
      this.$handlebarTemplate = $(this.SELECTOR_HANDLEBARS_TEMPLATE).html();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._setItemContainerWidth = this._setItemContainerWidth.bind(this);
      this._unmatchContainerWidth = this._unmatchContainerWidth.bind(this);
      this._animateScroll = this._animateScroll.bind(this);
      this._findChooserLabels = this._findChooserLabels.bind(this);
      this._adjustingItemsWidth = this._adjustingItemsWidth.bind(this);
      this._checkIncomingHash = this._checkIncomingHash.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_FILTER_VISIBILITY_CHANGED, this._adjustingItemsWidth);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FILTER_VISIBILITY_CHANGED, this._adjustingItemsWidth);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$itemLink.on('click', this._animateScroll);
      this.$window.on('hashchange', this._checkIncomingHash);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$itemLink.off('click', this._animateScroll);
    }
  }, {
    key: "_attachMQHandlers",
    value: function _attachMQHandlers() {
      this.MQMobileHandler = {
        deferSetup: true,
        match: this._setItemContainerWidth,
        unmatch: this._unmatchContainerWidth
      };
      enquire.register(_Enums.default.MQ.IS_MOBILE, this.MQMobileHandler);
    }
  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {
      enquire.unregister(_Enums.default.MQ.IS_MOBILE, this.MQMobileHandler);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._findChooserLabels();

      this._attachSubscribers();

      this._attachMQHandlers();

      this._attachDOMListeners();

      this._checkIncomingHash();
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_checkIncomingHash",
    value: function _checkIncomingHash() {
      var _this2 = this;

      if (location.hash !== '' && $(location.hash).length) {
        setTimeout(function () {
          _this2.$body.scrollTop($(location.hash).offset().top - 100);
        }, 1);
      }
    }
    /**
     * @param options - not mandatory
     * @private
     */

  }, {
    key: "_setItemContainerWidth",
    value: function _setItemContainerWidth() {
      if (this.$el.hasClass(this.CLASS_WITH_IMAGE)) {
        this.chooserElementWidth = this.$item.outerWidth();
        this.chooserContainerWidth = this.chooserElementWidth * this.$item.length;

        this._adjustingItemsWidth();

        $(window).on('resize', this._adjustingItemsWidth);
      }

      if (this.$item.length > 3) {
        this.$el.addClass(this.CLASS_FULL_WIDTH);
      }
    }
  }, {
    key: "_unmatchContainerWidth",
    value: function _unmatchContainerWidth() {
      if (this.$el.hasClass(this.CLASS_WITH_IMAGE)) {
        this.$itemContainer.removeClass(this.CLASS_MOBILE_OVERFLOW);
        $(window).off('resize', this._adjustingItemsWidth);
      }
    }
  }, {
    key: "_animateScroll",
    value: function _animateScroll(e) {
      var id = $(e.currentTarget).attr('href');

      if ($(id).offset()) {
        this.$body.animate({
          scrollTop: $(id).offset().top - 100
        }, 500);
        return false;
      }
    }
  }, {
    key: "_findChooserLabels",
    value: function _findChooserLabels() {
      var itemType = this.$el.attr('data-type'),
          items = [],
          template = Handlebars.compile(this.$handlebarTemplate),
          result;
      $.each(this.$chooserItems, function (i, item) {
        if ($(item).attr('data-chooser')) {
          items.push({
            type: itemType,
            id: '#' + $(item).attr('id'),
            anchorTitle: $(item).attr('data-chooser-title'),
            imageLink: $(item).attr('data-chooser-image'),
            imageAlt: $(item).attr('data-chooser-image-alt')
          });
        }
      });
      result = template({
        content: items
      });
      this.$itemContainer.html(result);

      this._cacheDOMElements();
    }
    /**
     * Calculating overflowed items, and change the width of elements, so next element is always visible to user
     * @private
     */

  }, {
    key: "_adjustingItemsWidth",
    value: function _adjustingItemsWidth() {
      var chooserWrapperWidth = this.$el.outerWidth(true);

      if (chooserWrapperWidth < this.chooserContainerWidth) {
        var numberOfElements = parseInt(chooserWrapperWidth / this.chooserElementWidth) + 0.5,
            newWidth = Math.floor(chooserWrapperWidth / numberOfElements);
        this.$itemContainer.addClass(this.CLASS_MOBILE_OVERFLOW);
        this.$item.css('width', newWidth + 'px');
      } else {
        this.$itemContainer.removeClass(this.CLASS_MOBILE_OVERFLOW);
        this.$item.css('width', '');
      }
    }
  }]);

  return OChooser;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OChooser;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],87:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

var _Utils = _interopRequireDefault(require('./../../utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OFilterColor = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OFilterColor, _AppeaserComponentBas);

  var _super = _createSuper(OFilterColor);

  /**
   * Constructor, will run before page loaded
   */
  function OFilterColor() {
    var _this;

    _classCallCheck(this, OFilterColor);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();

    _this._jQueryScopeBinding();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OFilterColor, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      this._detachMQHandlers();

      _get(_getPrototypeOf(OFilterColor.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_FILTER_COLOR_HBS = '#o-filter-color-hbs';
      this.SELECTOR_COLOR_LIST_TEMPLATE = '#color-list';
      this.SELECTOR_FILTER_OPTION = '.filter-option';
      this.SELECTOR_ROOT = '.o-filter-color';
      this.SELECTOR_COLOR_FILTER = '.color-filter';
      this.SELECTOR_BLOCK = '.filter-wheel';
      this.SELECTOR_TABLIST_CONTENT = '.tablist-content';
      this.SELECTOR_COLOR_NAME = '.color-name';
      this.SELECTOR_COLOR_PALETTE = '.color-palette';
      this.SELECTOR_A_CHECKBOX = '.a-checkbox';
      this.START_ANGLE = 0;
      this.END_ANGLE = 0;
      this.STROKE_COLOR = '#000';
      this.HOVER_FILL_COLOR = '#fff';
      this.STROKE_WIDTH = 2;
      this.PIE_SLICE_SIZE = 1; // Makes the slices the same size

      this.CANVAS_WIDTH = 230;
      this.CANVAS_HEIGHT = 230;
      this.CANVAS_RETINA_WIDTH = this.CANVAS_WIDTH * 2;
      this.CANVAS_RETINA_HEIGHT = this.CANVAS_HEIGHT * 2;
      this.CURRENT_SLICE = {};
      this.SELECTED_SLICES = {};
      this.IS_TRANSITIONING = false;
      this.IS_HIGHLIGHTED = 'is-highlighted';
      this.CLASS_COLOR_PALETTE = 'color-palette';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._checkDevicePixelRatio();
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$tablistContent = this.$el.closest(this.SELECTOR_TABLIST_CONTENT);
      this.$filterColorTemplate = $(this.SELECTOR_FILTER_COLOR_HBS);
      this.$colorListTemplate = $(this.SELECTOR_COLOR_LIST_TEMPLATE);
      this.$colorPalette = $(this.SELECTOR_COLOR_PALETTE);
      this.isProductionCheckbox = this.$colorPalette.find(this.SELECTOR_A_CHECKBOX).data('filter');
      this.$canvas = this.$el;
      this.$canvasHint = this.$el.next();
      this.canvas = this.$canvas[0];
      this.canvas.width = this.CANVAS_WIDTH;
      this.canvas.height = this.CANVAS_HEIGHT;
      this.canvas.style.width = this.CANVAS_WIDTH + 'px';
      this.canvas.style.height = this.CANVAS_HEIGHT + 'px';
      this.canvasHint = this.$canvasHint[0];
      this.canvasHint.width = this.CANVAS_WIDTH;
      this.canvasHint.height = this.CANVAS_HEIGHT;
      this.canvasHint.style.width = this.CANVAS_WIDTH + 'px';
      this.canvasHint.style.height = this.CANVAS_HEIGHT + 'px';
      this.cWidth = this.CANVAS_WIDTH;
      this.cHeight = this.CANVAS_HEIGHT;
      this.radius = this.cHeight / 2;
      this.hoverMarkerRadius = this.radius * 0.75;
      this.ctx = this.canvas.getContext('2d');
      this.ctxHint = this.canvasHint.getContext('2d');
      this.$parentBlock = this.$el.closest(this.SELECTOR_BLOCK);
      this.$colorName = this.$el.closest(this.SELECTOR_ROOT).find(this.SELECTOR_COLOR_NAME); //initiate PREVIOUS_COLOR_SLICES with same value as COLOR_SLICES as there shouldn't be any start transition.

      this.PREVIOUS_COLOR_SLICES = this.$el.data('facets');
      this.COLOR_SLICES = this.$el.data('facets');
      this.FILTER_TYPE = this.$el.data('type');
      this.TOTAL_COLORS = this.COLOR_SLICES.length;
      this.SELECTED_SLICE = {};
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onClick = this._onClick.bind(this);
      this._onMouseMove = this._onMouseMove.bind(this);
      this._onMouseLeave = this._onMouseLeave.bind(this);
      this._onDOMReady = this._onDOMReady.bind(this);
      this._drawColorDots = this._drawColorDots.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady);
      this.subscribe(_Enums.default.EVENT.ON_SHOW_FILTER_COLORS, this._refreshFilter);
      this.subscribe(_Enums.default.EVENT.ON_COLOR_SELECT, this._onSelectColorAdded);
      this.subscribe(_Enums.default.EVENT.ON_COLOR_DESELECT, this._onSelectColorRemoved);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady);
      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady);
      this.unsubscribe(_Enums.default.EVENT.ON_SHOW_FILTER_COLORS, this._refreshFilter);
      this.unsubscribe(_Enums.default.EVENT.ON_COLOR_SELECT, this._onSelectColorAdded);
      this.unsubscribe(_Enums.default.EVENT.ON_COLOR_DESELECT, this._onSelectColorRemoved);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {
      this._attachMQHandlers();
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.canvas.addEventListener('mousemove', this._onMouseMove);
      this.canvas.addEventListener('mouseleave', this._onMouseLeave);
      this.canvas.addEventListener('click', this._onClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
  }, {
    key: "_attachMQHandlers",
    value: function _attachMQHandlers() {}
  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {}
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_checkDevicePixelRatio",
    value: function _checkDevicePixelRatio() {
      var isRetina = window.devicePixelRatio > 1;
      this.canvas.width = isRetina ? this.CANVAS_RETINA_WIDTH : this.CANVAS_WIDTH;
      this.canvas.height = isRetina ? this.CANVAS_RETINA_HEIGHT : this.CANVAS_HEIGHT;
      this.canvas.style.width = isRetina ? this.CANVAS_WIDTH + 'px' : '';
      this.canvas.style.height = isRetina ? this.CANVAS_HEIGHT + 'px' : '';
      this.canvasHint.width = isRetina ? this.CANVAS_RETINA_WIDTH : this.CANVAS_WIDTH;
      this.canvasHint.height = isRetina ? this.CANVAS_RETINA_HEIGHT : this.CANVAS_HEIGHT;
      this.canvasHint.style.width = isRetina ? this.CANVAS_WIDTH + 'px' : '';
      this.canvasHint.style.height = isRetina ? this.CANVAS_HEIGHT + 'px' : '';
      isRetina ? this.ctx.scale(2, 2) : this.ctx.scale(1, 1);
      isRetina ? this.ctxHint.scale(2, 2) : this.ctxHint.scale(1, 1);
    }
    /**
     * Fetches and compiles handlebar templates
     * @param template
     * @param templateData (data to be sent to the template)
     * @returns {string}
     * @private
     */

  }, {
    key: "_compileHandlebars",
    value: function _compileHandlebars($template, templateData) {
      if ($template.length > 0) {
        return Handlebars.compile($template.html())(templateData || {});
      }

      return '';
    }
    /**
     * Draws the "outer" circle border
     * @private
     */

  }, {
    key: "_drawColors",
    value: function _drawColors(transition) {
      if (transition) {
        this._transitionColorSlices();
      } else {
        this._drawColorSlices();
      }
    }
    /**
     * Generate color dots
     * @private
     */

  }, {
    key: "_drawColorDots",
    value: function _drawColorDots() {
      var _this2 = this;

      if (!this.isProductionCheckbox) {
        this.$colorPalette.html('');
        $.each(this.COLOR_SLICES, function (i, c) {
          if (c.selected) {
            c['class'] = 'is-selected';
          }

          var dot = _this2._compileHandlebars(_this2.$colorListTemplate, c);

          _this2.$colorPalette.append($(dot));
        });
      }
    }
    /**
     * Transitions between color slices
     * @private
     */

  }, {
    key: "_transitionColorSlices",
    value: function _transitionColorSlices() {
      var _this3 = this;

      //Compare previous array to current array and see if there needs to be adjustments.
      //Interpolate between states if there are changes.
      var previousWidth = Math.PI * 2 / this.PREVIOUS_COLOR_SLICES.length;
      var nextWidth = Math.PI * 2 / this.TOTAL_COLORS;
      var initialAnimationDivisions = 15;
      var firstLoop = true;
      var rotation = 0;
      var segmentsChanged = false;
      var animationDivisions = initialAnimationDivisions;
      var nextSegments = [];

      for (var i = 0; i < this.TOTAL_COLORS; i++) {
        //Check if segments have changed from new to previous.
        if (this.PREVIOUS_COLOR_SLICES.length !== this.COLOR_SLICES.length || this.PREVIOUS_COLOR_SLICES.length === 0 || this.PREVIOUS_COLOR_SLICES[i] === undefined || this.PREVIOUS_COLOR_SLICES[i].code !== this.COLOR_SLICES[i].code) {
          segmentsChanged = true;
          break;
        }
      }

      if (!segmentsChanged) {
        // Initial set, no animation...
        this._drawColorSlices();
      } else {
        this.IS_TRANSITIONING = true; // Loop through and gather differences.
        // Compare to current segments.
        // See which values are still in array and which are not.
        // Draw incrementally until previous === current.

        var iterateThroughTransition = function iterateThroughTransition() {
          var firstSegment = true;
          var skipRotation = false;

          if (firstLoop) {
            for (var _i = 0; _i < nextSegments.length; _i++) {
              var segment = nextSegments[_i];

              for (var j = 0; j < _this3.COLOR_SLICES.length; j++) {
                if (segment.code === _this3.COLOR_SLICES[j].code) {
                  segment.isInNext = true;
                }
              }

              for (var _j = 0; _j < _this3.PREVIOUS_COLOR_SLICES.length; _j++) {
                if (segment.code === _this3.PREVIOUS_COLOR_SLICES[_j].code) {
                  segment.isInPrevious = true;
                }
              }
            }

            for (var _i2 = 0; _i2 < _this3.PREVIOUS_COLOR_SLICES.length; _i2++) {
              var _segment = _this3.PREVIOUS_COLOR_SLICES[_i2];

              for (var _j2 = 0; _j2 < _this3.COLOR_SLICES.length; _j2++) {
                if (_segment.code === _this3.COLOR_SLICES[_j2].code) {
                  _segment.isInNext = true;
                }
              }

              if (_segment.isInNext === undefined) {
                // We need to add the segment to be able to remove it slowly.
                _segment.isInPrevious = true;
                nextSegments.splice(_i2, 0, _segment);
              }
            }
          }

          for (var _i3 = 0; _i3 < nextSegments.length; _i3++) {
            var _segment2 = nextSegments[_i3]; //We might need to rotate the whole wheel if the first element is not present in the transition.

            if (_segment2.isInNext !== undefined && firstSegment === true) {
              if (_i3 === 0) skipRotation = true;
              rotation += nextWidth / 2 / initialAnimationDivisions;
              firstSegment = false;
            } // Mutate radians in previous_segments.


            if (_segment2.isInNext !== undefined && _segment2.isInPrevious !== undefined) {
              //Is in both (retained)
              if (firstLoop) {
                //TODO figure out how to send new radians.
                _segment2.radians = previousWidth;
              } else {
                // +/- this.previous_segments
                _segment2.radians += (nextWidth - previousWidth) / initialAnimationDivisions;
              }
            } else if (_segment2.isInNext !== undefined && _segment2.isInPrevious === undefined) {
              //Is in coming (adding)
              if (firstLoop) {
                // Add the coming segment.
                _segment2.radians = 0;
              } else {
                // add and ++this.previous_segments.radians
                _segment2.radians += nextWidth / initialAnimationDivisions;
              }
            } else if (_segment2.isInNext === undefined && _segment2.isInPrevious !== undefined) {
              //Is in previous (removing)
              if (firstLoop) {
                _segment2.radians = previousWidth;
              } else {
                // --this.previous_segments.radians and remove
                _segment2.radians -= previousWidth / initialAnimationDivisions;
              }
            }

            if (animationDivisions > 1) {
              _segment2.radians = Math.abs(Math.round(_segment2.radians * 10000) / 10000);
            }
          }

          if (firstLoop) {
            firstLoop = false;
          } else {
            if (skipRotation) {
              _this3._drawColorSlices(nextSegments);
            } else {
              _this3._drawColorSlices(nextSegments, rotation);
            }
          }

          animationDivisions--;

          if (animationDivisions + 1) {
            window.requestAnimationFrame(function () {
              iterateThroughTransition();
            });
          } else {
            //Run final iteration through using final form
            _this3._drawColorSlices();

            _this3.IS_TRANSITIONING = false;
          }
        }; //only animate when changing keywords.


        nextSegments = $.extend(true, [], this.COLOR_SLICES);
        firstLoop = true;
        iterateThroughTransition();
      }
    }
    /**
     * Draws color slices
     * @private
     */

  }, {
    key: "_drawColorSlices",
    value: function _drawColorSlices() {
      var slices = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.COLOR_SLICES;
      var rotation = arguments.length > 1 ? arguments[1] : undefined;
      var slicesLength = slices.length;
      var ctx = this.ctx;
      ctx.clearRect(0, 0, this.cWidth, this.cHeight);
      this.ctxHint.clearRect(0, 0, this.cWidth, this.cHeight);
      ctx.strokeStyle = this.STROKE_COLOR;
      ctx.lineWidth = this.STROKE_WIDTH;
      ctx.beginPath();
      ctx.arc(this.cWidth / 2, this.cHeight / 2, this.radius - this.STROKE_WIDTH, 0, Math.PI * 2, false);
      ctx.closePath();
      ctx.stroke();

      if (slicesLength) {
        var sliceWidth = Math.PI * 2 * (this.PIE_SLICE_SIZE / slicesLength);
        var rotate = rotation ? rotation : slices[0].radians ? slices[0].radians / 2 : sliceWidth / 2;
        var startPos = Math.PI * 1.5 - rotate;

        for (var i = 0; i < slicesLength; i++) {
          // sliceWidth when transitioning has slices of different widths.
          sliceWidth = slices[i].radians ? slices[i].radians : sliceWidth;

          if (slices[i].hinted) {
            ctx = this.ctxHint;
          }

          ctx.globalCompositeOperation = 'source-over';
          ctx.beginPath();
          ctx.arc(this.cWidth / 2, this.cHeight / 2, this.radius - this.STROKE_WIDTH * 3, startPos, startPos + sliceWidth, false);
          ctx.lineTo(this.cWidth / 2, this.cHeight / 2);
          ctx.closePath();
          ctx.fillStyle = slices[i].value;
          ctx.fill();
          slices[i].sAngle = startPos;
          slices[i].eAngle = startPos + sliceWidth;

          if (this.SELECTED_SLICE[slices[i].code] || slices[i].hovered || slices[i].selected) {
            this._drawSelectedMarker(slices[i]);
          }

          if (slices[i].hinted) {
            this._drawSelectedMarker(slices[i]);

            ctx.shadowColor = 'rgba(0, 0, 0, 0.2)';
            ctx.shadowOffsetY = 5;
            ctx.shadowBlur = 5;
            ctx = this.ctx;
          }

          startPos += sliceWidth;
        } // Reset angles to default start value


        this.START_ANGLE = 0;
        this.END_ANGLE = 0;
      }
    }
    /**
     * Sets passed in slice to currentSlice
     * @param slice
     * @private
     */

  }, {
    key: "_setCurrentSlice",
    value: function _setCurrentSlice(slice) {
      this.CURRENT_SLICE = slice;
    }
    /**
     * Sets passed in slice to currentSlice
     * @param slice
     * @private
     */

  }, {
    key: "_delCurrentSlice",
    value: function _delCurrentSlice(slice) {
      delete this.SELECTED_SLICES[slice.code];
    }
    /**
     * Gets a specific slice of the circle based on given X and Y coordinates
     * @param xPos
     * @param yPos
     * @returns {*}
     * @private
     */

  }, {
    key: "_getSlice",
    value: function _getSlice(xPos, yPos) {
      var cAngle = this._getAngelForCoordinates(xPos, yPos);

      if (cAngle) {
        for (var i = 0; i < this.COLOR_SLICES.length; i++) {
          if (cAngle >= this.COLOR_SLICES[i].sAngle && cAngle < this.COLOR_SLICES[i].eAngle) {
            return this.COLOR_SLICES[i];
            break;
          }
        }

        return this.COLOR_SLICES[0];
      }

      return false;
    }
    /**
     * Clips the current slice
     * @param slice
     * @private
     */

  }, {
    key: "_onHoverSlice",
    value: function _onHoverSlice(slice) {
      // Clear canvas and redraw circle
      for (var i = 0; i < this.COLOR_SLICES.length; i++) {
        this.COLOR_SLICES[i].hovered = slice.code === this.COLOR_SLICES[i].code;
      }

      this._drawColors();
    }
  }, {
    key: "_drawSelectedMarker",
    value: function _drawSelectedMarker(slice) {
      var angle = (slice.eAngle - slice.sAngle) / 2 + slice.sAngle;
      var ctx = slice.hinted ? this.ctxHint : this.ctx;
      ctx.globalCompositeOperation = 'destination-out';
      ctx.beginPath();
      ctx.arc(this.radius + Math.cos(angle) * this.hoverMarkerRadius, this.radius + Math.sin(angle) * this.hoverMarkerRadius, parseInt(this.radius * 0.08), 0, Math.PI * 2, false);
      ctx.closePath();
      ctx.fillStyle = this.HOVER_FILL_COLOR;
      ctx.fill();
      ctx.globalCompositeOperation = 'source-over';
    }
    /**
     * Gets the angle for any given coordinates
     * @param xPos
     * @param yPos
     * @returns {*}
     * @private
     */

  }, {
    key: "_getAngelForCoordinates",
    value: function _getAngelForCoordinates(xPos, yPos) {
      var distanceX = Math.abs(xPos - this.cWidth / 2),
          distanceY = Math.abs(yPos - this.cHeight / 2),
          distanceTot = Math.sqrt(Math.pow(distanceX, 2) + Math.pow(distanceY, 2)),
          angle = Math.abs(Math.asin((yPos - this.cHeight / 2) / distanceTot));

      if (distanceTot <= this.radius - this.STROKE_WIDTH * 3) {
        if (xPos > this.cWidth / 2) {
          // right half of the circle
          angle = yPos < this.cHeight / 2 ?
          /* Top Right */
          Math.PI / 2 - angle :
          /* Bottom Right */
          Math.PI / 2 + angle;
        } else {
          // left half of the circle
          angle = yPos > this.cHeight / 2 ?
          /* Bottom Left */
          Math.PI * 1.5 - angle :
          /* Top Left */
          Math.PI * 1.5 + angle;
        }

        return angle + Math.PI * 1.5;
      }

      return false;
    }
    /**
     * Checks if the passed in slice is the currentSlice
     * @param slice
     * @returns {boolean}
     * @private
     */

  }, {
    key: "_isSameSlice",
    value: function _isSameSlice(slice) {
      return this.CURRENT_SLICE.code === slice.code;
    }
    /**
     * Canvas on mousemove
     * @param e
     * @private
     */

  }, {
    key: "_onMouseMove",
    value: function _onMouseMove(e) {
      var slice = this._getSlice(e.pageX - this.$el.offset().left, e.pageY - this.$el.offset().top);

      if (slice) {
        if (!this._isSameSlice(slice)) {
          this._setCurrentSlice(slice);

          this._onHoverSlice(slice);

          if (!slice.selected) {
            this.publish(_Enums.default.EVENT.ON_FILTER_MOUSEOVER, slice);
          } else {
            this.publish(_Enums.default.EVENT.ON_FILTER_MOUSELEAVE);
          }
        }

        this.$colorName.text(slice.title);
        this.publish(_Enums.default.ACTION.SET_SEARCH_HINT, slice.title, true);
      } else {
        this._setCurrentSlice({});

        for (var i = 0; i < this.COLOR_SLICES.length; i++) {
          this.COLOR_SLICES[i].hovered = false;
        }

        this._drawColors();

        this.publish(_Enums.default.ACTION.SET_SEARCH_HINT, '', false);
        this.$colorName.text('');
      }
    }
    /**
     * Canvas on mouseleave.
     * @param e
     * @private
     */

  }, {
    key: "_onMouseLeave",
    value: function _onMouseLeave(e) {
      this._setCurrentSlice({});

      this._drawColors();

      this.$colorName.text('');
      this.publish(_Enums.default.ACTION.SET_SEARCH_HINT, '', false);
      this.publish(_Enums.default.EVENT.ON_FILTER_MOUSELEAVE);
    }
    /**
     * Canvas on click
     * @param e
     * @private
     */

  }, {
    key: "_onClick",
    value: function _onClick(e) {
      var slice = this._getSlice(e.pageX - this.$el.offset().left, e.pageY - this.$el.offset().top);

      if (slice.code in this.SELECTED_SLICES) {
        this.publish(_Enums.default.EVENT.ON_COLOR_DESELECT, slice);

        this._delCurrentSlice(slice);
      } else {
        this.SELECTED_SLICES[slice.code] = slice;
        this.publish(_Enums.default.EVENT.ON_COLOR_SELECT, slice);

        this._setCurrentSlice(slice);
      }
    }
    /**
     * Refreshes the filter when new data has been fetched.
     * Set PREVIOUS_COLOR_SLICES {} to this.COLOR_SLICES for transition between.
     * @private
     */

  }, {
    key: "_refreshFilter",
    value: function _refreshFilter(data, transition) {
      this.PREVIOUS_COLOR_SLICES = $.extend(true, [], {});
      var do_transition = transition ? transition : false;
      var newSlices = data.length > 0 ? data : this.COLOR_SLICES;
      this.TOTAL_COLORS = this.COLOR_SLICES.length;
      this.COLOR_SLICES = $.extend(true, [], newSlices);

      this._drawColorDots();

      if (!Modernizr.mq(_Enums.default.MQ.IS_MOBILE)) {
        this._drawColors(do_transition);
      }

      this.publish(_Enums.default.EVENT.ON_CHECK_FILTERS);
    }
    /**
     * When the tag has been removed, unselect the slice and remove the marker. (async event)
     * @private
     */

  }, {
    key: "_onSelectColorRemoved",
    value: function _onSelectColorRemoved(tagData) {
      if (tagData.type == this.FILTER_TYPE && this.SELECTED_SLICE[tagData.code]) {
        this.SELECTED_SLICE[tagData.code] = false;
        this.SELECTED_SLICE[tagData.selected] = false;

        if (!this.IS_TRANSITIONING) {
          this._drawColors();
        }
      }

      var elm = document.getElementById('checkbox_' + tagData.code);
      elm.click();
    }
    /**
     * When the tag has been added, select the slice and add the marker. (async event)
     * @private
     */

  }, {
    key: "_onSelectColorAdded",
    value: function _onSelectColorAdded(tagData) {
      //Remove the added tag from list of filters about go get added.
      if (tagData.type == this.FILTER_TYPE) {
        this.SELECTED_SLICE[tagData.code] = true;
        this.SELECTED_SLICE[tagData.selected] = true;

        if (!this.IS_TRANSITIONING) {
          this._drawColors();
        }
      }

      var elm = document.getElementById('checkbox_' + tagData.code);
      elm.click();
    }
  }]);

  return OFilterColor;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OFilterColor;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66,"./../../utils.js":113}],88:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

var _Utils = _interopRequireDefault(require('./../../utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OHeader = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OHeader, _AppeaserComponentBas);

  var _super = _createSuper(OHeader);

  /**
   * Constructor, will run before page loaded
   */
  function OHeader() {
    var _this;

    _classCallCheck(this, OHeader);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();

    _this._jQueryScopeBinding();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OHeader, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      this._detachMQHandlers();

      _get(_getPrototypeOf(OHeader.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_PAGE_CONTENT = '.o-page-content';
      this.SELECTOR_CATEGORY_WRAPPER = '.category-wrapper';
      this.SELECTOR_CATEGORY_GROUP = '.category-group';
      this.SELECTOR_NAVIGATION = '.o-navigation';
      this.SELECTOR_NAVIGATION_CURTAIN = '.navigation-curtain';
      this.SELECTOR_DEPARTMENT = '.department-item';
      this.SELECTOR_FOLDER = '.folder-link';
      this.SELECTOR_TOOLTIP_TRIGGER = '.tooltip-trigger';
      this.SELECTOR_TOOLTIP_CONTENT = '.tooltip-content';
      this.SELECTOR_SEARCH_ICON = '.search-icon';
      this.SELECTOR_SEARCH = '.o-search';
      this.SELECTOR_SEARCH_FIELD = '.search-field';
      this.SELECTOR_BURGER_ICON = '.a-burger';
      this.SELECTOR_OPEN_FOLDER = '.folder-category .folder-link.is-open';
      this.SELECTOR_ANIMATION_WRAPPER = '.animation-wrapper';
      this.SELECTOR_INFORMATION_SECTION = '.information-section';
      this.SELECTOR_VISIBLE_STATE = '.is-visible';
      this.SELECTOR_DEFAULT_DEPARTMENT = this.SELECTOR_CATEGORY_WRAPPER + "[data-title='Women'], " + this.SELECTOR_CATEGORY_WRAPPER + "[data-title='WOMEN'], " + this.SELECTOR_CATEGORY_WRAPPER + "[data-title='women'], " + this.SELECTOR_CATEGORY_WRAPPER + "[data-title='Frauen'], " + this.SELECTOR_CATEGORY_WRAPPER + "[data-title='FRAUEN'], " + this.SELECTOR_CATEGORY_WRAPPER + "[data-title='frauen'] ," + this.SELECTOR_CATEGORY_WRAPPER + "[data-title='Damen'] ," + this.SELECTOR_CATEGORY_WRAPPER + "[data-title='DAMEN'] ," + this.SELECTOR_CATEGORY_WRAPPER + "[data-title='damen']  ";
      this.SELECTOR_NOTIFICATION_TICKER = '.m-notification-ticker';
      this.SELECTOR_STATIC_NOTIFICATION_TICKER = '.m-static-notification-ticker';
      this.SELECTOR_STATIC_TEXT_FIELD = 'p.mobile-notification';
      this.SELECTOR_SITE_BANNER = '.m-site-banner';
      this.SELECTOR_ERROR_BANNER = '.m-error-banner';
      this.SELECTOR_MY_PAGE = '.o-my-page';
      this.SELECTOR_O_MENU_LIST = '.o-menu-list';
      this.SELECTOR_CATEGORY_MENU = '.category-wrapper.is-visible .category-menu';
      this.SELECTOR_CURATED_CONTENT = '.category-wrapper.is-visible .curated-content';
      this.CLASS_PAGE_IS_LOADED = 'fetch-complete';
      this.CLASS_SEARCH_ICON = 'a-icon-lg-search';
      this.CLASS_CLOSE_ICON = 'a-icon-close';
      this.CLASS_HAS_SELECTED_DEPARTMENT = 'has-selected-department';
      this.CLASS_HAS_BORDER = 'has-border';
      this.CLASS_HAS_OPEN_SEARCH = 'has-open-search';
      this.CLASS_IS_SEARCH_VISIBLE = 'is-search-visible';
      this.CLASS_IS_LEAVING = 'is-leaving';
      this.CLASS_IS_UNDERNEATH = 'is-underneath';
      this.CLASS_IS_OPENING_NAVIGATION = 'is-opening-navigation';
      this.CLASS_IS_CLOSING_NAVIGATION = 'is-closing-navigation';
      this.CLASS_INFO_ICON = 'info-icon';
      this.CLASS_IS_CHECKOUT = 'is-checkout';
      this.CLASS_IS_EXTENDED = 'is-extended';
      this.CLASS_MOBILE_EXTENDED = 'mobile-extended';
      this.CLASS_MOBILE_STICKY = 'mobile-sticky';
      this.CLASS_DESKTOP_EXTENDED = 'desktop-extended';
      this.CLASS_DESKTOP_STICKY = 'desktop-sticky';
      this.CLASS_ANIMATE_HIDE = 'animate-hide';
      this.CLASS_FROM_STICKY = 'from_sticky';
      this.CLASS_LIGHTBOX_OPEN = 'is-behind-lightbox';
      this.CLASS_A_IMAGE = 'a-image';
      this.CLASS_HAS_BACKGROUND = 'has-background';
      this.CLASS_ACTIVE_MENU = 'is-active-menu';
      this.CLASS_ANIMATE_HIDE = 'animate-hide';
      this.CLASS_HIDE_SEARCH = 'hide-search';
      this.CLASS_HAS_NEW_ITEM = 'has-new-item';
      this.CLASS_IS_HIDDEN = 'is-hidden';
      this.OPAGE_CONTENT = '.o-page-content';
      this.CLASS_IS_OPEN = 'is-open';
      this.CLASS_MAIN_CATEGORY = '.main-categories';
      this.CLASS_CURATED_CATEGORY = '.curated-categories';
      this.SELECTOR_MAIN_CAT_OPEN_FOLDER = '.main-categories .folder-category .folder-link';
      this.CLOSE_SEARCH_MARGIN = -5;
      this.DELAY_TIME = 100;
      this.ADD_TO_CART_TIMEOUT = undefined;
      this.HIDE_CART_TIMEOUT = undefined;
      this.ADD_TO_CART_NOTIFICATION_TIMER = 1500;
      this.HIDE_CART_NOTIFICATION_TIMER = 2000;
      this.DELAY_TIME = 1000;
      this.HEIGHT_DESKTOP = 125;
      this.HEIGHT_MOBILE = 80;
      this.THRESHOLD_DESKTOP = 36;
      this.THRESHOLD_MOBILE = 13;
      this.WINDOW_WIDTH = 0;
      this.height = null;
      this.BANNER_HEIGHT = 0;
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._attachMQHandlers();

      this._onScroll();

      this.headerIsTransparent = this.$el.hasClass(_Enums.default.CLASS.IS_TRANSPARENT);
      this.isInverted = this.$el.hasClass(_Enums.default.CLASS.IS_INVERTED);
      this.isOpenOrCloseAnimationInProgress = false;
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$window = $(window);
      this.$body = $('body');
      this.$htmlAndBody = $('html, body');
      this.$pageContent = $(this.SELECTOR_PAGE_CONTENT);
      this.$categoryWrapper = this.$el.find(this.SELECTOR_CATEGORY_WRAPPER);
      this.$categoryGroup = this.$el.find(this.SELECTOR_CATEGORY_GROUP);
      this.$navigation = this.$el.find(this.SELECTOR_NAVIGATION);
      this.$navigationCurtain = this.$el.find(this.SELECTOR_NAVIGATION_CURTAIN);
      this.$staticNotificationTicker = this.$navigationCurtain.find(this.SELECTOR_STATIC_NOTIFICATION_TICKER);
      this.$staticTextField = this.$staticNotificationTicker.find(this.SELECTOR_STATIC_TEXT_FIELD);
      this.$departmentItem = this.$el.find(this.SELECTOR_DEPARTMENT);
      this.$folderLink = this.$el.find(this.SELECTOR_FOLDER);
      this.$tooltipTrigger = this.$el.find(this.SELECTOR_TOOLTIP_TRIGGER);
      this.$tooltipContent = this.$el.find(this.SELECTOR_TOOLTIP_CONTENT);
      this.$searchIcon = this.$el.find(this.SELECTOR_SEARCH_ICON);
      this.$search = this.$el.find(this.SELECTOR_SEARCH);
      this.$searchField = this.$el.find(this.SELECTOR_SEARCH_FIELD);
      this.$burgerIcon = this.$el.find(this.SELECTOR_BURGER_ICON);
      this.$animationWrapper = this.$el.find(this.SELECTOR_ANIMATION_WRAPPER);
      this.$informationSection = this.$el.find(this.SELECTOR_INFORMATION_SECTION);
      this.$notificationTicker = this.$el.find(this.SELECTOR_NOTIFICATION_TICKER);
      this.$siteBanner = $(this.SELECTOR_SITE_BANNER);
      this.$errorBanner = $(this.SELECTOR_ERROR_BANNER);
      this.$myPage = this.$pageContent.find(this.SELECTOR_MY_PAGE);
      this.$oMenuList = this.$myPage.find(this.SELECTOR_O_MENU_LIST);
      this.$categoryMenu = $(this.SELECTOR_CATEGORY_MENU);
      this.$curatedContent = $(this.SELECTOR_CURATED_CONTENT);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onScroll = this._onScroll.bind(this);
      this._updateHeaderStates = this._updateHeaderStates.bind(this);
      this._onTooltipTriggerClick = this._onTooltipTriggerClick.bind(this);
      this._closeTooltips = this._closeTooltips.bind(this);
      this._onDepartmentHover = this._onDepartmentHover.bind(this);
      this._onDepartmentClick = this._onDepartmentClick.bind(this);
      this._onFolderClick = this._onFolderClick.bind(this);
      this._showHeader = this._showHeader.bind(this);
      this._onSearchIconClick = this._onSearchIconClick.bind(this);
      this._onBurgerIconClick = this._onBurgerIconClick.bind(this);
      this._setStaticMobileNotificationTicker = this._setStaticMobileNotificationTicker.bind(this);
      this._deselectAllFolders = this._deselectAllFolders.bind(this);
      this._onHideHeader = this._onHideHeader.bind(this);
      this._onShowHeader = this._onShowHeader.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
      //this.subscribe(Enums.EVENT.ON_BEFORE_CONTENT_LOAD, this._showLoadIndicator);
      //this.subscribe(Enums.EVENT.ON_PAGE_LOAD_ERROR, this._hideLoadIndicator);

      this.subscribe(_Enums.default.EVENT.ON_PAGE_CONTENT_REPLACED, this._onPageContentReplaced);
      this.subscribe(_Enums.default.ACTION.SHOW_HEADER, this._showHeader);
      this.subscribe(_Enums.default.ACTION.HIDE_HEADER, this._hideHeader);
      this.subscribe(_Enums.default.ACTION.SEARCH_INITIALISE, this._onInit);
      this.subscribe(_Enums.default.EVENT.ON_ERROR_BANNER_RESIZE, this._onErrorBannerResize);
      this.subscribe(_Enums.default.ACTION.ENABLE_HEADER_STICKY, this._enableSticky);
      this.subscribe(_Enums.default.ACTION.DISABLE_HEADER_STICKY, this._disableSticky);
      this.subscribe(_Enums.default.ACTION.HIDE_HEADER, this._onHideHeader);
      this.subscribe(_Enums.default.ACTION.SHOW_HEADER, this._onShowHeader);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady) // always needed
      //this.unsubscribe(Enums.EVENT.ON_BEFORE_CONTENT_LOAD, this._showLoadIndicator);
      ;
      - //this.unsubscribe(Enums.EVENT.ON_PAGE_LOAD_ERROR, this._hideLoadIndicator);
      this.unsubscribe(_Enums.default.ACTION.SHOW_HEADER, this._showHeader);
      this.unsubscribe(_Enums.default.ACTION.HIDE_HEADER, this._hideHeader);
      this.unsubscribe(_Enums.default.EVENT.ON_PAGE_CONTENT_REPLACED, this._onPageContentReplaced);
      this.unsubscribe(_Enums.default.ACTION.SEARCH_INITIALISE, this._onInit);
      this.unsubscribe(_Enums.default.EVENT.ON_ERROR_BANNER_RESIZE, this._onErrorBannerResize);
      this.unsubscribe(_Enums.default.ACTION.ENABLE_HEADER_STICKY, this._enableSticky);
      this.unsubscribe(_Enums.default.ACTION.DISABLE_HEADER_STICKY, this._disableSticky);
      this.unsubscribe(_Enums.default.ACTION.HIDE_HEADER, this._onHideHeader);
      this.unsubscribe(_Enums.default.ACTION.SHOW_HEADER, this._onShowHeader);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {
      this.publish(_Enums.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, {
        element: this.$el,
        margin: this.$el.outerHeight()
      });
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$window.on('scroll', this._onScroll);
      this.$el.on('click', this._onHeaderClick);
      this.$departmentItem.on('mouseover', this._onDepartmentHover);
      this.$departmentItem.on('click', this._onDepartmentClick);
      this.$folderLink.on('click', this._onFolderClick);
      this.$tooltipTrigger.on('click', this._onTooltipTriggerClick);
      this.$searchIcon.on('click', this._onSearchIconClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$window.off('scroll', this._onScroll);
      this.$el.off('click', this._onHeaderClick);
      this.$departmentItem.off('mouseover', this._onDepartmentHover);
      this.$departmentItem.off('click', this._onDepartmentClick);
      this.$folderLink.off('click', this._onFolderClick);
      this.$tooltipTrigger.off('click', this._onTooltipTriggerClick);
      this.$searchIcon.off('click', this._onSearchIconClick);
      this.$burgerIcon.off('click', this._onBurgerIconClick);
    }
  }, {
    key: "_attachMQHandlers",
    value: function _attachMQHandlers() {
      this.MQMobileHandler = {
        deferSetup: true,
        match: this._onMobileMatch.bind(this)
      }; // This handler removed animation of input field.

      this.MQTabletAndDesktopHandler = {
        deferSetup: true,
        match: this._onTabletAndDesktopMatch.bind(this)
      };
      enquire.register(_Enums.default.MQ.IS_MOBILE_HEADER, this.MQMobileHandler);
      enquire.register(_Enums.default.MQ.TABLET_AND_DESKTOP_RANGE_HEADER, this.MQTabletAndDesktopHandler);
    }
  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {
      enquire.unregister(_Enums.default.MQ.IS_MOBILE_HEADER, this.MQMobileHandler);
      enquire.unregister(_Enums.default.MQ.TABLET_AND_DESKTOP_RANGE_HEADER, this.MQTabletAndDesktopHandler);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /*
         By default 'is-hidden' class is added
         Now search header is configurable. So suppose user has selected extended.
         then in starting. and oninit function is initialised.
      */

  }, {
    key: "_onInit",
    value: function _onInit() {
      var _this2 = this;

      this.onLoaded = true;

      if (Modernizr.mq(_Enums.default.MQ.MOBILE_AND_TABLET_RANGE) && !this.$el.hasClass(this.CLASS_MOBILE_EXTENDED) && !this.$el.hasClass(this.CLASS_MOBILE_STICKY)) {
        if (this.$el.hasClass(_Enums.default.CLASS.IS_HIDDEN_STATE)) {
          this.$el.removeClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
        }

        return;
      } else if (Modernizr.mq(_Enums.default.MQ.IS_DESKTOP) && !this.$el.hasClass(this.CLASS_DESKTOP_STICKY) && !this.$el.hasClass(this.CLASS_DESKTOP_EXTENDED)) {
        if (this.$el.hasClass(_Enums.default.CLASS.IS_HIDDEN_STATE)) {
          this.$el.removeClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
        }

        return;
      } else if (Modernizr.mq(_Enums.default.MQ.IS_DESKTOP) && this.$el.hasClass(this.CLASS_DESKTOP_STICKY)) {
        this.$el.addClass(_Enums.default.CLASS.IS_STICKY);
      } else if (Modernizr.mq(_Enums.default.MQ.IS_DESKTOP) && this.$el.hasClass(this.CLASS_DESKTOP_EXTENDED)) {
        this.$el.addClass(this.CLASS_IS_EXTENDED);
      } else if (Modernizr.mq(_Enums.default.MQ.MOBILE_AND_TABLET_RANGE) && this.$el.hasClass(this.CLASS_MOBILE_STICKY)) {
        this.$el.addClass(_Enums.default.CLASS.IS_STICKY);
      } else if (Modernizr.mq(_Enums.default.MQ.MOBILE_AND_TABLET_RANGE) && this.$el.hasClass(this.CLASS_MOBILE_EXTENDED)) {
        this.$el.addClass(this.CLASS_IS_EXTENDED);
      }

      if (this.$el.hasClass(_Enums.default.CLASS.IS_HIDDEN_STATE)) {
        this.$el.removeClass(_Enums.default.CLASS.IS_HIDDEN_STATE);

        if (this.$el.hasClass(this.CLASS_IS_EXTENDED)) {
          if (this.onLoaded) {
            $(this.OPAGE_CONTENT).css({
              marginTop: 112,
              transition: 'unset'
            });
            this.onLoaded = false;
          }

          this.publish(_Enums.default.ACTION.SHOW_SEARCH, this.CLASS_IS_EXTENDED);
          this.$el.addClass(this.CLASS_HAS_OPEN_SEARCH);
          this.$body.addClass(this.CLASS_IS_SEARCH_VISIBLE);
        } else if (this.$el.hasClass(_Enums.default.CLASS.IS_STICKY)) {
          setTimeout(function () {
            _this2.publish(_Enums.default.ACTION.SHOW_SEARCH, _Enums.default.CLASS.IS_STICKY);

            _this2.$el.addClass(_this2.CLASS_HAS_OPEN_SEARCH);

            _this2.$body.addClass(_this2.CLASS_IS_SEARCH_VISIBLE);
          }, this.DELAY_TIME);
        }

        setTimeout(function () {
          _this2.$pageContent.addClass(_this2.CLASS_IS_EXTENDED);

          _this2.publish(_Enums.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN);
        }, this.DELAY_TIME);
      }

      $(this.OPAGE_CONTENT).css({
        transition: ''
      });
    }
    /**
     * Setup everything needed to keep the header looking good and in the correct position
     * @private
     */

  }, {
    key: "_setupSticky",
    value: function _setupSticky() {
      this._prepareStickyElement();

      this._onScroll();

      this.stickyTrigger = 11; // .is-sticky top padding
    }
    /**
     * _prepareStickyElement
     * Remove styling that was added with javascript
     * And re-define all styles
     * @private
     */

  }, {
    key: "_prepareStickyElement",
    value: function _prepareStickyElement() {
      this.$el.css('padding-top', '');
      var margin = undefined;

      if (Modernizr.mq(_Enums.default.MQ.IS_MOBILE)) {
        margin = this.HEIGHT_MOBILE;
        this.stickyThreshold = this.THRESHOLD_MOBILE;
      } else {
        margin = this.HEIGHT_DESKTOP;
        this.stickyThreshold = this.THRESHOLD_DESKTOP;
      }

      this.publish(_Enums.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, {
        margin: margin,
        element: this.$el
      });
      this.height = parseInt(this.$el.outerHeight());
    }
    /**
     * Listen to the onScroll event
     * @private
     */

    /**
     * ON_PAGE_RESIZE callback
     */

  }, {
    key: "_onResize",
    value: function _onResize() {
      if (this.$el.outerHeight != this.height) {
        this.height = this.$el.outerHeight();

        this._prepareStickyElement();
      }
    }
    /**
     * Makes the header sticky
     * @private
     */

  }, {
    key: "_makeSticky",
    value: function _makeSticky() {
      if (!this.$el.hasClass(_Enums.default.CLASS.IS_STICKY)) {
        this.$el.removeClass(this.CLASS_HAS_BACKGROUND);
        this.$el.removeClass(this.CLASS_FROM_STICKY);
        this.$el.addClass(_Enums.default.CLASS.IS_STICKY);
        this.$myPage.css('margin-top', 0);
        this.$oMenuList.css('margin-top', 0);

        if (this.$siteBanner.height() != undefined) {
          this.$el.css('margin-top', 0);
        } else if (this.$siteBanner.height() == undefined) {
          this.$el.css('margin-top', 0);
        }

        this.publish(_Enums.default.EVENT.ON_HEADER_STICY);
      }
    }
    /**
     * Makes the header not sticky
     * @private
     */

  }, {
    key: "_makeNormal",
    value: function _makeNormal() {
      if (this.hasBackground && !this.isMenuButtonActive) {
        this.$el.addClass(this.CLASS_HAS_BACKGROUND);
      }

      if (this.$el.hasClass(_Enums.default.CLASS.IS_STICKY)) {
        this.$el.addClass(this.CLASS_FROM_STICKY);
        this.$el.css('padding-top', '');
        this.$el.removeClass(_Enums.default.CLASS.IS_STICKY);

        if (this.$errorBanner.height() != undefined && this.$siteBanner.height() != undefined) {
          this.$el.css('margin-top', this.$errorBanner.height() + this.$siteBanner.height());
          this.$myPage.css('margin-top', this.$errorBanner.height() + this.$siteBanner.height());
          this.$oMenuList.css('margin-top', this.$errorBanner.height() + this.$siteBanner.height());
        } else if (this.$errorBanner.height() == undefined && this.$siteBanner.height() != undefined) {
          this.$el.css('margin-top', this.$siteBanner.height());
          this.$myPage.css('margin-top', this.$siteBanner.height());
          this.$oMenuList.css('margin-top', this.$siteBanner.height());
        } else if (this.$errorBanner.height() == undefined && this.$siteBanner.height() == undefined) {
          this.$el.css('margin-top', 0);
          this.$myPage.css('margin-top', 0);
          this.$oMenuList.css('margin-top', 0);
        }

        this.publish(_Enums.default.EVENT.ON_HEADER_NOT_STICKY);
      }
    }
    /**
     * Executes and publish close search
     */

  }, {
    key: "_onHideHeader",
    value: function _onHideHeader(options) {
      if (options) {
        this.$el.addClass(options.class);
      } else {
        this.$el.addClass(this.CLASS_ANIMATE_HIDE);
      }
    }
    /**
     * Executes and publish close search
     */

  }, {
    key: "_onShowHeader",
    value: function _onShowHeader() {
      var search_string = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      this.$searchInput.val(search_string);
      this.$el.removeClass(this.CLASS_HIDE_SEARCH).removeClass(_Enums.default.CLASS.DISPLAY_NONE).removeClass(this.CLASS_ANIMATE_HIDE).removeClass(this.CLASS_IS_HIDDEN);
    }
    /**
     * Show header on department link hover - only if it's active
     * @param e
     * @private
     */

  }, {
    key: "_onDepartmentHover",
    value: function _onDepartmentHover(e) {
      e.preventDefault();
      var $department = $(e.currentTarget);

      if (!this.$el.hasClass(_Enums.default.CLASS.IS_OPEN_STATE) && $department.hasClass(_Enums.default.CLASS.IS_ACTIVE_STATE) && !Modernizr.mq(_Enums.default.MQ.IS_MOBILE_HEADER)) {
        this._closeTooltips();

        this._showHeader(e);
      }
    }
    /**
     * - Trigger the showing of the header on department link click
     * - Trigger the loading of the new page through AJAX
     *
     * @param e
     * @private
     */

  }, {
    key: "_onDepartmentClick",
    value: function _onDepartmentClick(e) {
      e.preventDefault();
      var $clickedDepartment = $(e.currentTarget),
          $visibleCategoryWrapper = this.$el.find(this.SELECTOR_CATEGORY_WRAPPER + '.' + _Enums.default.CLASS.IS_VISIBLE_STATE),
          $categoryToBecomeVisible = this.$el.find(this.SELECTOR_CATEGORY_WRAPPER + '[data-title="' + $(e.target).attr('data-title') + '"]'),
          headerIsOpen = this.$el.hasClass(_Enums.default.CLASS.IS_OPEN_STATE),
          searchIsOpen = this.$el.hasClass(this.CLASS_HAS_OPEN_SEARCH),
          clickedDepartmentIsAreadyActive = $clickedDepartment.hasClass(_Enums.default.CLASS.IS_ACTIVE_STATE),
          loadPageInstantly = Modernizr.mq(_Enums.default.MQ.IS_MOBILE_HEADER) && headerIsOpen || !Modernizr.mq(_Enums.default.MQ.IS_MOBILE_HEADER),
          delayedPageLoad = !loadPageInstantly && !clickedDepartmentIsAreadyActive;

      if (!headerIsOpen) {
        this._closeTooltips();

        this._showHeader(e, delayedPageLoad);
      } // This IF loads the department pages instantly on click, only when the user is on Desktop,
      // or when the user is on mobile with the header already open.
      // When loadPageInstantly is false, the page loads after the header is finished opening,in ontransitionend (showHeader())
      // This makes the experience more smooth on mobile - otherwise the header's opening transition is a bit laggy
      // when the page loads at the same as the header opening.


      if (loadPageInstantly) {
        _Utils.default.Http.load($clickedDepartment.attr('href'), this.SELECTOR_PAGE_CONTENT);
      }

      if (headerIsOpen && clickedDepartmentIsAreadyActive) {
        this._deselectAllFolders();

        if (Modernizr.mq(_Enums.default.MQ.IS_MOBILE_HEADER)) this._hideHeader();
        return;
      }

      if (searchIsOpen) {
        this.publish(_Enums.default.ACTION.HIDE_SEARCH);
      }

      this.$departmentItem.removeClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
      $clickedDepartment.addClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
      $visibleCategoryWrapper.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);

      _Utils.default.Accessibility.hide($visibleCategoryWrapper);

      $categoryToBecomeVisible.addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);

      _Utils.default.Accessibility.show($categoryToBecomeVisible);

      if (Modernizr.mq(_Enums.default.MQ.IS_MOBILE_HEADER)) {
        this.$navigationCurtain.scrollTop(0);
      }

      this.$navigation.addClass(this.CLASS_HAS_SELECTED_DEPARTMENT);
      this.headerContentVisible = true;
      this.visibleScrollOffset = this.$window.scrollTop();
    }
    /**
     * Shows the subcategories when the user clicks on a folder
     * @param e
     * @private
     */

  }, {
    key: "_onFolderClick",
    value: function _onFolderClick(e) {
      e.preventDefault();
      var $folderLink = $(e.currentTarget),
          $parentWrapper = $folderLink.closest(this.SELECTOR_CATEGORY_WRAPPER),
          $mainCategory = $folderLink.closest(this.CLASS_MAIN_CATEGORY),
          $curatedCategory = $folderLink.closest(this.CLASS_CURATED_CATEGORY);

      if (Modernizr.mq(_Enums.default.MQ.IS_DESKTOP) && $mainCategory.length > 0) {
        return;
      }

      if ($folderLink.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        $folderLink.removeClass(_Enums.default.CLASS.IS_OPEN_STATE);
        $folderLink.siblings(this.SELECTOR_CATEGORY_GROUP).removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE).addClass(this.CLASS_IS_UNDERNEATH);

        this._scrollToElementinNavigationCurtain(this.$el.find('.department-link').first());
      } else {
        $parentWrapper.find(this.SELECTOR_FOLDER).removeClass(_Enums.default.CLASS.IS_OPEN_STATE);
        $folderLink.addClass(_Enums.default.CLASS.IS_OPEN_STATE);

        if (Modernizr.mq(_Enums.default.MQ.IS_DESKTOP) && $mainCategory.length === 0 || Modernizr.mq(_Enums.default.MQ.IS_LANDSCAPE_TABLET)) {
          var $foldersToHide = $curatedCategory.find(this.SELECTOR_CATEGORY_GROUP + '.' + _Enums.default.CLASS.IS_VISIBLE_STATE);
          $foldersToHide.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE).addClass(this.CLASS_IS_UNDERNEATH);

          _Utils.default.Accessibility.hide($foldersToHide);

          var $foldertoDisplay = $folderLink.siblings(this.SELECTOR_CATEGORY_GROUP);
          $foldertoDisplay.removeClass(this.CLASS_IS_UNDERNEATH).addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);

          _Utils.default.Accessibility.show($foldertoDisplay);
        } else {
          var _$foldersToHide = $parentWrapper.find(this.SELECTOR_CATEGORY_GROUP + '.' + _Enums.default.CLASS.IS_VISIBLE_STATE);

          _$foldersToHide.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE).addClass(this.CLASS_IS_UNDERNEATH);

          _Utils.default.Accessibility.hide(_$foldersToHide);

          var _$foldertoDisplay = $folderLink.siblings(this.SELECTOR_CATEGORY_GROUP);

          _$foldertoDisplay.removeClass(this.CLASS_IS_UNDERNEATH).addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);

          _Utils.default.Accessibility.show(_$foldertoDisplay);
        }

        this._scrollToElementinNavigationCurtain($folderLink, null, -24);
      }
    }
    /**
     * Deselect all folders
     * @param e
     * @private
     */

  }, {
    key: "_deselectAllFolders",
    value: function _deselectAllFolders(e) {
      var $visibleFolders = $(this.SELECTOR_CATEGORY_GROUP + '.' + _Enums.default.CLASS.IS_VISIBLE_STATE);
      $visibleFolders.find('.' + _Enums.default.CLASS.IS_SELECTED).removeClass(_Enums.default.CLASS.IS_SELECTED);

      _Utils.default.Accessibility.hide($visibleFolders);
    }
    /**
     * Take current text from m-notification-ticker and set it to a static mobile m-notification-ticker in the navigation on mobile.
     * @private
     */

  }, {
    key: "_setStaticMobileNotificationTicker",
    value: function _setStaticMobileNotificationTicker() {
      var notificationText = this.$notificationTicker.find('.' + _Enums.default.CLASS.IS_VISIBLE_STATE).text();

      if (notificationText.length > 0) {
        this.$staticTextField.text(notificationText);
        this.$staticNotificationTicker.show();
      } else {
        this.$staticNotificationTicker.hide();
      }
    }
    /**
     * Shows the header either with the category that was clicked or hovered,
     * or a default one (Startpage) used only for the search suggestions in case no department has been chosen
     * @param e
     * @private
     */

  }, {
    key: "_showHeader",
    value: function _showHeader(e, delayedPageLoad) {
      var _this3 = this;

      var $clickedDepartment, $openingCategory;
      this.isOpenOrCloseAnimationInProgress = true;

      if (Modernizr.mq(_Enums.default.MQ.IS_MOBILE_HEADER)) {
        this.publish(_Enums.default.ACTION.DISABLE_SCROLL, {
          $touchScrollElement: this.$el
        });
        this.$burgerIcon.addClass(_Enums.default.CLASS.IS_OPEN_STATE);

        this._setStaticMobileNotificationTicker();
      }

      if (e !== undefined) {
        $clickedDepartment = $(e.currentTarget);
        $openingCategory = this.$el.find(this.SELECTOR_CATEGORY_WRAPPER + '[data-title="' + $clickedDepartment.attr('data-title') + '"]');
      } else if (this.$navigation.hasClass(this.CLASS_HAS_SELECTED_DEPARTMENT)) {
        $clickedDepartment = this.$el.find(this.SELECTOR_DEPARTMENT + '.' + _Enums.default.CLASS.IS_ACTIVE_STATE);
        $openingCategory = this.$el.find(this.SELECTOR_CATEGORY_WRAPPER + '[data-title="' + $clickedDepartment.attr('data-title') + '"]');
      } else {
        $openingCategory = this.$el.find(this.SELECTOR_DEFAULT_DEPARTMENT);
      }

      this.$el.addClass(this.CLASS_IS_OPENING_NAVIGATION);
      this.$navigation.addClass(_Enums.default.CLASS.IS_OPENING_STATE);

      if (this.$el.hasClass(this.CLASS_HAS_OPEN_SEARCH) && Modernizr.mq(_Enums.default.MQ.IS_MOBILE_HEADER)) {
        this.$navigation.removeClass(_Enums.default.CLASS.IS_OPENING_STATE).addClass(_Enums.default.CLASS.IS_OPEN_STATE);
        this.$el.removeClass(this.CLASS_IS_OPENING_NAVIGATION);
      }

      _Utils.default.Accessibility.show(this.$navigationCurtain);

      _Utils.default.Accessibility.clear(this.$categoryGroup.filter(this.SELECTOR_VISIBLE_STATE).add($openingCategory));

      this.$animationWrapper.on('animationend', function (event) {
        _this3.isOpenOrCloseAnimationInProgress = false;

        if (!$(event.target).is($(event.currentTarget))) {
          return;
        }

        _this3.$animationWrapper.off('animationend');

        _this3.$navigation.removeClass(_Enums.default.CLASS.IS_OPENING_STATE).addClass(_Enums.default.CLASS.IS_OPEN_STATE);

        _this3.$el.removeClass(_this3.CLASS_IS_OPENING_NAVIGATION); // When delayedPageLoad is true, the page loads after the header is finished opening
        // This makes the experience more smooth on mobile - otherwise the header's opening transition is a bit laggy
        // when the page loads at' the same as the header opening.


        if (delayedPageLoad) {
          _Utils.default.Http.load($clickedDepartment.attr('href'), _this3.SELECTOR_PAGE_CONTENT);
        }

        _this3.subscribe(_Enums.default.EVENT.ON_BODY_CLICKED, _this3._onBodyClick);
      });
      this.$el.addClass(_Enums.default.CLASS.IS_OPEN_STATE);
      this.publish(_Enums.default.EVENT.ON_NAVIGATION_MENU_OPEN);
      $openingCategory.addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
      this.$categoryMenu = $(this.SELECTOR_CATEGORY_MENU);
      this.$categoryMenu.removeClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
      this.$curatedContent = $(this.SELECTOR_CURATED_CONTENT);
      this.$curatedContent.removeClass(_Enums.default.CLASS.IS_HIDDEN_STATE);

      if (Modernizr.mq(_Enums.default.MQ.IS_MOBILE_HEADER) && $(this.SELECTOR_SEARCH).hasClass(this.CLASS_IS_OPEN)) {
        this.$categoryMenu = $(this.SELECTOR_CATEGORY_MENU);
        this.$categoryMenu.addClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
        this.$curatedContent = $(this.SELECTOR_CURATED_CONTENT);
        this.$curatedContent.addClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
      }

      this.headerContentVisible = true;
      this.visibleScrollOffset = this.$window.scrollTop();
    }
    /**
     * Trigger hiding the header on body click
     * @param e
     * @private
     */

  }, {
    key: "_onBodyClick",
    value: function _onBodyClick(e) {
      e.preventDefault();

      if (!$(e.currentTarget).is(this.$el)) {
        this._hideHeader();
      }
    }
    /**
     * On Header Click - fix for click propagation
     * @param e
     * @private
     */

  }, {
    key: "_onHeaderClick",
    value: function _onHeaderClick(e) {
      if (!$(e.target).hasClass(_Enums.default.CLASS.OPEN_LIGHTBOX)) {
        e.stopPropagation();
      }
    }
    /**
     * Hide the header
     * @param noTransition: used in animatePageContent();
     * @param scroll: used in animatePageContent();
     * @private
     */

  }, {
    key: "_hideHeader",
    value: function _hideHeader(noTransition, scroll) {
      var _this4 = this;

      if (this.$el.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        var $visibleCategory = this.$el.find(this.SELECTOR_CATEGORY_WRAPPER + '.' + _Enums.default.CLASS.IS_VISIBLE_STATE);
        this.isOpenOrCloseAnimationInProgress = true;
        this.$el.add(this.$navigation).removeClass(_Enums.default.CLASS.IS_OPEN_STATE);
        this.headerContentVisible = false;
        this.$navigation.addClass(_Enums.default.CLASS.IS_CLOSING_STATE);
        this.$el.addClass(this.CLASS_IS_CLOSING_NAVIGATION);
        this.$burgerIcon.removeClass(_Enums.default.CLASS.IS_OPEN_STATE);

        _Utils.default.Accessibility.hide(this.$navigationCurtain.add(this.$categoryGroup).add($visibleCategory));

        this.$animationWrapper.on('animationend', function (event) {
          _this4.isOpenOrCloseAnimationInProgress = false;

          if (!$(event.target).is($(event.currentTarget))) {
            return;
          }

          _this4.$animationWrapper.off('animationend');

          _this4.$navigationCurtain.css({
            transform: ''
          });

          $visibleCategory.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);

          _this4.$categoryWrapper.add(_this4.$navigation).removeClass(_Enums.default.CLASS.IS_CLOSING_STATE);

          _this4.$el.removeClass(_this4.CLASS_IS_CLOSING_NAVIGATION);
        });

        if (this.$el.hasClass(this.CLASS_HAS_OPEN_SEARCH) && Modernizr.mq(_Enums.default.MQ.IS_MOBILE_HEADER)) {
          this.$categoryWrapper.removeClass(_Enums.default.CLASS.IS_CLOSING_STATE);
          this.$el.removeClass(this.CLASS_HAS_OPEN_SEARCH);
          this.$body.removeClass(this.CLASS_IS_SEARCH_VISIBLE);
        }

        this.publish(_Enums.default.EVENT.ON_NAVIGATION_MENU_CLOSE);

        if (Modernizr.mq(_Enums.default.MQ.IS_MOBILE_HEADER)) {
          this.publish(_Enums.default.ACTION.ENABLE_SCROLL);
        }

        this.publish(_Enums.default.ACTION.HIDE_SEARCH);
        this.unsubscribe(_Enums.default.EVENT.ON_BODY_CLICKED, this._onBodyClick);

        this._animatePageContent(noTransition, scroll);
      }
    }
    /**
     * Animate or not the page content margin when the header closes
     * @param noTransition: If the user hides the header by scrolling past it, the page content should not animate up
     * @param scroll: if the user hides the header by scrolling past it,
     *                you need to slightly scroll the page in that moment so it doesn't cause a "jump"
     * @private
     */

  }, {
    key: "_animatePageContent",
    value: function _animatePageContent(noTransition, scroll) {
      var _this5 = this;

      var scrollValue = 0;

      if (noTransition) {
        this.$pageContent.css('transition', 'none');
        setTimeout(function () {
          _this5.$pageContent.css('transition', '');
        }, 500);
      }

      if (this.$pageContent.hasClass(this.CLASS_PAGE_IS_LOADED)) {
        this.publish(_Enums.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, {
          element: this.$navigationCurtain,
          margin: 0
        });

        if (scroll) {
          scrollValue = parseInt(this.$navigationCurtain.css('padding-bottom'));
        }

        this.$pageContent.removeClass(this.CLASS_PAGE_IS_LOADED);
        this.$window.scrollTop(scrollValue);
      }
    }
    /**
     * On Scroll handler:
     *          - Updates the header transparency
     *          - Adds border state to the header if it's not scrolled to the top
     *          - Pushes the header up if it's open
     *          - Trigger a closing of the header if the user scrolled past it
     * @private
     */

    /**
     * On Scroll handler:
     *          - Updates the header transparency
     *          - Adds border state to the header if it's not scrolled to the top
     *          - Pushes the header up if it's open
     *          - Trigger a closing of the header if the user scrolled past it
     * @private
     */

  }, {
    key: "_onScroll",
    value: function _onScroll(e) {
      this.currentScrollTop = document.body.scrollTop ? document.body.scrollTop : document.documentElement.scrollTop;

      if (this.$siteBanner.height() != undefined) {
        this.BANNER_HEIGHT = this.$siteBanner.height();
      } else {
        this.BANNER_HEIGHT = 0;
      }

      if (this.$errorBanner.height() == undefined && this.$siteBanner.height() == undefined) {
        this.stickyTrigger = 11;
      } // Reset height when switching viewport/header size change


      if (e && e.type == 'resize' && this.$el.outerHeight != this.height) {
        if (this.$window.outerWidth() != this.WINDOW_WIDTH) {
          this.WINDOW_WIDTH = this.$window.outerWidth();

          this._prepareStickyElement();
        }
      }

      if (this.$window.scrollTop() > 0) {
        this._makeSticky();
      } else if (this.$window.scrollTop() < this.BANNER_HEIGHT) {
        this._makeNormal();
      }

      if (!this.$el.hasClass(_Enums.default.CLASS.IS_STICKY) && !Modernizr.mq(_Enums.default.MQ.IS_MOBILE)) {
        if (this.BANNER_HEIGHT == 0) {
          this.$el.css('padding-top', '');
        }
      } else if (parseInt(this.$el.css('padding-top')) != this.stickyTrigger && this.$window.scrollTop() > this.stickyThreshold && !Modernizr.mq(_Enums.default.MQ.IS_MOBILE)) {
        this.$el.css('padding-top', this.stickyTrigger);
      } // makes sure we don't have issues when people are scrolling fast


      if (this.headerIsTransparent) {
        this._updateHeaderStates();
      }

      if (this.currentScrollTop > this.BORDER_SCROLL_START && !this.$el.hasClass(this.CLASS_IS_CHECKOUT)) {
        this.$el.addClass(this.CLASS_HAS_BORDER);
      } else {
        this.$el.removeClass(this.CLASS_HAS_BORDER);
      }

      if (!Modernizr.mq(_Enums.default.MQ.IS_MOBILE_HEADER) && this.headerContentVisible && this.currentScrollTop >= 0) {
        var scrollDiff = this.visibleScrollOffset - this.currentScrollTop,
            curtainHeight = this.$navigationCurtain.outerHeight(true),
            headerHeight = this.$el.outerHeight();

        if (scrollDiff >= 0) {
          this.visibleScrollOffset = this.currentScrollTop;
          this.$navigationCurtain.css({
            transform: ''
          });
        } else if (-scrollDiff < curtainHeight) {
          if (scrollDiff < this.CLOSE_SEARCH_MARGIN && this.$el.hasClass(this.CLASS_HAS_OPEN_SEARCH)) {
            this._hideHeader(true, true);
          }

          var topValue = scrollDiff;
          this.$navigationCurtain.css({
            transform: 'translate3d(0, ' + scrollDiff + 'px' + ', 0)'
          });
        } else {
          this._hideHeader(true, true);
        }
      }
    }
    /**
     * Updates the transparency and inverted state of the header.
     * @private
     */

  }, {
    key: "_updateHeaderStates",
    value: function _updateHeaderStates() {
      if (this.currentScrollTop > 0 && !this.headerContentVisible) {
        this.$el.removeClass(_Enums.default.CLASS.IS_TRANSPARENT);

        if (this.isInverted) {
          this.$el.removeClass(_Enums.default.CLASS.IS_INVERTED);
        }
      } else if (this.currentScrollTop == 0 && !this.headerContentVisible) {
        this.$el.addClass(_Enums.default.CLASS.IS_TRANSPARENT);

        if (this.isInverted) {
          this.$el.addClass(_Enums.default.CLASS.IS_INVERTED);
        }
      }
    }
    /**
     * On search icon click event handler
     * @private
     */

  }, {
    key: "_onSearchIconClick",
    value: function _onSearchIconClick(event) {
      event.preventDefault();
      event.stopPropagation();

      if (this.isOpenOrCloseAnimationInProgress && Modernizr.mq(_Enums.default.MQ.IS_MOBILE_HEADER)) {
        return;
      }

      if (!this.$el.hasClass(this.CLASS_HAS_OPEN_SEARCH)) {
        this.publish(_Enums.default.ACTION.SHOW_SEARCH);

        this._closeTooltips();

        if (Modernizr.mq(_Enums.default.MQ.IS_MOBILE_HEADER)) {
          this._showHeader();
        }
      } else {
        this.publish(_Enums.default.ACTION.HIDE_SEARCH);

        //샵인샵 iframe 때문에 수정 : 20210909
        this.$navigation.removeClass(_Enums.default.CLASS.IS_HALF_OPEN_STATE);

        this._hideHeader();

        //샵인샵 iframe 때문에 수정 : 20210909
        setTimeout(function(){
            $('.o-page-content').css('margin-top', $('.o-header').outerHeight());
        },1000)

      }
    }
    /**
     * Adds behavior for mobile match
     * @private
     */

  }, {
    key: "_onMobileMatch",
    value: function _onMobileMatch() {
      this.BORDER_SCROLL_START = 10;
      this.$burgerIcon.off('click', this._onBurgerIconClick);
      this.$burgerIcon.on('click', this._onBurgerIconClick);
      var $openFolder = this.$el.find(this.SELECTOR_OPEN_FOLDER);

      if ($openFolder.length < 1) {
        this.$animationWrapper.scrollTop(0);
        return;
      }

      var $siblingContainer = $openFolder.siblings(this.SELECTOR_CATEGORY_GROUP);
      $openFolder.removeClass(_Enums.default.CLASS.IS_OPEN_STATE);
      $siblingContainer.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE).addClass(this.CLASS_IS_UNDERNEATH);
      this.$animationWrapper.scrollTop(0);
    }
    /**
     * Adds behavior for tablet and desktop match
     * @private
     */

  }, {
    key: "_onTabletAndDesktopMatch",
    value: function _onTabletAndDesktopMatch() {
      var $openFolder = this.$el.find(this.SELECTOR_MAIN_CAT_OPEN_FOLDER);
      var $siblingContainer = $openFolder.siblings(this.SELECTOR_CATEGORY_GROUP);
      $openFolder.addClass(_Enums.default.CLASS.IS_OPEN_STATE);
      $siblingContainer.removeClass(this.CLASS_IS_UNDERNEATH).addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
      this.BORDER_SCROLL_START = 0;
      this.$burgerIcon.off('click', this._onBurgerIconClick);

      if (Modernizr.mq(_Enums.default.MQ.IS_TABLET)) {
        this.$burgerIcon.on('click', this._onBurgerIconClick);
      }

      this.$staticNotificationTicker.hide();
    }
    /**
     * Click handler on the burger icon. Only listens to it when on mobile & tablet.
     * @private
     */

  }, {
    key: "_onBurgerIconClick",
    value: function _onBurgerIconClick(e) {
      if (!this.isOpenOrCloseAnimationInProgress) {
        if (this.$burgerIcon.hasClass(_Enums.default.CLASS.IS_OPEN_STATE) && !this.$el.hasClass(this.CLASS_HAS_OPEN_SEARCH)) {
          this._hideHeader();
        } else {
          if (this.$el.hasClass(this.CLASS_HAS_OPEN_SEARCH)) {
            this.publish(_Enums.default.ACTION.HIDE_SEARCH);

            if (this.$el.hasClass(this.CLASS_MOBILE_EXTENDED)) {
              this._showHeader();

              this.$navigationCurtain.scrollTop(0);
              return;
            }
          }

          this._showHeader();

          this.$navigationCurtain.scrollTop(0);
        }
      }
    }
    /**
     * Animate the scroll top to a certain element's position in the navigation curtain
     * @private
     */

  }, {
    key: "_scrollToElementinNavigationCurtain",
    value: function _scrollToElementinNavigationCurtain(element, callback) {
      var extraScroll = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
      var totalScroll = 0;

      if (extraScroll != 0) {
        var elOffsetTop = this.$window.scrollTop() === 0 ? element.offset().top - this.$el.outerHeight() + extraScroll : element.position().top - 8;
        totalScroll = elOffsetTop + this.$navigationCurtain.scrollTop();
      }

      this.$navigationCurtain.animate({
        scrollTop: totalScroll
      }, this.ANIMATION_DURATION, callback && typeof callback == 'function' ? callback : '');
    }
    /**
     * Click handler for the tooltip triggers (My Account icon / Info icon)
     * @private
     */

  }, {
    key: "_onTooltipTriggerClick",
    value: function _onTooltipTriggerClick(e) {
      e.preventDefault();
      var $currentTab = $(e.currentTarget).parent(),
          $currentContent = undefined;
      this.$tooltipContent.removeClass(_Enums.default.CLASS.IS_OPEN_STATE);

      _Utils.default.Accessibility.hide(this.$tooltipContent);

      if ($currentTab.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        $currentTab.removeClass(_Enums.default.CLASS.IS_OPEN_STATE);
      } else {
        this.$tooltipTrigger.parent().removeClass(_Enums.default.CLASS.IS_OPEN_STATE);
        $currentTab.addClass(_Enums.default.CLASS.IS_OPEN_STATE);

        if ($(e.currentTarget).hasClass(this.CLASS_INFO_ICON)) {
          this.$navigationCurtain.attr('aria-hidden', 'false');
          this.$informationSection.addClass(_Enums.default.CLASS.IS_OPEN_STATE);
          $currentContent = this.$informationSection;
        } else {
          this.$navigationCurtain.attr('aria-hidden', 'true');
          $currentContent = $currentTab.find(this.SELECTOR_TOOLTIP_CONTENT);
        }

        _Utils.default.Accessibility.show($currentContent);

        this._hideHeader();

        this.subscribe(_Enums.default.EVENT.ON_BODY_CLICKED, this._closeTooltips);
      }
    }
    /**
     * Close the tooltips
     * @private
     */

  }, {
    key: "_closeTooltips",
    value: function _closeTooltips() {
      this.$tooltipTrigger.parent().removeClass(_Enums.default.CLASS.IS_OPEN_STATE);
      this.$tooltipContent.removeClass(_Enums.default.CLASS.IS_OPEN_STATE);

      _Utils.default.Accessibility.hide(this.$tooltipContent);

      this.unsubscribe(_Enums.default.EVENT.ON_BODY_CLICKED, this._closeTooltips);
    }
    /**
     * When the page content has been replaced with AJAX, update this variable with the class coming from the new page
     * @private
     */

  }, {
    key: "_onPageContentReplaced",
    value: function _onPageContentReplaced() {
      this.headerIsTransparent = this.$el.hasClass(_Enums.default.CLASS.IS_TRANSPARENT);
    }
    /**
     * Triggered on Mobile only. This function blocks the inverted behavior on the header in cases where the text block
     * goes first on mobile, but also checks the background colors of the hero and body to see if they are dark enough
     * for the inverted behavior to remain.
     * @private
     */
    //TODO: Delete this function if it's not needed anymore. Currently kept here for possible future use.
    // Has old/disconnected selectors.

  }, {
    key: "_blockInversion",
    value: function _blockInversion() {
      var bodyBackgroundColor = this.$body.css('backgroundColor'),
          heroBackgroundColor = $(this.SELECTOR_HERO).css('backgroundColor'),
          contrast;

      if (heroBackgroundColor) {
        contrast = this._getContrast(heroBackgroundColor);

        if (contrast > 128) {
          this.$el.addClass(this.CLASS_BLOCK_INVERSION);
          return;
        } else if (contrast === -1 && bodyBackgroundColor) {
          contrast = this._getContrast(bodyBackgroundColor);

          if (contrast > 128 || contrast === -1) {
            this.$el.addClass(this.CLASS_BLOCK_INVERSION);
            return;
          }
        }
      }
    }
    /**
     * Matches the values of the rgba value and passes them to
     * @param color A string like rgb(255, 255, 255) or rgba(255, 255, 255, 1)
     * @private
     */
    //TODO: Delete this function if it's not needed anymore. Currently kept here for possible future use.

  }, {
    key: "_getContrast",
    value: function _getContrast(color) {
      return color.match(/\d+(!,)|(\d+\.\d+|\d+)/g).reduce(this._getAverageContrast);
    }
    /**
     * Calculates the average contrast based on the incoming values from the rgb/a string.
     * @private
     */
    //TODO: Delete this function if it's not needed anymore. Currently kept here for possible future use.

  }, {
    key: "_getAverageContrast",
    value: function _getAverageContrast(acc, val, index, d) {
      if (d.length === 4 && index === d.length - 1) {
        // rgba
        if (parseFloat(val) === 0) {
          return -1;
        }

        return parseFloat(acc) * parseFloat(val) / (d.length - 1);
      }

      if (d.length === 3 && index === d.length - 1) {
        // rgb
        return (parseFloat(acc) + parseFloat(val)) / d.length;
      }

      return parseFloat(acc) + parseFloat(val);
    } //TODO: Delete this function if it's not needed anymore. Currently kept here for possible future use.
    // Has old/disconnected selectors.

  }, {
    key: "_hideLoadIndicator",
    value: function _hideLoadIndicator() {
      clearTimeout(this.loadIndicatorTimer);
      this.$iconNavigation.removeClass(_Enums.default.CLASS.IS_LOADING);
    } //TODO: Delete this function if it's not needed anymore. Currently kept here for possible future use.
    // Has old/disconnected selectors.

  }, {
    key: "_showLoadIndicator",
    value: function _showLoadIndicator() {
      var _this6 = this;

      clearTimeout(this.loadIndicatorTimer);
      this.loadIndicatorTimer = setTimeout(function () {
        _this6.$iconNavigation.addClass(_Enums.default.CLASS.IS_LOADING);
      }, 250);
    }
    /**
     * ON_ERROR_BANNER_RESIZE event handler.
     * @private
     */

  }, {
    key: "_onErrorBannerResize",
    value: function _onErrorBannerResize(args) {
      var _this7 = this;

      if (args.animationDuration) {
        this.$el.animate({
          'margin-top': args.newHeight
        }, args.animationDuration);
        this.$myPage.animate({
          'margin-top': args.newHeight
        }, args.animationDuration);
        this.$oMenuList.animate({
          'margin-top': args.newHeight
        }, args.animationDuration);
      } else {
        this.$el.css('margin-top', args.newHeight);
        this.$myPage.css('margin-top', args.newHeight);
        this.$oMenuList.css('margin-top', args.newHeight);

        if (this.$el.hasClass(_Enums.default.CLASS.IS_STICKY) && !this.$el.hasClass(this.CLASS_ANIMATE_HIDE)) {
          if (this.$errorBanner.height() != undefined && this.$siteBanner.height() != undefined) {
            this.$el.css('margin-top', this.$errorBanner.height());
            this.$myPage.css('margin-top', this.$errorBanner.height());
            this.$oMenuList.css('margin-top', this.$errorBanner.height());
          } else if (this.$errorBanner.height() != undefined && this.$siteBanner.height() == undefined) {
            this.$el.css('margin-top', args.newHeight);
            this.$myPage.css('margin-top', args.newHeight);
            this.$oMenuList.css('margin-top', args.newHeight);
          } else {
            this.$el.css('margin-top', 0);
            this.$myPage.css('margin-top', 0);
            this.$oMenuList.css('margin-top', 0);
          }
        }
      }

      setTimeout(function () {
        if (_this7.$el.hasClass(_Enums.default.CLASS.IS_STICKY)) {
          _this7.$el.removeClass(_Enums.default.CLASS.IS_STICKY);
        }

        _this7._onScroll();
      }, this.DELAY_TIME);
    }
  }]);

  return OHeader;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OHeader;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66,"./../../utils.js":113}],89:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OHero = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OHero, _AppeaserComponentBas);

  var _super = _createSuper(OHero);

  /**
   * Constructor, will run before page loaded
   */
  function OHero() {
    var _this;

    _classCallCheck(this, OHero);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OHero, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OHero.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_PLAY_BUTTON = '.video-play-button';
      this.CLASS_HIDDEN_VIDEO = 'has-hidden-video';
      this.SELECTOR_TAKEOVER_WRAPPER = '.takeover-wrapper';
      this.ANIMATION_DURATION = 300;
      this.SET_INTERVAL = 0;
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$playButton = this.$el.find(this.SELECTOR_PLAY_BUTTON);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._showVideo = this._showVideo.bind(this);
      this._startChange = this._startChange.bind(this);
      this._stopChange = this._stopChange.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$playButton.on('click', this._showVideo);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$playButton.off('click', this._showVideo);
    }
    /**
     * Attach media query handlers
     * @private
     */

  }, {
    key: "_attachMQHandlers",
    value: function _attachMQHandlers() {
      this.MQMobileHandler = {
        match: this._startChange.bind(this)
      };
      this.MQTabletAndDesktopHandler = {
        match: this._stopChange.bind(this)
      };
      enquire.register(_Enums.default.MQ.IS_MOBILE, this.MQMobileHandler);
      enquire.register(_Enums.default.MQ.TABLET_AND_DESKTOP_RANGE, this.MQTabletAndDesktopHandler);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._attachMQHandlers();
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Shows hero video
     * @private
     */

  }, {
    key: "_showVideo",
    value: function _showVideo(e) {
      $(e.currentTarget).closest(this.SELECTOR_TAKEOVER_WRAPPER).hide();
      this.$el.removeClass(this.CLASS_HIDDEN_VIDEO);
    }
    /**
     * Change values (for images and links) after 5 seconds (in Mobile view)
     * @private
     */

  }, {
    key: "_startChange",
    value: function _startChange() {
      var i = 0;

      var _changeForMobileView = function _changeForMobileView() {
        if (i == 0) {
          i = i + 1;
          $('.hero-takeover.double-image .image-wrapper > :nth-child(odd)').hide();
          $('.hero-takeover.double-image .image-wrapper > :nth-child(even)').show();
        } else {
          i = 0;
          $('.hero-takeover.double-image .image-wrapper > :nth-child(odd)').show();
          $('.hero-takeover.double-image .image-wrapper > :nth-child(even)').hide();
        }
      };

      this.SET_INTERVAL = setInterval(_changeForMobileView, 5000); //start _changeForMobileView() after 5 seconds
    }
    /**
     * Stop setInterval method (in Desktop view). Set default values.
     * @private
     */

  }, {
    key: "_stopChange",
    value: function _stopChange() {
      clearInterval(this.SET_INTERVAL);
      $('.hero-takeover.double-image .image-wrapper > :nth-child(odd)').show();
      $('.hero-takeover.double-image .image-wrapper > :nth-child(even)').show();
      $('.hero-takeover .takeover-background').css('display', '');
    }
  }]);

  return OHero;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OHero;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],90:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _index = _interopRequireDefault(require("common/organisms/o-lightbox/index"));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OLightbox = /*#__PURE__*/function (_CommonLightbox) {
  _inherits(OLightbox, _CommonLightbox);

  var _super = _createSuper(OLightbox);

  /**
   * Constructor, will run before page loaded
   */
  function OLightbox() {
    _classCallCheck(this, OLightbox);

    return _super.apply(this, arguments);
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OLightbox, [{
    key: "destroy",
    value: function destroy() {
      _get(_getPrototypeOf(OLightbox.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      _get(_getPrototypeOf(OLightbox.prototype), "_declareConstants", this).call(this);

      this.ANIMATION_DELAY = 0;
      this.animation_slide_in_duration = 0;
      this.ANIMATING_OVERLAY = false;
      this.OVERLAY_CLASSES = 'q-opacity-90 q-bg-lightbox-overlay-grey';
      this.SELECTOR_DROPDOWN = '[class^="m-dropdown"]';
      this.CLASS_OPEN_NTN_LIGHTBOX = 'open-newsletter-ntn-lightbox';
      this.CLASS_COUNTRY_DROPDOWN = 'country-dropdown';
      this.CLASS_IS_VISIBLE = 'is-visible';
      this.CLASS_NEWSLETTER_POPUP = '.o-newsletter-popup';
      this.CLASS_LANGUAGE_SELECT = '.language-select';
      this.CLASS_IS_OPEN = 'is-open';
      this.TEMPLATE_LANGUAGE_SELECT = 'language-select';
    }
    /**
     * Caching DOM elements for performance
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      _get(_getPrototypeOf(OLightbox.prototype), "_cacheDOMElements", this).call(this);

      this.$newsletterPopup = this.$body.find(this.CLASS_NEWSLETTER_POPUP);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _get(_getPrototypeOf(OLightbox.prototype), "_attachSubscribers", this).call(this);

      this.subscribe(_Enums.default.EVENT.ON_KEY_DOWN, this._onKeyDown);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _get(_getPrototypeOf(OLightbox.prototype), "_detachSubscribers", this).call(this);

      this.unsubscribe(_Enums.default.EVENT.ON_KEY_DOWN, this._onKeyDown);
      this.unsubscribe(_Enums.default.EVENT.ON_OVERLAY_CLICKED, this._hide);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Key down event handler
     * @param e
     * @private
     */

  }, {
    key: "_hide",
    value: function _hide(data) {
      if (Cookies.get(this.TEMPLATE_LANGUAGE_SELECT) && $(this.CLASS_NEWSLETTER_POPUP) && !this.$newsletterPopup.hasClass(_Enums.default.CLASS.IS_VISIBLE_STATE) && $(this.CLASS_LANGUAGE_SELECT).hasClass(this.CLASS_IS_OPEN)) {
        this.$newsletterPopup.addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
      }

      _get(_getPrototypeOf(OLightbox.prototype), "_hide", this).call(this, data);
    }
  }, {
    key: "_onKeyDown",
    value: function _onKeyDown(e) {
      if (e.key.match(_Enums.default.KEYSTROKE.ESCAPE) && this.$el.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        this._hide();
      }
    }
  }, {
    key: "_onClick",
    value: function _onClick(event) {
      if (!$(event.target).hasClass(_Enums.default.CLASS.OPEN_LIGHTBOX) && !$(event.target).hasClass(this.CLASS_OPEN_NTN_LIGHTBOX)) {
        event.stopPropagation(); // Stop event bubbling to the body tag.
      }

      if ($(event.target).is(this.$el)) {
        this.publish(_Enums.default.EVENT.ON_OUTSIDE_LIGHTBOX_CLICKED);

        this._hide();
      } // Fixes a global bug where the expanded filter dropdown doesn't close when we click on lightbox body.


      if (this.$el.find(this.SELECTOR_FILTER_DROPDOWN).length) {
        var $target = $(event.target),
            $filterDropdown = this.$el.find(this.SELECTOR_FILTER_DROPDOWN);

        if ($filterDropdown.hasClass(_Enums.default.CLASS.IS_OPEN_STATE) && !$filterDropdown.hasClass(this.CLASS_COUNTRY_DROPDOWN) && (!$target.closest(this.SELECTOR_DROPDOWN).length || !$target.closest(this.SELECTOR_DROPDOWN).is($filterDropdown))) {
          $filterDropdown.removeClass(_Enums.default.CLASS.IS_OPEN_STATE);
          this.publish(_Enums.default.EVENT.ON_DROPDOWN_CLOSED_FILTERS);
        }
      }
    }
    /**
     * Opens lightbox, template can be used to fetch the html script type/html and populate lightbox
     * @param options - Lightbox configurations: { $element: [LIGHTBOX_CONTENT], classes: [LIGHTBOX_CLASSES], template: 'tmpl-name' }
     * @private
     */

  }, {
    key: "_show",
    value: function _show(options) {
      this.contentHistory.push(options);

      if (this.contentHistory.length > 1) {
        this._performContentSwitch(options);
      } else {
        this.subscribe(_Enums.default.EVENT.ON_OVERLAY_CLICKED, this._hide);

        this._openLightbox(options); // publish that we've opened


        this.publish(_Enums.default.EVENT.ON_LIGHTBOX_OPEN, options);
        this.publish(_Enums.default.EVENT.ON_LIGHTBOX_LEVEL_CHANGED, this.contentHistory.length); // make sure we don't have iphone issues with iphone

        if (Modernizr.mq(_Enums.default.MQ.IS_MOBILE)) {
          var previousScrollPosition = this.$body.scrollTop();
          this.$body.animate({
            scrollTop: previousScrollPosition - 1
          }, 10).animate({
            scrollTop: previousScrollPosition
          }, 10);
        }
      }

      if (Cookies.get(this.TEMPLATE_LANGUAGE_SELECT)) {
        this.$newsletterPopup.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
      }
    }
  }]);

  return OLightbox;
}(_index.default); // Export this so we can pick it up and import in main.js


module.exports = OLightbox;

},{"./../../enums.js":66,"common/organisms/o-lightbox/index":28}],91:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

var _Utils = _interopRequireDefault(require('./../../utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OLocalNavigation = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OLocalNavigation, _AppeaserComponentBas);

  var _super = _createSuper(OLocalNavigation);

  /**
   * Constructor, will run before page loaded
   */
  function OLocalNavigation() {
    var _this;

    _classCallCheck(this, OLocalNavigation);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();

    _this._jQueryScopeBinding();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OLocalNavigation, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      this._detachMQHandlers();

      _get(_getPrototypeOf(OLocalNavigation.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_RIGHT_SHOW_MORE_BUTTON = '.show-more-right-btn';
      this.SELECTOR_LEFT_SHOW_MORE_BUTTON = '.show-more-left-btn';
      this.SELECTOR_A_LINK = '.a-link';
      this.FADE_TIME = 400;
      this.INTERVAL_TIMER = 25;
      this.SCROLL_MARGIN = 20;
      this.SCROLL_TIMEOUT = 50;
      this.CLASS_IS_TRANSPARENT = 'is-transparent';
      this.CLASS_IS_LONG = 'is-long';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      this._cacheDOMElements();

      this._attachDOMListeners();

      this._attachSubscribers();

      this._attachMQHandlers();

      this._checkOpacity();
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$window = $(window);
      this.$showMoreRightBtn = this.$el.find(this.SELECTOR_RIGHT_SHOW_MORE_BUTTON);
      this.$showMoreLeftBtn = this.$el.find(this.SELECTOR_LEFT_SHOW_MORE_BUTTON);
      this.$scrollElement = this.$el.find('ul');
      this.$scrollElementWidth = this.$scrollElement.outerWidth(true);
      this.currentXScroll = 0;
      this.widthOfNav = this.$scrollElement[0].scrollWidth;
      this.scrollLength = 100;
      this.$links = this.$el.find(this.SELECTOR_A_LINK);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_OVERLAY_CLICKED, this._closeMobileFilter);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_OVERLAY_CLICKED, this._closeMobileFilter);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {
      this._adjustNavWidth();
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$showMoreRightBtn.on('click', this._showMoreRight);
      this.$showMoreLeftBtn.on('click', this._showMoreLeft);
      this.$scrollElement.on('scroll', this._showOrHideBtn);
      this.$window.on('resize', this._adjustNavWidth);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$showMoreRightBtn.off('click', this._showMoreRight);
      this.$showMoreLeftBtn.off('click', this._showMoreLeft);
      this.$scrollElement.off('scroll', this._showOrHideBtn);
      this.$window.off('resize', this._adjustNavWidth);
    }
  }, {
    key: "_attachMQHandlers",
    value: function _attachMQHandlers() {}
  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {}
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._showMoreRight = this._showMoreRight.bind(this);
      this._showMoreLeft = this._showMoreLeft.bind(this);
      this._animateScroll = this._animateScroll.bind(this);
      this._showOrHideBtn = this._showOrHideBtn.bind(this);
      this._adjustNavWidth = this._adjustNavWidth.bind(this);
      this._checkOpacity = this._checkOpacity.bind(this);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_adjustNavWidth",
    value: function _adjustNavWidth() {
      var halfWindowWidth = this.$window.width() / 2;

      if (this.$scrollElementWidth > halfWindowWidth) {
        this.$el.addClass(this.CLASS_IS_LONG);
      } else {
        this.$el.removeClass(this.CLASS_IS_LONG);
      }
    }
    /**
     * Show more items in local navigation
     * @private
     */

  }, {
    key: "_showMoreRight",
    value: function _showMoreRight() {
      var newScrollLeft = this.$scrollElement.scrollLeft() + 200;
      this.$scrollElement.animate({
        scrollLeft: newScrollLeft
      }, 50);
    }
  }, {
    key: "_showMoreLeft",
    value: function _showMoreLeft() {
      this.$scrollElement.animate({
        scrollLeft: 0
      }, 50);
    }
  }, {
    key: "_animateScroll",
    value: function _animateScroll(slideRight) {
      var _this2 = this;

      var scrollAmount = 0;
      var slideTimer = setInterval(function () {
        if (slideRight) {
          _this2.$scrollElement[0].scrollLeft += 20;
        } else {
          _this2.$scrollElement[0].scrollLeft -= 20;
        }

        scrollAmount += 5;

        if (scrollAmount >= _this2.scrollLength) {
          window.clearInterval(slideTimer);
          _this2.currentXScroll = _this2.$scrollElement.scrollLeft();

          _this2._showOrHideBtn();
        }
      }, this.INTERVAL_TIMER);
    }
  }, {
    key: "_showOrHideBtn",
    value: function _showOrHideBtn() {
      var currentScrollLeft = this.$scrollElement.scrollLeft();

      if (currentScrollLeft < 1) {
        this.$showMoreLeftBtn.addClass(this.CLASS_IS_TRANSPARENT);
        this.$showMoreLeftBtn.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
      } else {
        this.$showMoreLeftBtn.addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
        this.$showMoreLeftBtn.removeClass(this.CLASS_IS_TRANSPARENT);
      }

      if (currentScrollLeft + this.$scrollElement.outerWidth(true) > this.$scrollElement[0].scrollWidth - this.SCROLL_MARGIN) {
        this.$showMoreRightBtn.addClass(this.CLASS_IS_TRANSPARENT);
        this.$showMoreRightBtn.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
      } else {
        this.$showMoreRightBtn.addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
        this.$showMoreRightBtn.removeClass(this.CLASS_IS_TRANSPARENT);
      }
    }
  }, {
    key: "_checkOpacity",
    value: function _checkOpacity() {
      if (this.$el.css('opacity') == 0) {
        _Utils.default.Accessibility.preventFocus(this.$links);
      } else {
        _Utils.default.Accessibility.allowFocus(this.$links);
      }
    }
  }]);

  return OLocalNavigation;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OLocalNavigation;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66,"./../../utils.js":113}],92:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _index = _interopRequireDefault(require("common/organisms/o-map/index"));

var _Utils = _interopRequireDefault(require('./../../utils.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OMap = /*#__PURE__*/function (_BaseMap) {
  _inherits(OMap, _BaseMap);

  var _super = _createSuper(OMap);

  /**
   * Constructor, will run before page loaded
   */
  function OMap() {
    _classCallCheck(this, OMap);

    return _super.apply(this, arguments);
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OMap, [{
    key: "destroy",
    value: function destroy() {
      _get(_getPrototypeOf(OMap.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      _get(_getPrototypeOf(OMap.prototype), "_declareConstants", this).call(this); //Used to position the hover tooltip in pickup location


      this.TOOLTIP_VERTICAL_OFFSET = -50;
      this.TOOLTIP_HORIZONTAL_OFFSET = 40; //Used if the hover tooltip can have more than one row

      this.TOOLTIP_HAS_FLEXIBLE_HEIGHT = false;
      this.STYLE_ARRAY = [];
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      _get(_getPrototypeOf(OMap.prototype), "_cacheDOMElements", this).call(this);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Closes any open info box in the map
     * @private
     */

  }, {
    key: "_closeInfoBox",
    value: function _closeInfoBox() {
      if (this.infowindow) {
        this.infowindow.close();
      }
    }
    /**
     * Opens infobox
     * @param marker
     * @private
     */

  }, {
    key: "_openInfoBox",
    value: function _openInfoBox(marker) {
      var storeData = _Utils.default.Stores.createStoreInformationDataObject(marker.data);

      this.infowindow = new google.maps.InfoWindow({
        content: storeData.addressLines.join('<br>')
      });
      this.infowindow.open(this.$map, marker);
    }
    /**
     * Handles a click on a marker.
     * @private
     */

  }, {
    key: "_onMarkerClick",
    value: function _onMarkerClick(marker) {
      _get(_getPrototypeOf(OMap.prototype), "_onMarkerClick", this).call(this, marker);

      this._closeInfoBox();

      this._openInfoBox(marker);
    }
  }, {
    key: "_initMap",
    value: function _initMap() {
      this.icon = _Utils.default.Markers.icon();
      this.iconHover = _Utils.default.Markers.iconHover();
      this.iconClick = _Utils.default.Markers.iconHover();
      this.publish(_Enums.default.EVENT.ON_MAP_INITIALIZED);
    }
  }]);

  return OMap;
}(_index.default); // Export this so we can pick it up and import in main.js


module.exports = OMap;

},{"./../../enums.js":66,"./../../utils.js":113,"common/organisms/o-map/index":30}],93:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _BaseOMyDetails2 = _interopRequireDefault(require('./../../../../common/organisms/o-my-details/index.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OMyDetails = /*#__PURE__*/function (_BaseOMyDetails) {
  _inherits(OMyDetails, _BaseOMyDetails);

  var _super = _createSuper(OMyDetails);

  /**
   * Constructor, will run before page loaded
   */
  function OMyDetails() {
    _classCallCheck(this, OMyDetails);

    return _super.apply(this, arguments);
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OMyDetails, [{
    key: "destroy",
    value: function destroy() {
      _get(_getPrototypeOf(OMyDetails.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      _get(_getPrototypeOf(OMyDetails.prototype), "_declareConstants", this).call(this);

      this.SELECTOR_NUMBER_INPUT = '.m-input.staff-card .a-input';
      this.ANIMATION_SHOW_OPTIONS = {
        durations: 250,
        easing: 'swing'
      };
      this.ANIMATION_HIDE_OPTIONS = {
        durations: 150,
        easing: 'swing'
      };
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _get(_getPrototypeOf(OMyDetails.prototype), "_onDOMReady", this).call(this);
    }
    /**
     * Caching DOM elements for performance
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      _get(_getPrototypeOf(OMyDetails.prototype), "_cacheDOMElements", this).call(this);

      this.$numberInput = this.$el.find(this.SELECTOR_NUMBER_INPUT);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      _get(_getPrototypeOf(OMyDetails.prototype), "_jQueryScopeBinding", this).call(this);

      this._validateStaffCard = this._validateStaffCard.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _get(_getPrototypeOf(OMyDetails.prototype), "_attachSubscribers", this).call(this);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _get(_getPrototypeOf(OMyDetails.prototype), "_detachSubscribers", this).call(this);
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      _get(_getPrototypeOf(OMyDetails.prototype), "_attachDOMListeners", this).call(this);

      this.$numberInput.on('keydown', this._validateStaffCard);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      _get(_getPrototypeOf(OMyDetails.prototype), "_detachDOMListeners", this).call(this);

      this.$numberInput.off('keydown', this._validateStaffCard);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_validateStaffCard",
    value: function _validateStaffCard(event) {
      var allowedKeysRegEx = /^Delete$|^Del$|^Backspace$|^Tab|^ArrowLeft$|^Left$|^ArrowRight$|^Right$/,
          numberRegEx = /^[0-9]$/,
          editRegEx = /^X$|^x$|^V$|^v$|^C$|^c$|^A$|^a$/; //Allow edits e.g. Cmd + C

      if (event.key.match(editRegEx) && (event.metaKey || event.ctrlKey)) {
        return true;
      } //Allow navigating the text with the cursor
      else if (event.key.match(allowedKeysRegEx)) {
          return true;
        } //Allow numbers only
        else if (!event.key.match(numberRegEx)) {
            return false;
          } else {
            return true;
          }
    }
  }]);

  return OMyDetails;
}(_BaseOMyDetails2.default); // Export this so we can pick it up and import in main.js


module.exports = OMyDetails;

},{"./../../../../common/organisms/o-my-details/index.js":31}],94:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OMyPageNavigation = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OMyPageNavigation, _AppeaserComponentBas);

  var _super = _createSuper(OMyPageNavigation);

  /**
   * Constructor, will run before page loaded
   */
  function OMyPageNavigation() {
    var _this;

    _classCallCheck(this, OMyPageNavigation);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OMyPageNavigation, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OMyPageNavigation.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_ACTIVE_MENU_ITEM = 'li.is-active';
      this.SELECTOR_SCROLLABLE_WRAPPER = '.o-list';
      this.SELECTOR_SCROLLABLE_LIST = this.SELECTOR_SCROLLABLE_WRAPPER + ' ul';
      this.NAVIGATION_ITEM_WIDTH = 0;
      this.ANIMATION_DURATION = 350;
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$activeItem = this.$el.find(this.SELECTOR_ACTIVE_MENU_ITEM);
      this.$scrollableWrapper = this.$el.find(this.SELECTOR_SCROLLABLE_WRAPPER);
      this.$scrollableList = this.$el.find(this.SELECTOR_SCROLLABLE_LIST);
      this.$scrollableListItem = this.$scrollableList.find('li');
      this.$window = $(window);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._centerCurrentNavigationIcon = this._centerCurrentNavigationIcon.bind(this);
      this._adjustingItemsWidth = this._adjustingItemsWidth.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$window.on('resize load', this._adjustingItemsWidth);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$window.off('resize load', this._adjustingItemsWidth);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._centerCurrentNavigationIcon();
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Horizontally centers the currently chosen navigation item.
     * @private
     */

  }, {
    key: "_centerCurrentNavigationIcon",
    value: function _centerCurrentNavigationIcon() {
      var scrollTo = this.$activeItem.offset().left - (this.$window.width() - this.$activeItem.outerWidth()) / 2;
      this.$scrollableWrapper.animate({
        scrollLeft: scrollTo
      }, this.ANIMATION_DURATION);
    }
    /**
     * Calculating overflowed items, and change the with of elements, so next element is always visible to user
     * @private
     */

  }, {
    key: "_adjustingItemsWidth",
    value: function _adjustingItemsWidth() {
      var wrapperWidth = this.$scrollableWrapper.outerWidth(),
          listWidth = this.$scrollableList.outerWidth();

      if (wrapperWidth < listWidth) {
        if (!this.NAVIGATION_ITEM_WIDTH) this.NAVIGATION_ITEM_WIDTH = this.$scrollableListItem.outerWidth();
        var numberOfElements = parseInt(wrapperWidth / this.NAVIGATION_ITEM_WIDTH) + 0.5,
            newWidth = Math.floor(wrapperWidth / numberOfElements);
        this.$scrollableListItem.css('min-width', newWidth + 'px');
      } else {
        this.$scrollableListItem.css('min-width', '');
      }
    }
  }]);

  return OMyPageNavigation;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OMyPageNavigation;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],95:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var ONavigation = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(ONavigation, _AppeaserComponentBas);

  var _super = _createSuper(ONavigation);

  /**
   * Constructor, will run before page loaded
   */
  function ONavigation() {
    var _this;

    _classCallCheck(this, ONavigation);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(ONavigation, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(ONavigation.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_NAVIGATION_CURTAIN = '.navigation-curtain';
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$navigationCurtain = this.$el.find(this.SELECTOR_NAVIGATION_CURTAIN);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_NAVIGATION_MENU_OPEN, this._onNavigationOpen);
      this.subscribe(_Enums.default.EVENT.ON_NAVIGATION_MENU_CLOSE, this._onNavigationClose);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_NAVIGATION_MENU_OPEN, this._onNavigationOpen);
      this.unsubscribe(_Enums.default.EVENT.ON_NAVIGATION_MENU_CLOSE, this._onNavigationClose);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {}
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$navigationCurtain.off('touchstart', this._onNavigationTouchStart);
      this.$navigationCurtain.off('touchmove', this._onNavigationTouchMove);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();
    }
  }, {
    key: "_attachMQHandlers",
    value: function _attachMQHandlers() {}
  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {}
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * ON_NAVIGATION_MENU_OPEN callback.
     * @private
     */

  }, {
    key: "_onNavigationOpen",
    value: function _onNavigationOpen() {
      if (Modernizr.mq(_Enums.default.MQ.MOBILE_AND_TABLET_RANGE)) {
        this.$navigationCurtain.on('touchstart', this._onNavigationTouchStart);
        this.$navigationCurtain.on('touchmove', this._onNavigationTouchMove);
      }
    }
    /**
     * ON_NAVIGATION_MENU_CLOSE callback.
     * @private
     */

  }, {
    key: "_onNavigationClose",
    value: function _onNavigationClose() {
      //Always detach listeners so we can handle runtime resizing of the window.
      this.$navigationCurtain.off('touchstart', this._onNavigationTouchStart);
      this.$navigationCurtain.off('touchmove', this._onNavigationTouchMove);
    }
    /**
     * Touchstart event handler on the navigation items
     * @private
     */

  }, {
    key: "_onNavigationTouchStart",
    value: function _onNavigationTouchStart(e) {
      this.allowUp = this.scrollTop > 0;
      this.allowDown = this.scrollTop < this.scrollHeight - this.clientHeight;
      this.lastY = e.originalEvent.targetTouches[0].pageY;
    }
    /**
     * Touchmove event handler on the navigation items
     * @private
     */

  }, {
    key: "_onNavigationTouchMove",
    value: function _onNavigationTouchMove(e) {
      var up = e.originalEvent.targetTouches[0].pageY > this.lastY,
          down = !up;

      if (e.originalEvent.scale !== undefined && e.originalEvent.scale !== 1) {
        e.preventDefault();
      }

      this.lastY = e.originalEvent.targetTouches[0].pageY;

      if (up && this.allowUp || down && this.allowDown) {
        e.stopPropagation();
      } else {
        e.preventDefault();
      }
    }
  }]);

  return ONavigation;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = ONavigation;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],96:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

var _Utils = require('./../../utils.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var ONewsletterPopup = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(ONewsletterPopup, _AppeaserComponentBas);

  var _super = _createSuper(ONewsletterPopup);

  /**
   * Constructor, will run before page loaded
   */
  function ONewsletterPopup() {
    var _this;

    _classCallCheck(this, ONewsletterPopup);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(ONewsletterPopup, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(ONewsletterPopup.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.CLASS_POPUP_HISTORY = 'newsletter-popup';
      this.CLASS_IS_NEWSLETTER_NTN = 'is-newsletter-ntn';
      this.CLASS_LANGUAGE_SELECT = 'language-select';
      this.SELECTOR_CLOSE = '.a-icon-lg-close-circle';
      this.SELECTOR_SUBMIT = '.a-button';
      this.SELECTOR_SELECT_DEPARTMENT = '.select-department';
      this.SELECTOR_RADIO_BUTTON = '.m-radio-button';
      this.SELECTOR_DROPDOWN_FILTER = '.m-dropdown-filter';
      this.SELECTOR_OPTION_SELECTED = '.a-option.is-selected';
      this.SELECTOR_INPUT = '.a-input.filter';
      this.DELAY_TIMEOUT = '';
      this.POPUP_DELAY_TIME = 0;
      this.DELAY_TIME = 200;
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$window = $(window);
      this.$closeElement = this.$el.find(this.SELECTOR_CLOSE);
      this.$submitElement = this.$el.find(this.SELECTOR_SUBMIT);
      this.$selectDepartmentElement = this.$el.find(this.SELECTOR_SELECT_DEPARTMENT);
      this.$selectRadioButtonElement = this.$el.find(this.SELECTOR_RADIO_BUTTON);
      this.$dropDownFilter = this.$el.find(this.SELECTOR_DROPDOWN_FILTER);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._close = this._close.bind(this);
      this._setCookie = this._setCookie.bind(this);
      this._setVisibilityState = this._setVisibilityState.bind(this);
      this._onSubmitClick = this._onSubmitClick.bind(this);
      this._showNewsletterLighbox = this._showNewsletterLighbox.bind(this);
      this._hideNewsletterLighbox = this._hideNewsletterLighbox.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_PAGE_CONTENT_REPLACED, this._setVisibilityState);
      this.subscribe(_Enums.default.ACTION.OPEN_NEWSLETTER_LIGHTBOX, this._showNewsletterLighbox);
      this.subscribe(_Enums.default.ACTION.OPEN_NEWSLETTER_NTN_LIGHTBOX, this._showNewsletterNtnLighbox);
      this.subscribe(_Enums.default.EVENT.ON_DROPDOWN_CLOSED_FILTERS, this._closedDropdownFilter);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_PAGE_CONTENT_REPLACED, this._setVisibilityState);
      this.unsubscribe(_Enums.default.ACTION.OPEN_NEWSLETTER_LIGHTBOX, this._showNewsletterLighbox);
      this.unsubscribe(_Enums.default.ACTION.OPEN_NEWSLETTER_NTN_LIGHTBOX, this._showNewsletterNtnLighbox);
      this.unsubscribe(_Enums.default.EVENT.ON_DROPDOWN_CLOSED_FILTERS, this._closedDropdownFilter);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$closeElement.on('click', this._close);
      this.$submitElement.on('click', this._onSubmitClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$closeElement.off('click', this._close);
      this.$submitElement.off('click', this._onSubmitClick);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._setVisibilityState();
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Checks if cookie is set and sets visibility
     * @private
     */

  }, {
    key: "_setVisibilityState",
    value: function _setVisibilityState() {
      var _this2 = this;

      // show if cookie is not set or newsletter is not disabled and it is not visible yet
      if (Cookies.get(this.CLASS_POPUP_HISTORY) !== 'viewed' && !_Utils.Stores.popupsDisabled() && !this.$el.hasClass(_Enums.default.CLASS.IS_VISIBLE_STATE)) {
        clearTimeout(this.DELAY_TIMEOUT);
        this.DELAY_TIMEOUT = setTimeout(function () {
          _this2._showNewsletterLighbox();

          _this2.publish(_Enums.default.EVENT.ON_NEWSLETTER_POPUP_VISIBLE);
        }, this.POPUP_DELAY_TIME);
      }
    }
    /**
     * Show the newsletter signup lightbox
     * @private
     */

  }, {
    key: "_showNewsletterLighbox",
    value: function _showNewsletterLighbox() {
      if (!this.$el.hasClass(this.CLASS_IS_NEWSLETTER_NTN) && !Cookies.get(this.CLASS_LANGUAGE_SELECT)) {
        this.$el.addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
        this.publish(_Enums.default.EVENT.ON_NEWSLETTER_SIGNUP_OPENED);
      }
    }
  }, {
    key: "_showNewsletterNtnLighbox",
    value: function _showNewsletterNtnLighbox() {
      if (this.$el.hasClass(this.CLASS_IS_NEWSLETTER_NTN) && !Cookies.get(this.CLASS_LANGUAGE_SELECT)) {
        this.$el.addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
        this.publish(_Enums.default.EVENT.ON_NEWSLETTER_SIGNUP_OPENED);
      }
    }
    /**
     * Hide the newsletter signup lightbox
     * @private
     */

  }, {
    key: "_hideNewsletterLighbox",
    value: function _hideNewsletterLighbox() {
      this.$el.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
    }
    /**
     * Calulates days to expiration and sets cookie
     * @private
     */

  }, {
    key: "_setCookie",
    value: function _setCookie() {
      var daysToExpiration = this.$el.data('expires');
      Cookies.set(this.CLASS_POPUP_HISTORY, 'viewed', {
        expires: daysToExpiration
      });
    }
    /**
     * Closes the splash and sets cookie history
     * @param e
     * @private
     */

  }, {
    key: "_close",
    value: function _close(e) {
      this._setCookie();

      this._hideNewsletterLighbox();
    }
  }, {
    key: "_dropdownFilterValidation",
    value: function _dropdownFilterValidation() {
      if (this.$dropDownFilter.length) {
        if (this.$el.find(this.SELECTOR_INPUT).val() !== this.$el.find(this.SELECTOR_OPTION_SELECTED).html()) {
          this.$dropDownFilter.addClass(_Enums.default.CLASS.HAS_ERROR);
        } else {
          this.$dropDownFilter.removeClass(_Enums.default.CLASS.HAS_ERROR);
        }
      }
    }
    /**
     * Check condition
     * @param e
     * @private
     */

  }, {
    key: "_onSubmitClick",
    value: function _onSubmitClick() {
      var _this3 = this;

      setTimeout(function () {
        if (_this3.$selectRadioButtonElement.hasClass(_Enums.default.CLASS.HAS_ERROR)) {
          _this3.$selectDepartmentElement.addClass(_Enums.default.CLASS.HAS_ERROR);
        } else {
          _this3.$selectDepartmentElement.removeClass(_Enums.default.CLASS.HAS_ERROR);
        }
      }, this.DELAY_TIME);

      this._dropdownFilterValidation();
    }
  }, {
    key: "_closedDropdownFilter",
    value: function _closedDropdownFilter() {
      this._dropdownFilterValidation();
    }
  }]);

  return ONewsletterPopup;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = ONewsletterPopup;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66,"./../../utils.js":113}],97:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OOrder = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OOrder, _AppeaserComponentBas);

  var _super = _createSuper(OOrder);

  /**
   * Constructor, will run before page loaded
   */
  function OOrder() {
    var _this;

    _classCallCheck(this, OOrder);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();

    _this._jQueryScopeBinding();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    _this.subscribe(_Enums.default.EVENT.ON_LIGHTBOX_OPEN, _this._fixPaddingsOnQuantities);

    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OOrder, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OOrder.prototype), "destroy", this).call(this);

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_LIGHTBOX_OPEN, this._fixPaddingsOnQuantities);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_QUANTITY = '.product-param-price .product-qty';
      this.SELECTOR_PRODUCT_NAME = '.product-name';
      this.SELECTOR_ORDER_ROW = '.m-order-summary-row';
      this.X_RIGHT_MARGIN = 3;
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._fixPaddingsOnQuantities();
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$orderRows = this.$el.find(this.SELECTOR_ORDER_ROW);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {}
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {}
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Due to the complicated HTML structure, the product names have by default a fixed left padding, which is an issue
     * when there are more than 9 items, as the quantity number will collide into the name.
     * This function fixes that issue.
     * @private
     */

  }, {
    key: "_fixPaddingsOnQuantities",
    value: function _fixPaddingsOnQuantities() {
      var _this2 = this;

      this.$orderRows.each(function (index, orderRow) {
        var quantityWidth = $(orderRow).find(_this2.SELECTOR_QUANTITY).outerWidth();
        $(orderRow).find(_this2.SELECTOR_PRODUCT_NAME).css('padding-left', quantityWidth + _this2.X_RIGHT_MARGIN + 'px');
      });
    }
  }]);

  return OOrder;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OOrder;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],98:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

var _Utils = _interopRequireDefault(require('./../../utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OPageContent = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OPageContent, _AppeaserComponentBas);

  var _super = _createSuper(OPageContent);

  /**
   * Constructor, will run before page loaded
   */
  function OPageContent() {
    var _this;

    _classCallCheck(this, OPageContent);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();

    _this._jQueryScopeBinding();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OPageContent, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OPageContent.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_PAGE_CONTENT = '.o-page-content';
      this.SELECTOR_MOBILE_FILTER = '.o-horizontal-accordion .mobile-view';
      this.SELECTOR_MODEL_IMAGES = '.o-product-listing.has-model-images .image';
      this.SELECTOR_UPBODY_IMAGES = '.o-product-listing.has-upper-body-images .image';
      this.SELECTOR_LWBODY_IMAGES = '.o-product-listing.has-lower-body-images .image';
      this.SELECTOR_IMAGE = '.a-image';
      this.SELECTOR_LP_CONFIG_DIV = '[data-lp-is-enabled]';
      this.SELECTOR_PAGE_SEARCH = '.o-search';
      this.SELECTOR_SIGN_IN_WRAPPER = '.o-sign-in-wrapper';
      this.SELECTOR_IS_SIGN_IN_ACCORDION = '.is-sign-in-accordions';
      this.CLASS_IS_HIDDEN = 'is-hidden';
      this.CLASS_OBJECTFIT_FALLBACK = 'compat-object-fit';
      this.CLASS_HAS_FILTER_OPEN = 'has-filter-open';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._setInitialVisibilityState();

      this._addSupportForObjectFit();

      this._removeMultipleForms();

      $(window).off('popstate');
      $(window).on('popstate', this._onHistoryNavigation);
    }
    /**
     * Caching DOM elements for performance
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$window = $(window);
      this.$mobileFilter = $(this.SELECTOR_MOBILE_FILTER);
      this.$lpConfig = $(this.SELECTOR_LP_CONFIG_DIV);
      this.$searchPage = $(this.SELECTOR_PAGE_SEARCH);
      this.$signInAccordion = this.$el.find(this.SELECTOR_SIGN_IN_WRAPPER).find(this.SELECTOR_IS_SIGN_IN_ACCORDION);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._showPageContent = this._showPageContent.bind(this);
      this._hidePageContent = this._hidePageContent.bind(this);
      this._updateMarginMap = this._updateMarginMap.bind(this);
      this._updateMarginForExtended = this._updateMarginForExtended.bind(this);
      this._onHistoryNavigation = this._onHistoryNavigation.bind(this);
      this._removeMultipleForms = this._removeMultipleForms.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_PAGE_CONTENT_REPLACED, this._onPageContentReplaced);
      this.subscribe(_Enums.default.ACTION.SHOW_PAGE_CONTENT, this._showPageContent);
      this.subscribe(_Enums.default.ACTION.HIDE_PAGE_CONTENT, this._hidePageContent);
      this.subscribe(_Enums.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, this._updateMarginMap);
      this.subscribe(_Enums.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN, this._updateMarginForExtended);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_PAGE_CONTENT_REPLACED, this._onPageContentReplaced);
      this.unsubscribe(_Enums.default.ACTION.SHOW_PAGE_CONTENT, this._showPageContent);
      this.unsubscribe(_Enums.default.ACTION.HIDE_PAGE_CONTENT, this._hidePageContent);
      this.unsubscribe(_Enums.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, this._updateMarginMap);
      this.unsubscribe(_Enums.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN, this._updateMarginForExtended);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {}
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_updateMarginForExtended",
    value: function _updateMarginForExtended() {
      this.marginContributors.push({
        element: this.$searchPage,
        margin: this.$searchPage.outerHeight(),
        selector: null
      });
    }
    /**
     * Updates the map of margin contributors. A margin contributor is an element contributing to the top
     * margin of this component. By publishing an UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION event, the element
     * can change its contribution. The purpose of this solution is to allow multiple elements to update the top
     * margin of the page content without interference.
     * @param margin - The new margin the element making the call wants to contribute with.
     * @param $element - The element making a margin contribution.
     * @private
     */

  }, {
    key: "_updateMarginMap",
    value: function _updateMarginMap(args) {
      //If this is the first contributor
      if (!this.marginContributors) {
        if (args.duration) {
          this.$el.animate({
            'margin-top': args.margin
          }, args.duration);
        } else {
          this.$el.css('margin-top', args.margin);
        }

        this.marginContributors = [{
          element: args.element,
          margin: args.margin,
          selector: args.selector
        }];
        this.totalMargin = args.margin;
        return;
      }

      var contributor = undefined; //Check if the element is an existing contributor

      for (var i = 0; i < this.marginContributors.length; i++) {
        if (args.element.is(this.marginContributors[i].element) || args.element.is(this.marginContributors[i].selector)) {
          contributor = this.marginContributors[i];
        }
      } //If the element is not an existing contributor, create a new one.


      if (!contributor) {
        var newContributor = {
          element: args.element,
          margin: 0,
          selector: args.selector
        };
        this.marginContributors.push(newContributor);
        contributor = newContributor;
      }

      this.totalMargin += args.margin - contributor.margin; //Update the top margin

      if (args.duration) {
        this.$el.animate({
          'margin-top': this.totalMargin
        }, args.duration);
      } else {
        this.$el.css('margin-top', this.totalMargin);
      }

      this.publish(_Enums.default.EVENT.ON_PAGE_CONTENT_MARGIN_CHANGE, contributor.element); //Update the map

      contributor.margin = args.margin;
    }
    /**
     * Checks if the filter view is open in mobile and updates the page content visibility accordingly.
     * @private
     */

  }, {
    key: "_setInitialVisibilityState",
    value: function _setInitialVisibilityState() {
      if (Modernizr.mq(_Enums.default.MQ.IS_MOBILE) && this.$mobileFilter.hasClass(_Enums.default.CLASS.IS_EXPANDED)) {
        this._hidePageContent();
      }
    }
    /**
     * Displays page content
     * @private
     */

  }, {
    key: "_showPageContent",
    value: function _showPageContent() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      this.$el.show().removeClass(this.CLASS_HAS_FILTER_OPEN);
      this.publish(_Enums.default.EVENT.ON_PAGE_CONTENT_SHOW);

      if (options.hasOwnProperty('restoreScrollPosition')) {
        this.$window.scrollTop(options.restoreScrollPosition);
      }
    }
    /**
     * Hides page content
     * @private
     */

  }, {
    key: "_hidePageContent",
    value: function _hidePageContent(options) {
      if (options.nohide) {
        this.$el.addClass(this.CLASS_HAS_FILTER_OPEN);
      } else {
        this.$el.hide();
      }

      this.publish(_Enums.default.EVENT.ON_PAGE_CONTENT_HIDE);
    }
    /**
     * Load page content on history navigation but not when hash exists in url
     * @private
     */

  }, {
    key: "_onHistoryNavigation",
    value: function _onHistoryNavigation() {
      if (!location.hash) {
        _Utils.default.Http.load(document.location, this.SELECTOR_PAGE_CONTENT, {}, {}, true);

        this.publish(_Enums.default.ACTION.UPDATE_SEARCH_TAGS);
      }
    }
    /**
     * Event handler for when the o-page-content is replaced
     * @private
     */

  }, {
    key: "_onPageContentReplaced",
    value: function _onPageContentReplaced() {
      this._addSupportForObjectFit();
    }
    /**
     * Adds support for object fit
     * Excepting when LP Resolve is enabled as objectfit is not necessary then
     * @private
     */

  }, {
    key: "_addSupportForObjectFit",
    value: function _addSupportForObjectFit() {
      var _this2 = this;

      var lpIsEnabled = this.$lpConfig ? this.$lpConfig.data('lp-is-enabled') : false;

      if (!Modernizr.objectfit && !lpIsEnabled) {
        $(this.SELECTOR_MODEL_IMAGES + ',' + this.SELECTOR_UPBODY_IMAGES + ',' + this.SELECTOR_LWBODY_IMAGES).each(function (index, container) {
          var imgUrl = $(container).find(_this2.SELECTOR_IMAGE).prop('src');

          if (imgUrl) {
            $(container).css('backgroundImage', 'url(' + imgUrl + ')').addClass(_this2.CLASS_OBJECTFIT_FALLBACK);
          }
        });
      }
    }
  }, {
    key: "_removeMultipleForms",
    value: function _removeMultipleForms() {
      if (this.$signInAccordion.hasClass(this.CLASS_IS_HIDDEN)) {
        this.$signInAccordion.remove();
      }
    }
  }]);

  return OPageContent;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OPageContent;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66,"./../../utils.js":113}],99:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _index = _interopRequireDefault(require("common/organisms/o-page/index.js"));

var _Utils = _interopRequireDefault(require('./../../utils.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OPage = /*#__PURE__*/function (_BasePage) {
  _inherits(OPage, _BasePage);

  var _super = _createSuper(OPage);

  /**
   * Constructor, will run before page loaded
   */
  function OPage() {
    var _this;

    _classCallCheck(this, OPage);

    _this = _super.apply(this, arguments);
    _this.waitToPublishDomReady = false;

    _this.subscribe(_Enums.default.ACTION.HALT_DOMREADY_EVENTS, _this._onHaltEvents);

    _this.subscribe(_Enums.default.ACTION.RESUME_DOMREADY_EVENTS, _this._onResumeEvents);

    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OPage, [{
    key: "destroy",
    value: function destroy() {
      _get(_getPrototypeOf(OPage.prototype), "destroy", this).call(this);

      this.unsubscribe(_Enums.default.ACTION.HALT_DOMREADY_EVENTS, this._onHaltEvents);
      this.unsubscribe(_Enums.default.ACTION.RESUME_DOMREADY_EVENTS, this._onResumeEvents);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      _get(_getPrototypeOf(OPage.prototype), "_jQueryScopeBinding", this).call(this);

      this._onPopState = this._onPopState.bind(this);
      this._newsletterLightboxTriggerClick = this._newsletterLightboxTriggerClick.bind(this);
    }
  }, {
    key: "_queryDOMElements",
    value: function _queryDOMElements() {
      _get(_getPrototypeOf(OPage.prototype), "_queryDOMElements", this).call(this);

      this.$newsletterLightboxTrigger = this.$el.find('.open-newsletter-lightbox');
      this.$newsletterNtnLightboxTrigger = this.$el.find('.open-newsletter-ntn-lightbox');
    }
    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      _get(_getPrototypeOf(OPage.prototype), "_declareConstants", this).call(this);

      this.CLASS_CLOSE = 'a-icon-lg-close-circle';
      this.CLASS_OPEN_NEWSLETTER_LIGHTBOX = 'open-newsletter-lightbox';
      this.SELECTOR_OPEN_NTN_LIGHTBOX = '.open-newsletter-ntn-lightbox';
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _get(_getPrototypeOf(OPage.prototype), "_attachSubscribers", this).call(this);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _get(_getPrototypeOf(OPage.prototype), "_detachSubscribers", this).call(this);
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      _get(_getPrototypeOf(OPage.prototype), "_attachDOMListeners", this).call(this);

      window.onpopstate = this._onPopState;
      this.$newsletterLightboxTrigger.on('click', this._newsletterLightboxTriggerClick);
      this.$el.on('click', this.SELECTOR_OPEN_NTN_LIGHTBOX, this._newsletterLightboxTriggerClick);
    }
  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      _get(_getPrototypeOf(OPage.prototype), "_detachDOMListeners", this).call(this);

      this.$newsletterLightboxTrigger.off('click', this._newsletterLightboxTriggerClick);
      this.$newsletterNtnLightboxTrigger.off('click', this._newsletterLightboxTriggerClick);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _get(_getPrototypeOf(OPage.prototype), "_onDOMReady", this).call(this, this.waitToPublishDomReady);
    }
  }, {
    key: "_onHaltEvents",
    value: function _onHaltEvents() {
      this.waitToPublishDomReady = true;
    }
  }, {
    key: "_onResumeEvents",
    value: function _onResumeEvents() {
      this.waitToPublishDomReady = false;

      _get(_getPrototypeOf(OPage.prototype), "_resumeEvents", this).call(this);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_newsletterLightboxTriggerClick",
    value: function _newsletterLightboxTriggerClick(e) {
      e.preventDefault();

      if (!$(e.target).hasClass(this.CLASS_CLOSE)) {
        if ($(e.target).hasClass(this.CLASS_OPEN_NEWSLETTER_LIGHTBOX)) {
          this.publish(_Enums.default.ACTION.OPEN_NEWSLETTER_LIGHTBOX);
        } else {
          this.publish(_Enums.default.ACTION.OPEN_NEWSLETTER_NTN_LIGHTBOX);
        }
      }
    }
    /**
     * This function is fired when the back/forward button is pressed on browser
     * @param event
     * @private
     */

  }, {
    key: "_onPopState",
    value: function _onPopState(event) {
      var currentState = JSON.stringify(event.state) != null ? JSON.parse(JSON.stringify(event.state)) : {},
          documentLocation = document.location,
          url = documentLocation.href;
      /*
           promise.done((result) =>{
           Logger.INFO("Http request done callback");
           this.publish(Enums.EVENT.ON_POPSTATE_DONE, result);
           })
           .fail((error) => {
           Logger.INFO("Http request error callback");
           this.publish(Enums.EVENT.ON_POPSTATE_FAIL);
           })
           .always(() => {
           Logger.INFO("Http request always callback");
           this.publish(Enums.EVENT.ON_POPSTATE_ALWAYS);
           });*/
    }
  }]);

  return OPage;
}(_index.default); // Export this so we can pick it up and import in main.js


module.exports = OPage;

},{"./../../../../js/base/logger.js":51,"./../../enums.js":66,"./../../utils.js":113,"common/organisms/o-page/index.js":38}],100:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _index = _interopRequireDefault(require("../../../../common/organisms/o-pra/index"));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OPra = /*#__PURE__*/function (_OPraCommon) {
  _inherits(OPra, _OPraCommon);

  var _super = _createSuper(OPra);

  /**
   * Constructor, will run before page loaded
   */
  function OPra() {
    var _this;

    _classCallCheck(this, OPra);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();

    _this._jQueryScopeBinding();

    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OPra, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OPra.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_SLIDES = '.slides';
      this.SELECTOR_SLIDER_TITLE = '.slider-title';
      this.SELECTOR_IMG = '.a-image';
      this.SELECTOR_SWATCH = '.a-swatch';
      this.SELECTOR_M_PRODUCT_PRICE = '.m-product-price';
      this.SELECTOR_PRODUCT_TITLE = '.description .product span:last-child';
      this.SELECTOR_PRODUCT_MARKERS = '.product-markers:not(.has-hover.desktop)';
      this.SELECTOR_M_PRODUCT_MARKER = '.m-product-marker';
      this.SELECTOR_MARKER_TEXT = '.product-markers .marker-text';
      this.SELECTOR_MARKER_TEXT_SPAN = '.marker-text:not(.promo-marker) span';
      this.SELECTOR_O_PRODUCT = '.o-product, .o-product-cofs';
      this.SELECTOR_SLIDER = '.slider';
      this.SELECTOR_SWIPER_INITIALIZED = 'swiper-initialized';
      this.SELECTOR_LINK = '.a-link';
      this.SELECTOR_REDILS_SLIDER = '.o-slider .redils';
      this.SELECTOR_PROP_TITLE = '.propTitle';
      this.SELECTOR_PRODUCT_TITLE_DETAILS = '.producttile-details';
      this.SELECTOR_PRODUCT_NAME = '.productName';
      this.SELECTOR_ARTICLE_CODE = '.articleCode';
      this.SELECTOR_ATELIERNAME = '.atelierName';
      this.SELECTOR_BRANDNAME = '.brandName';
      this.SELECTOR_COLORLOC = '.colorLoc';
      this.CLASS_REDILS_DUPLICATED = 'redils-duplicated';
      this.CLASS_RESOLVE = 'Resolve';
      this.CLASS_RESOLVE_COMPLETE = 'ResolveComplete';
      this.panelData = {};
      this.sliderInitTimeout = 100;
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      _get(_getPrototypeOf(OPra.prototype), "_onBeforeAjaxPost", this).call(this);
    }
    /**
     * Caching DOM elements for performance
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$window = $(window);
      this.$sliderTitle = this.$el.find(this.SELECTOR_SLIDER_TITLE);
      this.$firstSlide = this.$el.find(this.SELECTOR_SLIDES).first();
      this.$slides = this.$el.find(this.SELECTOR_SLIDES);
      this.$slider = this.$el.find(this.SELECTOR_SLIDER);
      this.$propTitle = this.$el.find(this.SELECTOR_PROP_TITLE);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._resetImgClickHandler = this._resetImgClickHandler.bind(this);
      this._extractElements = this._extractElements.bind(this);
      this._onHtmlUpdated = this._onHtmlUpdated.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.ACTION.POPULATE_DATA_ON_SUGGESTIONS, this._populatePra);
      this.subscribe(_Enums.default.ACTION.RESET_IMAGE_CLICK_HANDLER, this._resetImgClickHandler);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.ACTION.POPULATE_DATA_ON_SUGGESTIONS, this._populatePra);
      this.unsubscribe(_Enums.default.ACTION.RESET_IMAGE_CLICK_HANDLER, this._resetImgClickHandler);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {}
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_populatePra",
    value: function _populatePra(data) {
      var _this2 = this;

      if (this.$el.hasClass(this.SELECTOR_SWIPER_INITIALIZED)) {
        return;
      }

      this._cacheDOMElements();

      this.data = data;
      var productCount = data.products.length,
          productTemplate = this.$firstSlide.removeClass(this.CLASS_REDILS_DUPLICATED).removeAttr('style')[0].outerHTML,
          $htmlToAppend = Array.apply(null, Array(productCount)).map(function () {
        return productTemplate;
      });
      this.$sliderTitle.text(data.name);
      this.$propTitle.text(data.name); // populate each product

      $htmlToAppend.forEach(function (HTMLproduct, i) {
        var $HTMLproduct = $(HTMLproduct),
            obj = _this2._extractElements($HTMLproduct, i); // set metadata, title, link and price


        $HTMLproduct.attr(_this2._getMetadataAttr(obj.responseProduct, obj.responseArticle));
        var $prodDetails = $HTMLproduct.find(_this2.SELECTOR_PRODUCT_TITLE_DETAILS);
        var $prodNameAttr = $prodDetails.find(_this2.SELECTOR_PRODUCT_NAME);

        if ($prodNameAttr !== null && $prodNameAttr.length) {
          $prodNameAttr.text(obj.responseProduct.variantData[0].varticleName);
        }

        var $articleCodeAttr = $prodDetails.find(_this2.SELECTOR_ARTICLE_CODE);

        if ($articleCodeAttr !== null && $articleCodeAttr.length) {
          $articleCodeAttr.text(obj.responseProduct.variantData[0].varticleCode);
        }

        var $atelierNameAttr = $prodDetails.find(_this2.SELECTOR_ATELIERNAME);

        if ($atelierNameAttr !== null && $atelierNameAttr.length) {
          $atelierNameAttr.text(obj.responseProduct.variantData[0].vatelierName);
        }

        var $brandNameAttr = $prodDetails.find(_this2.SELECTOR_BRANDNAME);

        if ($brandNameAttr !== null && $brandNameAttr.length) {
          $brandNameAttr.text(obj.responseProduct.variantData[0].vbrand);
        }

        var $colorLocAttr = $prodDetails.find(_this2.SELECTOR_COLORLOC);

        if ($colorLocAttr !== null && $colorLocAttr.length) {
          $colorLocAttr.text(obj.responseProduct.variantData[0].vcolorLoc);
        }

        obj.$productTitle.text(obj.responseProduct.productName);
        obj.$link.attr('href', _this2._getUrl(obj.responseArticle.vlinkPdp));
        obj.$productPrice.html(_this2._getPriceHtml(obj.responseArticle)); //set markers and swatches

        obj.$markers = _this2._getMarkers(obj.$markers, obj.responseProduct.promotionMarkerText, obj.responseProduct.promotionMarkerStyle, obj.responseProduct.productMarkerText, obj.responseProduct.productMarkerStyle);

        if (obj.$markers.children().is(':empty')) {
          // if no markers delete HTML element
          obj.$markers.remove();
        }

        obj.$swatchParent = _this2._getSwatchParent(obj.$swatchParent, obj.$swatch, obj.responseProduct.variantData); // set image

        var resolveChain = _this2._getDynamicChain(obj.responseArticle);

        obj.$img.attr(_this2._getImgAttr(resolveChain, obj.responseArticle.vstillLifeImage, obj.responseArticle.varticleName));
        obj.$img.removeClass(_this2.CLASS_RESOLVE_COMPLETE).addClass(_this2.CLASS_RESOLVE);
        $htmlToAppend[i] = $HTMLproduct;
      }); // update HTML

      var $sliderRoot = this.$el.find(this.SELECTOR_SLIDES).first().parent();
      $sliderRoot.html($htmlToAppend).promise().then(function () {
        return _this2._onHtmlUpdated();
      });
    }
    /**
     * Extract necessary elements for slider HTML update from passed $HTMLproduct
     * @param $HTMLproduct
     * @param i
     * @returns {{$swatchParent: *, $link: *, responseProduct: *, $markers: *, $swatch: *, $productTitle: *, $img: *, $productPrice: *}}
     * @private
     */

  }, {
    key: "_extractElements",
    value: function _extractElements($HTMLproduct, i) {
      var o = {
        $img: $HTMLproduct.find(this.SELECTOR_IMG),
        $swatch: $HTMLproduct.find(this.SELECTOR_SWATCH),
        $swatchParent: $HTMLproduct.find(this.SELECTOR_SWATCH).parent(),
        $productPrice: $HTMLproduct.find(this.SELECTOR_M_PRODUCT_PRICE),
        $productTitle: $HTMLproduct.find(this.SELECTOR_PRODUCT_TITLE),
        $markers: $HTMLproduct.find(this.SELECTOR_PRODUCT_MARKERS),
        $link: $HTMLproduct.find(this.SELECTOR_LINK),
        responseProduct: this.data.products[i]
      };
      o.responseArticle = o.responseProduct.variantData[0];
      return o;
    }
    /**
     * Returns conversion to dynamic chain if LiquidPixel image url passed
     * otherwise returns empty str
     * @param responseArticle
     */

  }, {
    key: "_getDynamicChain",
    value: function _getDynamicChain(responseArticle) {
      var lpImgMatch = decodeURIComponent(responseArticle.vstillLifeImage).match(/(set=source|type|ImageVersion|origin).*?(\])/g);

      if (lpImgMatch) {
        return lpImgMatch.toString() + '&call=url[file:/product/dynamic.chain]';
      } else {
        _Logger.default.INFO(this.constructor.name, ':: PRA img url not received in expected LiquidPixel chain format', responseArticle.vstillLifeImage);
      }

      return '';
    }
    /**
     * Returns product metadata attributes based on passed data, this.data.id
     * @param responseProduct
     * @param responseArticle
     * @returns {{"data-ticket": *, "data-pracode": *, "data-product": *, "data-varticlecode": *}}
     * @private
     */

  }, {
    key: "_getMetadataAttr",
    value: function _getMetadataAttr(responseProduct, responseArticle) {
      return {
        'data-ticket': responseProduct.ticket,
        'data-varticlecode': responseArticle.varticleCode,
        'data-pracode': this.data.id,
        'data-product': JSON.stringify(responseProduct)
      };
    }
    /**
     * Returns URL by calling super._transformLinkToCurrentContextPath if possible
     * otherwise returns the passed vlinkPdp
     * @param vlinkPdp
     * @returns {undefined|*}
     * @private
     */

  }, {
    key: "_getUrl",
    value: function _getUrl(vlinkPdp) {
      try {
        return _get(_getPrototypeOf(OPra.prototype), "_transformLinkToCurrentContextPath", this).call(this, vlinkPdp);
      } catch (e) {
        return vlinkPdp;
      }
    }
    /**
     * Returns price HTML
     * @param responseArticle
     * @returns {string}
     * @private
     */

  }, {
    key: "_getPriceHtml",
    value: function _getPriceHtml(responseArticle) {
      if (responseArticle.vformattedOldPrice) {
        return '<span class="is-deprecated">' + responseArticle.vformattedOldPrice + '</span>' + '<span class="is-reduced">' + responseArticle.vformattedPrice + '</span>';
      } else if (responseArticle.vformattedPrice) {
        return '<span class="is-regular">' + responseArticle.vformattedPrice + '</span>';
      }
    }
    /**
     * Returns attributes to be set to the image element
     * @param resolveChain
     * @param vstillLifeImage
     * @param varticleName
     * @returns {{alt: *}}
     * @private
     */

  }, {
    key: "_getImgAttr",
    value: function _getImgAttr(resolveChain, vstillLifeImage, varticleName) {
      var attr = {
        alt: varticleName
      };

      if (resolveChain.length) {
        attr['data-resolvechain'] = resolveChain;
      } else {
        attr['data-resolvesrc'] = vstillLifeImage;
      }

      return attr;
    }
    /**
     * Returns swatch jquery object for all swatch variants retrieved
     * @param $swatchParent
     * @param $swatch
     * @param variantData
     * @returns jQuery object
     * @private
     */

  }, {
    key: "_getSwatchParent",
    value: function _getSwatchParent($swatchParent, $swatch, variantData) {
      var _this3 = this;

      var $swatchImg = $swatchParent.find(this.SELECTOR_IMG);
      variantData.forEach(function (currentValue, index) {
        if (index < 1) {
          $swatchImg.attr('src', currentValue.vswatch);
        } else {
          var $newStach = $swatch.clone();
          $newStach.find(_this3.SELECTOR_IMG).attr('src', currentValue.vswatch);
          $swatchParent.append($newStach);
        }
      });
      return $swatchParent;
    }
    /**
     * Returns markers jquery object for both product and promotion markers if applicable
     * @param $markers
     * @param promotionMarkerText
     * @param promotionMarkerStyle
     * @param productMarkerText
     * @param productMarkerStyle
     * @returns jQuery object
     * @private
     */

  }, {
    key: "_getMarkers",
    value: function _getMarkers($markers, promotionMarkerText, promotionMarkerStyle, productMarkerText, productMarkerStyle) {
      var _this4 = this;

      if (promotionMarkerText) {
        var styles = typeof promotionMarkerStyle !== 'undefined' ? promotionMarkerStyle.split(',') : ['', ''];
        promotionMarkerText.split(',').slice(0, 2).forEach(function (markerText, index) {
          if (!$markers.children().is(':empty')) $markers = $markers.after($markers.clone());
          $markers.find(_this4.SELECTOR_M_PRODUCT_MARKER).addClass('.promo-marker-wrapper').html('<div class="marker-text promo-marker" style="' + styles[index] + '"><span>' + markerText + '</span></div>');
        });
      }

      if (productMarkerText.length) {
        var _styles = typeof productMarkerStyle !== 'undefined' ? productMarkerStyle.split(',') : ['', ''];

        productMarkerText.split(',').slice(0, 2).forEach(function (markerText, index) {
          if (!$markers.children().is(':empty')) $markers = $markers.after($markers.clone());
          $markers.find(_this4.SELECTOR_M_PRODUCT_MARKER).html('<div class="marker-text" style="' + _styles[index] + '"><span>' + markerText + '</span></div>');
        });
      }

      return $markers;
    }
    /**
     * Detaches potentially existing on click listener and sets up a new one
     * @private
     */

  }, {
    key: "_resetImgClickHandler",
    value: function _resetImgClickHandler() {
      var _this5 = this;

      this.$slides.off('click', function (event) {
        var $target = $(event.currentTarget);

        _get(_getPrototypeOf(OPra.prototype), "_onProductClick", _this5).call(_this5, event, $target.data('ticket'), $target.data('varticlecode'));
      });
      this.$slides = this.$el.find(this.SELECTOR_SLIDES);
      this.$slides.on('click', function (event) {
        var $target = $(event.currentTarget);

        _get(_getPrototypeOf(OPra.prototype), "_onProductClick", _this5).call(_this5, event, $target.data('ticket'), $target.data('varticlecode'));
      });
    }
    /**
     * HTML update promise handler
     * @private
     */

  }, {
    key: "_onHtmlUpdated",
    value: function _onHtmlUpdated() {
      var _this6 = this;

      this.$el.removeClass(_Enums.default.CLASS.DISPLAY_NONE);
      this.publish(_Enums.default.ACTION.TRIGGER_SKELETON_LOAD); // init slider

      setTimeout(function () {
        _this6.publish(_Enums.default.ACTION.RE_INITIALIZE_SLIDER, _this6.$el.find(_this6.SELECTOR_REDILS_SLIDER));

        _this6._resetImgClickHandler();
      }, this.sliderInitTimeout);
    }
  }]);

  return OPra;
}(_index.default); // Export this so we can pick it up and import in main.js


module.exports = OPra;

},{"../../../../common/organisms/o-pra/index":41,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],101:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OProductAttributes = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OProductAttributes, _AppeaserComponentBas);

  var _super = _createSuper(OProductAttributes);

  /**
   * Constructor, will run before page loaded
   */
  function OProductAttributes() {
    var _this;

    _classCallCheck(this, OProductAttributes);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OProductAttributes, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OProductAttributes.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_SHARE_ELEMENT = '.share-container';
      this.SELECTOR_SHARE_LINKS = '.o-share-custom .a-link';
      this.SELECTOR_ATTR_ELEMENT = '.attributes-top .hover-attr';
      this.SELECTOR_ID_ELEMENT = '.attributes-top .for-highlight'; //Include shipping info molecule in the selector in order to avoid two tooltips being open at the same time.

      this.SELECTOR_BODY = 'body, .m-product-shipping-info';
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$shareElement = this.$el.find(this.SELECTOR_SHARE_ELEMENT);
      this.$hoverAttribute = this.$el.find(this.SELECTOR_ATTR_ELEMENT);
      this.$idElementContainer = this.$el.find(this.SELECTOR_ID_ELEMENT);
      this.$body = $(this.SELECTOR_BODY);
      this.$highlightedElements = this.$idElementContainer.find('span');
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onShareElementClick = this._onShareElementClick.bind(this);
      this._removeHighlightClass = this._removeHighlightClass.bind(this);
      this._highlightElements = this._highlightElements.bind(this);
      this._onBodyClick = this._onBodyClick.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$shareElement.on('click', this._onShareElementClick);
      this.$hoverAttribute.on('mouseover', this._highlightElements);
      this.$hoverAttribute.on('mouseout', this._removeHighlightClass); //We don't use the global body click event since we don't want two tooltips to be open at the same time.

      this.$body.on('click', this._onBodyClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$shareElement.off('click', this._onShareElementClick);
      this.$hoverAttribute.off('mouseover', this._highlightElements);
      this.$hoverAttribute.off('mouseout', this._removeHighlightClass);
      this.$body.off('click', this._onBodyClick);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Handles click on result link
     * @private
     */

  }, {
    key: "_onShareElementClick",
    value: function _onShareElementClick(e) {
      if (!$(e.target).is(this.SELECTOR_SHARE_LINKS)) {
        e.stopPropagation();
      }

      if (!this.$shareElement.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        this.$shareElement.addClass(_Enums.default.CLASS.IS_OPEN_STATE);
      } else {
        this.$shareElement.removeClass(_Enums.default.CLASS.IS_OPEN_STATE);
      }
    }
    /**
     * Close share on click outside
     * @private
     */

  }, {
    key: "_onBodyClick",
    value: function _onBodyClick() {
      this.$shareElement.removeClass(_Enums.default.CLASS.IS_OPEN_STATE);
    }
    /**
     * Remove highlighted elements in ID container
     * @private
     */

  }, {
    key: "_removeHighlightClass",
    value: function _removeHighlightClass() {
      this.$idElementContainer.removeClass(_Enums.default.CLASS.IS_ACTIVE_STATE);
      this.$highlightedElements.removeClass(_Enums.default.CLASS.IS_HIGHLIGHTED);
    }
    /**
     * Highlight elements in ID container
     * @private
     */

  }, {
    key: "_highlightElements",
    value: function _highlightElements(e) {
      this.$idElementContainer.addClass(_Enums.default.CLASS.IS_ACTIVE_STATE);

      if ($(e.currentTarget).data('highlight')) {
        var attributesToHighlight = $(e.currentTarget).data('highlight').split(' ');
        var idElementParts = this.$idElementContainer;
        $.each(attributesToHighlight, function () {
          idElementParts.find('span.' + this).addClass(_Enums.default.CLASS.IS_HIGHLIGHTED);
        });
      }
    }
  }]);

  return OProductAttributes;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OProductAttributes;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],102:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Utils = _interopRequireDefault(require('./../../utils.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OProductDetails = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OProductDetails, _AppeaserComponentBas);

  var _super = _createSuper(OProductDetails);

  /**
   * Constructor, will run before page loaded
   */
  function OProductDetails() {
    var _this;

    _classCallCheck(this, OProductDetails);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OProductDetails, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      this._detachMQHandlers();

      _get(_getPrototypeOf(OProductDetails.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_MAIN_IMAGE = '.center-panel .a-image.main-image';
      this.SELECTOR_IMAGE_SECTION = '#product-gallery';
      this.SELECTOR_SCROLL_ELEMENT = 'html, body';
      this.SELECTOR_SIZE_DROPDOWN = '.m-dropdown';
      this.SELECTOR_AVAILABILITY = '.o-availability';
      this.SELECTOR_BTN_ADD_TO_CART = '.a-button.add-to-cart';
      this.SELECTOR_BTN_ADD_TO_CART_SPAN = '.a-button.add-to-cart span';
      this.SELECTOR_LEFT_PANEL = '.left-panel';
      this.SELECTOR_RIGHT_PANEL = '.right-panel';
      this.SELECTOR_SHIPPING_INFO = '.m-product-shipping-info';
      this.SELECTOR_MATERIAL_SWATCH = '.material-swatch-container';
      this.SELECTOR_COLOR_SWATCH = '.color-swatch-container';
      this.SELECTOR_PDP_FORM = '.o-form.add-to-cart';
      this.SELECTOR_STYLE_WITH = '.is-combine-with';
      this.SELECTOR_DYNAMIC_CONTENT = '.o-dynamic-content-area';
      this.SELECTOR_PLACEHOLDER = '.placeholder';
      this.SELECTOR_PRODUCT_NAME_PRICE = '.product-name-price-wrapper';
      this.SELECTOR_COMPARATIVE_PRICE = '.comparative-price';
      this.SELECTOR_PRODUCT_SIZE_WRAPPER = '.product-size-wrapper';
      this.SELECTOR_SPAN = 'span';
      this.SELECTOR_SIZE_SWATCH = '.a-size-swatch';
      this.SELECTOR_SIZE_OPTIONS = '.size-options';
      this.SELECTOR_PRODUCT_DETAILS = '.o-product-details';
      this.SELECTOR_PRODUCT_SIZE_SWATCH = '.product-size-wrapper .a-size-swatch';
      this.CLASS_SELECT_LABEL = 'select-label';
      this.CLASS_ABSOLUTE_SHIPPING_INFO = 'absolute-position';
      this.CLASS_HEIGHT_100 = 'height-100';
      this.CLASS_IS_ONE_SIZE = 'is-one-size';
      this.CLASS_IS_SELECTED = 'is-selected';
      this.CLASS_IS_DISABLED = 'is-disabled';
      this.CLASS_FIRST_SWATCH = 'first-size-swatch';
      this.CLASS_LAST_SWATCH = 'last-size-swatch';
      this.SCROLL_DURATION = 1000;
      this.HEADER_HEIGHT = 70;
      this.RIGHT_PANEL_PADDING = 40;
      this.IS_CUSTOM_MOBILE = 'screen and (max-width: 550px)';
      this.TIMER = 0;
      this.TIMEOUT = 2000;
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$addToCartForm = this.$el.find(this.SELECTOR_PDP_FORM);
      this.$availability = this.$el.find(this.SELECTOR_AVAILABILITY);
      this.$sizeSwatch = this.$el.find(this.SELECTOR_SIZE_SWATCH);
      this.$mainImage = this.$el.find(this.SELECTOR_MAIN_IMAGE);
      this.$imageSection = this.$el.find(this.SELECTOR_IMAGE_SECTION);
      this.$scrollElement = $(this.SELECTOR_SCROLL_ELEMENT);
      this.$leftPanelElement = this.$el.find(this.SELECTOR_LEFT_PANEL);
      this.$productNamePanel = this.$leftPanelElement.find(this.SELECTOR_PRODUCT_NAME_PRICE);
      this.$comparativePanel = this.$leftPanelElement.find(this.SELECTOR_COMPARATIVE_PRICE);
      this.$productSizeWrapper = this.$leftPanelElement.find(this.SELECTOR_PRODUCT_SIZE_WRAPPER);
      this.$rightPanelElement = this.$el.find(this.SELECTOR_RIGHT_PANEL);
      this.$colorSwatchPanel = this.$rightPanelElement.find(this.SELECTOR_COLOR_SWATCH);
      this.$rightPanelImages = this.$rightPanelElement.find('img');
      this.$shippingInfoElement = this.$rightPanelElement.find(this.SELECTOR_SHIPPING_INFO);
      this.$btnAddToCart = this.$el.find(this.SELECTOR_BTN_ADD_TO_CART);
      this.btnData = this.$btnAddToCart.data();
      this.$btnAddToCartSpan = this.$el.find(this.SELECTOR_BTN_ADD_TO_CART_SPAN);
      this.$window = $(window);
      this.$document = $(document);
      this.$combineWith = this.$document.find(this.SELECTOR_STYLE_WITH).parent();
      this.$dynamicContent = this.$document.find(this.SELECTOR_DYNAMIC_CONTENT);
      this.oneSizeQuickBuy = this.$el.hasClass(this.CLASS_IS_ONE_SIZE);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onMainImageClick = this._onMainImageClick.bind(this);
      this._adjustShippingInfoPosition = this._adjustShippingInfoPosition.bind(this);
      this._onSizeChanged = this._onSizeChanged.bind(this);
      this._onAddToCartSubmit = this._onAddToCartSubmit.bind(this);
      this._onAddToCartButtonMouseOut = this._onAddToCartButtonMouseOut.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {
      this._attachMQHandlers();
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$addToCartForm.on('submit', this._onAddToCartSubmit);
      this.$sizeSwatch.find(this.SELECTOR_SIZE_OPTIONS).on('click', this._onSizeChanged);
      this.$mainImage.on('click', this._onMainImageClick);
      $(window).on('resize', this._adjustShippingInfoPosition);
      this.$rightPanelImages.on('load', this._adjustShippingInfoPosition);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$addToCartForm.off('submit', this._onAddToCartSubmit);
      this.$sizeSwatch.find(this.SELECTOR_SIZE_OPTIONS).off('click', this._onSizeChanged);
      this.$mainImage.off('click', this._onMainImageClick);
      $(window).off('resize', this._adjustShippingInfoPosition);
      this.$rightPanelImages.off('load', this._adjustShippingInfoPosition);
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._adjustShippingInfoPosition();
    }
  }, {
    key: "_attachMQHandlers",
    value: function _attachMQHandlers() {
      this.MQSmallHandler = {
        deferSetup: true,
        match: this._onMobileMatch.bind(this)
      };
      this.MQTabletHandler = {
        deferSetup: true,
        match: this._onTabletMatch.bind(this)
      };
      this.MQDesktopHandler = {
        deferSetup: true,
        match: this._onDesktopMatch.bind(this)
      };
      enquire.register(_Enums.default.MQ.IS_MOBILE, this.MQSmallHandler);
      enquire.register(_Enums.default.MQ.IS_TABLET, this.MQTabletHandler);
      enquire.register(_Enums.default.MQ.IS_DESKTOP, this.MQDesktopHandler);
    }
  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {
      enquire.unregister(_Enums.default.MQ.IS_MOBILE, this.MQSmallHandler);
      enquire.unregister(_Enums.default.MQ.MOBILE_AND_TABLET_RANGE, this.MQTabletHandler);
      enquire.unregister(_Enums.default.MQ.IS_DESKTOP, this.MQDesktopHandler);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * On addToCartSubmit
     * @param e
     * @private
     */

  }, {
    key: "_onAddToCartSubmit",
    value: function _onAddToCartSubmit(e) {
      e.preventDefault();
      e.stopPropagation();

      if (this.$sizeSwatch.find(this.SELECTOR_SIZE_OPTIONS).hasClass(this.CLASS_IS_SELECTED) || !this.$sizeSwatch.length || this.oneSizeQuickBuy) {
        var $form = $(e.currentTarget),
            formData = _Utils.default.Form.getData($form);

        this.publish(_Enums.default.ACTION.ADD_ITEM_TO_CART, formData);
      } else {
        if (!this.$btnAddToCart.hasClass(this.CLASS_IS_DISABLED)) {
          this.$btnAddToCart.addClass(_Enums.default.CLASS.HAS_ERROR);
          this.$btnAddToCart.find(this.SELECTOR_SPAN).html(this.btnData.textDisabled);
          this.$btnAddToCart.on('mouseout', this._onAddToCartButtonMouseOut);
        }
      }
    }
    /**
     * Revert original text and style on mouse-out
     * @private
     */

  }, {
    key: "_onAddToCartButtonMouseOut",
    value: function _onAddToCartButtonMouseOut() {
      var _this2 = this;

      this.$btnAddToCart.off('mouseout', this._onAddToCartButtonMouseOut);
      clearTimeout(this.TIMER);
      this.TIMER = setTimeout(function () {
        _this2.$btnAddToCart.find(_this2.SELECTOR_SPAN).html(_this2.btnData.textDefault);

        _this2.$btnAddToCart.removeClass(_Enums.default.CLASS.HAS_ERROR);
      }, this.TIMEOUT);
    }
    /**
     * Runs on DOM Ready and window resize
     * Counting height of right panel and all childs. In case elements is high
     * @private
     */

  }, {
    key: "_adjustShippingInfoPosition",
    value: function _adjustShippingInfoPosition() {
      if (Modernizr.mq(_Enums.default.MQ.IS_DESKTOP)) {
        var availableRightPanelHeight = this.$window.height() - this.HEADER_HEIGHT - this.RIGHT_PANEL_PADDING,
            childElementsHeight = 0;
        this.$rightPanelElement.children().each(function () {
          if ($(this).is(':visible')) {
            childElementsHeight = childElementsHeight + $(this).outerHeight(true);
          }
        });

        if (availableRightPanelHeight > childElementsHeight) {
          this.$shippingInfoElement.addClass(this.CLASS_ABSOLUTE_SHIPPING_INFO);
          this.$rightPanelElement.removeClass(this.CLASS_HEIGHT_100);
        } else {
          this.$shippingInfoElement.removeClass(this.CLASS_ABSOLUTE_SHIPPING_INFO);
          this.$rightPanelElement.addClass(this.CLASS_HEIGHT_100);
        }
      }
    }
    /**
     * Sets animation on the page scroll when clicking on the main image
     * @private
     */

  }, {
    key: "_onMainImageClick",
    value: function _onMainImageClick(event) {
      if (Modernizr.mq(this.IS_CUSTOM_MOBILE)) return;
      var zoomImageSrc = $(event.currentTarget).attr('data-zoom-src'),
          resolveChain = event.currentTarget.getAttribute('data-resolvechain'),
          pdpGalleryImgSrc = event.currentTarget.src;
      this.publish(_Enums.default.ACTION.SHOW_ZOOMED_IMAGE, {
        zoomImgSrc: zoomImageSrc,
        allSources: this.allZoomSources,
        pdpGallerySrc: pdpGalleryImgSrc,
        resolveChain: resolveChain
      });
    }
    /**
     * Displays the availability organism if a size has been chosen
     * @private
     */

  }, {
    key: "_onSizeChanged",
    value: function _onSizeChanged() {
      if (this.$sizeSwatch.find('input').data('value')) {
        this.$availability.addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
      } else {
        this.$availability.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
      }
    }
  }, {
    key: "_onMobileMatch",
    value: function _onMobileMatch() {
      this._changeOrderOfElements(this.$combineWith, this.$dynamicContent);

      this._movePanel(this.SELECTOR_SHIPPING_INFO, this.$rightPanelElement, this.$leftPanelElement);

      this.$leftPanelElement.find(this.SELECTOR_PRODUCT_SIZE_WRAPPER).length ? this.$colorSwatchPanel.insertBefore(this.$productSizeWrapper) : this.$colorSwatchPanel.insertBefore(this.$btnAddToCart);
      var size_options = $(this.SELECTOR_PRODUCT_SIZE_SWATCH).find(this.SELECTOR_SIZE_OPTIONS);
      size_options.removeClass(this.CLASS_FIRST_SWATCH);
      size_options.removeClass(this.CLASS_LAST_SWATCH);
      size_options.eq(0).addClass(this.CLASS_FIRST_SWATCH);

      if ($(this.SELECTOR_PRODUCT_DETAILS).find(this.SELECTOR_PRODUCT_SIZE_SWATCH).find(this.SELECTOR_SIZE_OPTIONS).length > 4) {
        if ($(this.SELECTOR_PRODUCT_SIZE_SWATCH).width() < 300) {
          size_options.eq(4).addClass(this.CLASS_FIRST_SWATCH);
          size_options.eq(3).addClass(this.CLASS_LAST_SWATCH);
        } else {
          size_options.eq(5).addClass(this.CLASS_FIRST_SWATCH);
          size_options.eq(4).addClass(this.CLASS_LAST_SWATCH);
        }
      }

      this.$comparativePanel.insertAfter(this.$productNamePanel);
    }
  }, {
    key: "_onTabletMatch",
    value: function _onTabletMatch() {
      this._changeOrderOfElements(this.$dynamicContent, this.$combineWith);

      this._movePanel(this.SELECTOR_COLOR_SWATCH, this.$leftPanelElement, this.$rightPanelElement);

      this._movePanel(this.SELECTOR_LEFT_PANEL, this.$addToCartForm, this.$rightPanelElement);

      this.$shippingInfoElement.insertBefore(this.$availability);
      this.$productNamePanel.insertBefore(this.$colorSwatchPanel);
      this.$comparativePanel.insertAfter(this.$productNamePanel);
    }
  }, {
    key: "_onDesktopMatch",
    value: function _onDesktopMatch() {
      this._changeOrderOfElements(this.$dynamicContent, this.$combineWith);

      this._movePanel(this.SELECTOR_SHIPPING_INFO, this.$leftPanelElement, this.$rightPanelElement);

      if (this.$el.find(this.SELECTOR_MATERIAL_SWATCH).length) {
        this.$colorSwatchPanel.insertBefore(this.$el.find(this.SELECTOR_MATERIAL_SWATCH));
      } else {
        this._movePanel(this.SELECTOR_COLOR_SWATCH, this.$leftPanelElement, this.$rightPanelElement);
      }

      if (this.$rightPanelElement.find(this.SELECTOR_LEFT_PANEL).length) {
        this._movePanel(this.SELECTOR_LEFT_PANEL, this.$rightPanelElement, this.$addToCartForm);

        this.$leftPanelElement.find(this.SELECTOR_PRODUCT_SIZE_WRAPPER).length ? this.$productNamePanel.insertBefore(this.$productSizeWrapper) : this.$productNamePanel.insertBefore(this.$btnAddToCart);
      }

      $(this.SELECTOR_PRODUCT_DETAILS).find(this.SELECTOR_SHIPPING_INFO).insertBefore($(this.SELECTOR_LEFT_PANEL).find(this.SELECTOR_AVAILABILITY));
      this.$comparativePanel.insertAfter(this.$productNamePanel);
    }
  }, {
    key: "_movePanel",
    value: function _movePanel(element, fromPanel, toPanel) {
      fromPanel.find($(element)).appendTo(toPanel);
    }
  }, {
    key: "_changeOrderOfElements",
    value: function _changeOrderOfElements(element1, element2) {
      element1.before(element2);
    }
  }]);

  return OProductDetails;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OProductDetails;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66,"./../../utils.js":113}],103:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OProductFilters = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OProductFilters, _AppeaserComponentBas);

  var _super = _createSuper(OProductFilters);

  /**
   * Constructor, will run before page loaded
   */
  function OProductFilters() {
    var _this;

    _classCallCheck(this, OProductFilters);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();

    _this._jQueryScopeBinding();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OProductFilters, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      this._detachMQHandlers();

      _get(_getPrototypeOf(OProductFilters.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_O_PAGE_CONTENT = '.o.page-content';
      this.SELECTOR_ICON_CLOSE = '.a-icon-close';
      this.SELECTOR_LINK_OPEN = '.filter-link';
      this.SELECTOR_MOBILE_FILTER_BTN = '.mobile-filter-btn';
      this.SELECTOR_HEADER = '.o-header';
      this.SELECTOR_BODY_HTML = 'body, html';
      this.SELECTOR_FILTER_WRAPPER = '.filter-wrapper';
      this.SELECTOR_SCROLL_CONTENT = '.scroll-content';
      this.SELECTOR_CHECKBOX = '.m-checkbox';
      this.SELECTOR_CHECKBOX_ATOM = '.a-checkbox';
      this.SELECTOR_PREVENT_SCROLL = '.o-header, filter-wrapper .cta-block';
      this.SELECTOR_COLOR_CHECKBOX = '.m-color-checkbox';
      this.SELECTOR_COLOR_FILTER = '.color-filter';
      this.SELECTOR_PRODUCT_LISTING = '.product-listing';
      this.SELECTOR_LEFT_COMPONENT = '.left-component';
      this.SELECTOR_SELECTED_FILTER_VALUES = '.selected-value';
      this.SELECTOR_LAST_LABEL = '.a-label:last-child';
      this.SELECTOR_COLOR_LABEL = 'span:last-child';
      this.SELECTOR_BUTTON_WRAPPER = '.button-wrapper';
      this.SELECTOR_A_BUTTON = '.a-button-nostyle';
      this.SELECTOR_O_LOCALNAVIGATION = '.o-local-navigation';
      this.SELECTOR_FILTER_BUTTON = '.filter-buttons';
      this.SELECTOR_CLEAR_BTN = '.clear-btn, .clear-filter';
      this.SELECTOR_APPLY_BTN = '.set-filter';
      this.SELECTOR_CLOSE_BTN = '.close-filter';
      this.SELECTOR_FILTER = '.o-filter';
      this.SELECTOR_FILTER_SECTION = '.filter-section';
      this.SELECTOR_CTA_BLOCK = '.cta-block';
      this.SELECTOR_COLOR_BOX = '.color-box';
      this.CLASS_SHOW_ALL_FILTERS = 'show-all-filters';
      this.CLASS_OVERLAY = 'is-filter-overlay';
      this.CLASS_COLOR_FILTER = 'color-filter';
      this.CLASS_IS_LARGE = 'is-large';
      this.CLASS_A_BUTTONS = 'a-buttons';
      this.CLASS_HAS_APPLIED_FILTERS = 'has-applied-filters';
      this.CLASS_IN_CONTENT = 'in-content';
      this.SLIDE_DELAY_TIME = 400;
      this.SCROLL_TIME = 400;
      this.SMALL_DIFF = 60;
      this.ESTIMATED_HEIGHT = 172;
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      this._cacheDOMElements();

      this._attachDOMListeners();

      this._attachSubscribers();

      this._attachMQHandlers();

      this.$filterWrapper.find('[data-state-open]').addClass(_Enums.default.CLASS.IS_OPEN_STATE);
      this.publish(_Enums.default.ACTION.REQUEST_FILTER_COLORS);
      this.publish(_Enums.default.EVENT.ON_CHECK_FILTERS);
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$window = $(window);
      this.$oHeader = $(this.SELECTOR_HEADER);
      this.$leftComponent = $(this.SELECTOR_LEFT_COMPONENT);
      this.$bodyHtml = $(this.SELECTOR_BODY_HTML);
      this.$pageContent = $(this.SELECTOR_O_PAGE_CONTENT);
      this.$localNavigation = $(this.SELECTOR_O_LOCALNAVIGATION);
      this.$mobileFilterBtn = this.$el.find(this.SELECTOR_MOBILE_FILTER_BTN);
      this.$filterWrapper = this.$el.find(this.SELECTOR_FILTER_WRAPPER);
      this.$scrollContent = this.$filterWrapper.find(this.SELECTOR_SCROLL_CONTENT);
      this.$ctaBlock = this.$el.find(this.SELECTOR_CTA_BLOCK);
      this.$clearBtn = this.$el.find(this.SELECTOR_CLEAR_BTN);
      this.$applyBtn = this.$el.find(this.SELECTOR_APPLY_BTN);
      this.$closeBtn = this.$el.find(this.SELECTOR_CLOSE_BTN);
      this.$preventScrollElements = $(this.SELECTOR_PREVENT_SCROLL);
      this.$filterbuttonWrapper = this.$el.find(this.SELECTOR_BUTTON_WRAPPER);
      this.$depCatButton = this.$filterbuttonWrapper.find(this.SELECTOR_A_BUTTON);
      this.$filterBtn = this.$el.find(this.SELECTOR_FILTER_BUTTON);
      this.$iconClose = this.$el.find(this.SELECTOR_ICON_CLOSE);
      this.$linkOpen = this.$el.find(this.SELECTOR_LINK_OPEN).not(this.SELECTOR_MOBILE_FILTER_BTN);
      this.$exclusiveGroup = this.$el.find(this.SELECTOR_FILTER);
      this.$oFilter = this.$el.find(this.SELECTOR_FILTER);
      this.isMobileFilter = this.$el.hasClass(this.CLASS_SHOW_ALL_FILTERS);
      this.$filterCheckboxes = this.$el.find(this.SELECTOR_CHECKBOX);
      this.$filterColor = this.$el.find(this.SELECTOR_COLOR_FILTER);
      this.simulatedScroll = false;
      this.heightOfSorroundings = 0;
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_OVERLAY_CLICKED, this._closeMobileFilter);
      this.subscribe(_Enums.default.EVENT.ON_CHECK_FILTERS, this._checkCheckedFilters);
      this.subscribe(_Enums.default.EVENT.ON_FILTER_SELECTED, this._setFiltersAppliedState);
      this.subscribe(_Enums.default.EVENT.ON_FILTER_DESELECTED, this._setFiltersNotAppliedState);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_OVERLAY_CLICKED, this._closeMobileFilter);
      this.unsubscribe(_Enums.default.EVENT.ON_CHECK_FILTERS, this._checkCheckedFilters);
      this.unsubscribe(_Enums.default.EVENT.ON_FILTER_SELECTED, this._setFiltersAppliedState);
      this.unsubscribe(_Enums.default.EVENT.ON_FILTER_DESELECTED, this._setFiltersNotAppliedState);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$iconClose.on('click', this._closeFilter);
      this.$linkOpen.on('click', this._openFilter);
      this.$mobileFilterBtn.on('click', this._openMobileFilter);
      this.$filterCheckboxes.on('change', this._onFilterChange);
      this.$filterColor.on('change', this.SELECTOR_COLOR_CHECKBOX, this._onFilterChange);
      this.$depCatButton.on('click', this._onFilterButtonChange);
      this.$clearBtn.on('click', this._onClearFilter);
      this.$applyBtn.on('click', this._onApplyFilter);
      this.$closeBtn.on('click', this._closeMobileFilter);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$window.off('scroll', this._onScroll);
      this.$iconClose.off('click', this._closeFilter);
      this.$linkOpen.off('click', this._openFilter);
      this.$mobileFilterBtn.off('click', this._openMobileFilter);
      this.$filterCheckboxes.off('change', this._onFilterChange);
      this.$filterColor.off('change', this.SELECTOR_COLOR_CHECKBOX, this._onFilterChange);
      this.$depCatButton.off('click', this._onFilterButtonChange);
      this.$clearBtn.off('click', this._onClearFilter);
      this.$applyBtn.off('click', this._onApplyFilter);
      this.$closeBtn.off('click', this._closeMobileFilter);
    }
  }, {
    key: "_attachMQHandlers",
    value: function _attachMQHandlers() {}
  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {}
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._openFilter = this._openFilter.bind(this);
      this._closeFilter = this._closeFilter.bind(this);
      this._openMobileFilter = this._openMobileFilter.bind(this);
      this._closeMobileFilter = this._closeMobileFilter.bind(this);
      this._onFilterChange = this._onFilterChange.bind(this);
      this._onClearFilter = this._onClearFilter.bind(this);
      this._onApplyFilter = this._onApplyFilter.bind(this);
      this._setFiltersAppliedState = this._setFiltersAppliedState.bind(this);
      this._setFiltersNotAppliedState = this._setFiltersNotAppliedState.bind(this);
      this._onScroll = this._onScroll.bind(this);
      this._checkCheckedFilters = this._checkCheckedFilters.bind(this);
      this._addSelectedTextToFilterTitle = this._addSelectedTextToFilterTitle.bind(this);
      this._fixLabel = this._fixLabel.bind(this);
      this._onFilterButtonChange = this._onFilterButtonChange.bind(this);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /* save for later */

    /*
      _onScroll(){
           if(Modernizr.mq(Enums.MQ.IS_MOBILE) && this.$el.hasClass(this.CLASS_SHOW_ALL_FILTERS)) {
               let st = this.$window.scrollTop();
              if (st > this.lastScrollTop) {
               } else {
                  this.$header.height(this.headerHeight);
              }
              this.lastScrollTop = st;
          }
       }
      */

  }, {
    key: "_onScroll",
    value: function _onScroll() {
      if (this.$bodyHtml.scrollTop() > 200 && Modernizr.mq(_Enums.default.MQ.TABLET_AND_DESKTOP_RANGE) && this.$el.hasClass(this.CLASS_SHOW_ALL_FILTERS) && !this.$el.hasClass(_Enums.default.CLASS.IS_CLOSING_STATE) && !this.simulatedScroll) {
        this._closeMobileFilter();
      }
    }
    /**
     * Checks if any filter has been selected
     * @private
     */

  }, {
    key: "_checkCheckedFilters",
    value: function _checkCheckedFilters() {
      var _this2 = this;

      this.$oFilter.each(function (index, element) {
        _this2._onFilterChange(element);
      });
    }
    /**
     * What happens when clicking the department and category filter.
     * @private
     */

  }, {
    key: "_onFilterButtonChange",
    value: function _onFilterButtonChange(event) {
      var $curTarget = $(event.currentTarget),
          $thisOfilter = $curTarget.closest(this.SELECTOR_FILTER);

      if ($curTarget.hasClass(_Enums.default.CLASS.IS_SELECTED)) {
        $curTarget.removeClass(_Enums.default.CLASS.IS_SELECTED);
        this.publish(_Enums.default.EVENT.ON_FILTER_DESELECTED);
      } else {
        $thisOfilter.find('.' + _Enums.default.CLASS.IS_SELECTED).removeClass(_Enums.default.CLASS.IS_SELECTED);
        $curTarget.addClass(_Enums.default.CLASS.IS_SELECTED);
        this.publish(_Enums.default.EVENT.ON_FILTER_SELECTED);
      }

      this._onFilterChange($thisOfilter);
    }
    /**
     * Checks if any filter has been selected
     * @private
     */

  }, {
    key: "_onFilterChange",
    value: function _onFilterChange(event) {
      var _this3 = this;

      var isClickEvent = typeof event.currentTarget != 'undefined',
          $oFilter = isClickEvent ? $(event.currentTarget).closest(this.$oFilter) : $(event),
          isColorFilter = $oFilter.hasClass(this.CLASS_COLOR_FILTER),
          isButtonFilter = $oFilter.hasClass(this.CLASS_A_BUTTONS),
          $filterCheckboxes = $oFilter.find(this.SELECTOR_CHECKBOX);
      this.nrFilterSelected = 0;
      this.selectedVal = [];
      this.text = undefined;

      if (isColorFilter) {
        $filterCheckboxes = $oFilter.find(this.SELECTOR_COLOR_CHECKBOX);
      }

      if (isButtonFilter) {
        var $filterButtons = $oFilter.find(this.SELECTOR_A_BUTTON);
        $filterButtons.each(function (index, element) {
          if ($(element).hasClass(_Enums.default.CLASS.IS_SELECTED)) {
            _this3.nrFilterSelected++;

            var labelText = _this3._fixLabel($(element).text());

            _this3.selectedVal.push(labelText);
          }
        });
      } else {
        $filterCheckboxes.each(function (index, element) {
          var $checkbox = $(element).find(_this3.SELECTOR_CHECKBOX_ATOM),
              $thisBox = $(element).find(_this3.SELECTOR_COLOR_BOX),
              $checkboxLabel = isColorFilter ? $(element).find(_this3.SELECTOR_COLOR_LABEL) : $(element).find(_this3.SELECTOR_LAST_LABEL),
              checkboxText = $.trim($checkboxLabel.text());
          $checkboxLabel.text(_this3._fixLabel(checkboxText));

          if (isColorFilter && $thisBox.hasClass(_Enums.default.CLASS.IS_SELECTED) && !isClickEvent) {
            $checkbox.prop('checked', true).attr('checked', true);
          }

          if ($checkbox.prop('checked')) {
            if (isColorFilter) {
              $thisBox.addClass(_Enums.default.CLASS.IS_SELECTED);
            }

            _this3.nrFilterSelected++;

            _this3.selectedVal.push($checkboxLabel.text());
          } else {
            if (isColorFilter && isClickEvent) {
              $thisBox.removeClass(_Enums.default.CLASS.IS_SELECTED);
            }
          }
        });
      }

      if (!this.nrFilterSelected) {
        $oFilter.removeClass(_Enums.default.CLASS.IS_FILLED);
      } else {
        this._addSelectedTextToFilterTitle($oFilter, this.selectedVal);

        $oFilter.addClass(_Enums.default.CLASS.IS_FILLED);
      }

      var anyFilled = false;
      this.$oFilter.each(function (index, element) {
        if ($(element).hasClass(_Enums.default.CLASS.IS_FILLED)) {
          anyFilled = true;
        }
      });

      if (anyFilled) {
        if (isClickEvent) {
          this.publish(_Enums.default.EVENT.ON_FILTER_SELECTED);
        } else {
          this._setFiltersAppliedState();
        }
      } else {
        if (isClickEvent) {
          this.publish(_Enums.default.EVENT.ON_FILTER_DESELECTED);
        } else {
          this._setFiltersNotAppliedState();
        }
      }
    }
    /**
     * Fixing the labels to remove unwanted characters which comes from aptus and change first letter.
     * @private
     */

  }, {
    key: "_fixLabel",
    value: function _fixLabel(textString) {
      textString = textString.indexOf('|') > 0 ? textString.split('|')[1] : textString.indexOf('-') > 0 ? textString.split('-')[1] : textString;
      if (textString.length > 1) return $.trim(textString.substring(0, 1).toUpperCase() + textString.substring(1).toLowerCase());
    }
    /**
     * Publish event for clear filters
     * @private
     */

  }, {
    key: "_onClearFilter",
    value: function _onClearFilter() {
      this.publish(_Enums.default.EVENT.ON_FILTER_CLEAR_BUTTON_CLICKED);

      this._setFiltersNotAppliedState();

      this._closeMobileFilter();

      this._closeFilter();
    }
    /**
     * Publish event for apply filters
     * @private
     */

  }, {
    key: "_onApplyFilter",
    value: function _onApplyFilter() {
      this.publish(_Enums.default.EVENT.ON_FILTER_APPLY_BUTTON_CLICKED);

      this._closeMobileFilter();

      this._closeFilter();
    }
    /**
     * Add selected values to filter title
     * @private
     */

  }, {
    key: "_addSelectedTextToFilterTitle",
    value: function _addSelectedTextToFilterTitle($targetFilter, textArray) {
      var $filterTitle = $targetFilter.find(this.SELECTOR_SELECTED_FILTER_VALUES);
      $filterTitle.empty();
      if (!textArray) return;
      $.each(textArray, function (index, value) {
        var comma = index == textArray.length - 1 ? '' : ', ',
            innerHTML = value + comma;
        $('<span>').text(innerHTML).appendTo($filterTitle);
      });
    }
    /**
     * Indicates that filters has been applied and shows/enables clear button
     * @private
     */

  }, {
    key: "_setFiltersAppliedState",
    value: function _setFiltersAppliedState() {
      this.$el.addClass(this.CLASS_HAS_APPLIED_FILTERS);
      this.$clearBtn.removeClass(_Enums.default.CLASS.IS_DISABLED_STATE).prop('disabled', false);
    }
    /**
     * Indicates that no filters has been applied and hides/disables clear button
     * @private
     */

  }, {
    key: "_setFiltersNotAppliedState",
    value: function _setFiltersNotAppliedState() {
      this.$el.removeClass(this.CLASS_HAS_APPLIED_FILTERS);
      this.$clearBtn.addClass(_Enums.default.CLASS.IS_DISABLED_STATE).attr('disabled', true);
    }
    /**
     * Displays the appropriate overlay
     * @private
     */

  }, {
    key: "_showOverlay",
    value: function _showOverlay() {
      this.publish(_Enums.default.ACTION.SHOW_OVERLAY, {
        classes: this.CLASS_OVERLAY,
        keepScroll: true
      });
      this.publish(_Enums.default.ACTION.HIDE_PAGE_CONTENT, {
        nohide: true
      });
    }
    /**
     * Opens filter
     * @private
     */

  }, {
    key: "_openFilter",
    value: function _openFilter(e) {
      e.preventDefault();
      var $targetAcordion = $(e.currentTarget).closest(this.SELECTOR_FILTER),
          $filterSection = $targetAcordion.find(this.SELECTOR_FILTER_SECTION);
      this.isMobileFilter = this.$el.hasClass(this.CLASS_SHOW_ALL_FILTERS);

      if ($targetAcordion.hasClass(_Enums.default.CLASS.IS_DISABLED_STATE)) {
        return;
      }

      if ($targetAcordion.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        this._closeFilter($targetAcordion);

        return;
      }

      var $openElement = this.$exclusiveGroup.filter('.' + _Enums.default.CLASS.IS_OPEN_STATE),
          closeDelay = 0;

      if ($openElement.length > 0) {
        this._closeFilter($openElement); // Delay this.SLIDE_DELAY_TIME if it should close before open a new


        closeDelay = 0;
      }

      if ($filterSection.is(':hidden')) {
        if (this.isMobileFilter) {
          $targetAcordion.addClass(_Enums.default.CLASS.IS_OPEN_STATE);

          if ($targetAcordion.hasClass(this.CLASS_COLOR_FILTER)) {
            this.publish(_Enums.default.ACTION.REQUEST_FILTER_COLORS);
          }

          $filterSection.stop().delay(closeDelay).slideDown(this.SLIDE_DELAY_TIME);
          return;
        }

        $targetAcordion.addClass(_Enums.default.CLASS.IS_OPEN_STATE);

        if ($targetAcordion.find(this.SELECTOR_CHECKBOX).length > 10) {
          $targetAcordion.find(this.SELECTOR_FILTER_SECTION).addClass(this.CLASS_IS_LARGE);
        }

        return;
      }

      this._closeFilter($openElement);
    }
  }, {
    key: "_closeFilter",
    value: function _closeFilter($target) {
      if (!$target) {
        $target = this.$exclusiveGroup.filter('.' + _Enums.default.CLASS.IS_OPEN_STATE);
      }

      if (this.isMobileFilter) {
        var $targetFilter = $target.find(this.SELECTOR_FILTER_SECTION);
        $target.addClass(_Enums.default.CLASS.IS_CLOSING_STATE);
        $targetFilter.stop().slideUp(this.SLIDE_DELAY_TIME, function () {
          $target.removeClass(_Enums.default.CLASS.IS_CLOSING_STATE);
          $target.removeClass(_Enums.default.CLASS.IS_OPEN_STATE);
        });
        return;
      }

      $target.removeClass(_Enums.default.CLASS.IS_OPEN_STATE);
    }
    /**
     * Opens filter
     * @private
     */

  }, {
    key: "_openMobileFilter",
    value: function _openMobileFilter(e) {
      var _this4 = this;

      e.preventDefault();

      if (this.$el.hasClass(this.CLASS_SHOW_ALL_FILTERS)) {
        this._closeMobileFilter();

        return;
      }

      var delay = 0;

      if (Modernizr.mq(_Enums.default.MQ.IS_MOBILE)) {
        this.$window.on('scroll', this._onScroll);
        this.scrollTopHeight = this.$el.find(this.SELECTOR_MOBILE_FILTER_BTN).outerHeight(true) + this.$oHeader.outerHeight(true);
        var bodyScroll = this.$bodyHtml.scrollTop() + this.$oHeader.outerHeight(true);

        if (this.$el.offset().top != bodyScroll && bodyScroll > 0) {
          this.simulatedScroll = true;
          delay = this.SCROLL_TIME;
          var extraMargin = this.$el.closest(this.SELECTOR_PRODUCT_LISTING).hasClass(this.CLASS_IN_CONTENT) && !Modernizr.mq(_Enums.default.MQ.IS_MOBILE) ? this.SMALL_DIFF : 0;
          this.$bodyHtml.animate({
            scrollTop: this.$el.find(this.SELECTOR_MOBILE_FILTER_BTN).offset().top + this.$localNavigation.outerHeight - this.$oHeader.outerHeight(true) - extraMargin
          }, this.SCROLL_TIME);
        }
      }

      this.$ctaBlock.show();
      setTimeout(function () {
        _this4._showOverlay();

        _this4.$el.addClass(_this4.CLASS_SHOW_ALL_FILTERS);

        if (_this4.$filterColor.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
          _this4.publish(_Enums.default.ACTION.REQUEST_FILTER_COLORS);
        }

        if (Modernizr.mq(_Enums.default.MQ.IS_MOBILE)) {
          _this4.heightOfSorroundings = _this4.heightOfSorroundings === 0 ? function () {
            var ctaHeight = _this4.$ctaBlock.outerHeight(true),
                headerHeight = _this4.$oHeader.outerHeight(true),
                leftComponentHeight = _this4.$leftComponent.outerHeight(true),
                localNavHeight = _this4.$localNavigation.outerHeight(true),
                filterBtnHeight = _this4.$filterBtn.outerHeight(true);

            if (ctaHeight > 0 && headerHeight > 0 && leftComponentHeight > 0) {
                return ctaHeight + headerHeight + leftComponentHeight + localNavHeight + filterBtnHeight;
            } else {
              return _this4.ESTIMATED_HEIGHT;
            }
          }() : _this4.heightOfSorroundings;

          //샵인샵 iframe 때문에 수정 : 20210909
          //_this4.$el.find(_this4.SELECTOR_SCROLL_CONTENT).height(_this4.$window.height() - _this4.heightOfSorroundings);
            _this4.$el.find(_this4.$filterWrapper).height(window.parent.innerHeight - _this4.heightOfSorroundings - 180);
          // $(window.parent.document).find('body').addClass(_Enums.default.CLASS.DISABLE_SCROLL);

          _this4.publish(_Enums.default.ACTION.DISABLE_SCROLL, {
            $touchScrollElement: _this4.$scrollContent
          });

          _this4.$preventScrollElements.on('touchmove', function (e) {
            e.preventDefault();
          });

          _this4.$scrollContent.on('touchstart', _this4._onFilterTouchStart);

          _this4.$scrollContent.on('touchmove', _this4._onFilterTouchMove);
        }
      }, delay);
    }
    /**
     * Close filter
     * @private
     */

  }, {
    key: "_closeMobileFilter",
    value: function _closeMobileFilter() {
      var _this5 = this;

      if (this.$el.hasClass(this.CLASS_SHOW_ALL_FILTERS)) {

        //샵인샵 iframe 때문에 수정 : 20210909
        // $(window.parent.document).find('body').removeClass(_Enums.default.CLASS.DISABLE_SCROLL);

        this.publish(_Enums.default.ACTION.ENABLE_SCROLL);
        this.publish(_Enums.default.ACTION.HIDE_OVERLAY);
        this.publish(_Enums.default.ACTION.SHOW_PAGE_CONTENT);
        this.$window.off('scroll', this._onScroll);
        this.$ctaBlock.fadeOut();
        this.$el.addClass(_Enums.default.CLASS.IS_CLOSING_STATE);
        setTimeout(function () {
          _this5.$el.removeClass(_this5.CLASS_SHOW_ALL_FILTERS);

          _this5.$el.removeClass(_Enums.default.CLASS.IS_CLOSING_STATE);
        }, this.SLIDE_DELAY_TIME);
      }

      this.$preventScrollElements.off('touchmove');
      this.$scrollContent.off('touchstart', this._onFilterTouchStart);
      this.$scrollContent.off('touchmove', this._onFilterTouchMove);
    }
    /**
     * Touchstart event handler on the filter items
     * @private
     */

  }, {
    key: "_onFilterTouchStart",
    value: function _onFilterTouchStart(e) {
      this.allowUp = this.scrollTop > 0;
      this.allowDown = this.scrollTop < this.scrollHeight - this.clientHeight;
      this.lastY = e.originalEvent.targetTouches[0].pageY;
    }
    /**
     * Touchmove event handler on the filter items
     * @private
     */

  }, {
    key: "_onFilterTouchMove",
    value: function _onFilterTouchMove(e) {
      var up = e.originalEvent.targetTouches[0].pageY > this.lastY,
          down = !up;

      if (e.originalEvent.scale !== undefined && e.originalEvent.scale !== 1) {
        e.preventDefault();
      }

      this.lastY = e.originalEvent.targetTouches[0].pageY;

      if (up && this.allowUp || down && this.allowDown) {
        e.stopPropagation();
      } else {
        e.preventDefault();
      }
    }
  }]);

  return OProductFilters;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OProductFilters;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],104:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OProductGallery = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OProductGallery, _AppeaserComponentBas);

  var _super = _createSuper(OProductGallery);

  /**
   * Constructor, will run before page loaded
   */
  function OProductGallery() {
    var _this;

    _classCallCheck(this, OProductGallery);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OProductGallery, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OProductGallery.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_GALLERY_IMAGE = '.a-picture';
      this.SELECTOR_A_IMAGE = '.a-image';
      this.SELECTOR_ZOOM_SLIDER = '.o-zoom-slider';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._attachSubscribers();

      this._cacheDOMElements();

      this._attachDOMListeners();
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      var _this2 = this;

      this.$galleryImage = this.$el.find(this.SELECTOR_GALLERY_IMAGE);
      this.$selectedZoomSlider = $(this.SELECTOR_ZOOM_SLIDER);
      this.allZoomSources = [];
      this.$galleryImage.each(function (index, element) {
        _this2.allZoomSources.push($(element).data('zoom-src'));
      });
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a  new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._triggerZoom = this._triggerZoom.bind(this);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$selectedZoomSlider.on('click', this.SELECTOR_GALLERY_IMAGE, this._triggerZoom);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$selectedZoomSlider.off('click', this.SELECTOR_GALLERY_IMAGE, this._triggerZoom);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Triggers zoom
     * @private
     */

  }, {
    key: "_triggerZoom",
    value: function _triggerZoom(event) {
      var zoomImageSrc = event.currentTarget.getAttribute('data-zoom-src'),
          resolveChain = event.currentTarget.getAttribute('data-resolvechain'),
          pdpGalleryImgSrc = event.currentTarget.getAttribute('src'); // if attributes are added to the img tag instead of picture

      var currentTarget = $(event.currentTarget).find(this.SELECTOR_A_IMAGE);
      zoomImageSrc = zoomImageSrc ? zoomImageSrc : currentTarget.attr('data-zoom-src');
      resolveChain = resolveChain ? resolveChain : currentTarget.attr('data-resolvechain');
      pdpGalleryImgSrc = pdpGalleryImgSrc ? pdpGalleryImgSrc : currentTarget.attr('src');
      this.publish(_Enums.default.ACTION.SHOW_ZOOMED_IMAGE, {
        zoomImgSrc: zoomImageSrc,
        allSources: this.allZoomSources,
        pdpGallerySrc: pdpGalleryImgSrc,
        resolveChain: resolveChain
      });
    }
  }]);

  return OProductGallery;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OProductGallery;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],105:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Utils = _interopRequireDefault(require('./../../utils.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OQuickBuy = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OQuickBuy, _AppeaserComponentBas);

  var _super = _createSuper(OQuickBuy);

  /**
   * Constructor, will run before page loaded
   */
  function OQuickBuy() {
    var _this;

    _classCallCheck(this, OQuickBuy);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OQuickBuy, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      this._detachMQHandlers();

      _get(_getPrototypeOf(OQuickBuy.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Attaches MQ handlers
     * @private
     */

  }, {
    key: "_attachMQHandlers",
    value: function _attachMQHandlers() {
      this.MQMediumHandler = {
        deferSetups: false,
        unmatch: this._close.bind(this)
      };
      enquire.register(_Enums.default.MQ.IS_DESKTOP, this.MQMediumHandler);
    }
    /**
     * Detaches MQ handlers
     * @private
     */

  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {
      enquire.unregister(_Enums.default.MQ.IS_DESKTOP, this.MQMediumHandler);
    }
    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_PDP_FORM = '.o-form.add-to-cart';
      this.SELECTOR_SIZE_DROPDOWN = '.m-dropdown';
      this.SELECTOR_BTN_ADD_TO_CART = '.a-button.add-to-cart';
      this.SELECTOR_BTN_ADD_TO_CART_SPAN = '.a-button.add-to-cart span';
      this.BUTTON_MSG_TIMEOUT = 4000;
      this.SELECTOR_LIGHTBOX_WRAPPER = '.lightbox-wrapper';
      this.SELECTOR_BODY = 'body';
      this.SELECTOR_SIZE_SWATCH = '.a-size-swatch';
      this.SELECTOR_SIZE_OPTIONS = '.size-options';
      this.CLASS_IS_ONE_SIZE = 'is-one-size';
      this.CLASS_IS_SELECTED = 'is-selected';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this.buttonMsgTimer = 0;

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._attachMQHandlers();
    }
    /**
     * Caching DOM elements for performance
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$addToCartForm = this.$el.find(this.SELECTOR_PDP_FORM);
      this.$sizeDropdown = this.$el.find(this.SELECTOR_SIZE_DROPDOWN);
      this.$btnAddToCart = this.$el.find(this.SELECTOR_BTN_ADD_TO_CART);
      this.btnData = this.$btnAddToCart.data();
      this.$btnAddToCartSpan = this.$el.find(this.SELECTOR_BTN_ADD_TO_CART_SPAN);
      this.$body = this.$el.parents(this.SELECTOR_BODY);
      this.$lightBoxWrapper = this.$body.find(this.SELECTOR_LIGHTBOX_WRAPPER);
      this.$sizeSwatch = this.$el.find(this.SELECTOR_SIZE_SWATCH);
      this.oneSizeQuickBuy = this.$el.hasClass(this.CLASS_IS_ONE_SIZE);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onAddToCartSubmit = this._onAddToCartSubmit.bind(this);
      this._setButtonMessage = this._setButtonMessage.bind(this);
      this._onSizeChanged = this._onSizeChanged.bind(this);
      this._onSizeDropdownClick = this._onSizeDropdownClick.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_ITEM_ADDED_TO_CART, this._close);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_ITEM_ADDED_TO_CART, this._close);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$addToCartForm.on('submit', this._onAddToCartSubmit);
      this.$sizeDropdown.on('change', this._onSizeChanged);
      this.$sizeDropdown.on('click', this._onSizeDropdownClick);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$addToCartForm.off('submit', this._onAddToCartSubmit);
      this.$sizeDropdown.off('change', this._onSizeChanged);
      this.$sizeDropdown.off('click', this._onSizeDropdownClick);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * On addToCartSubmit
     * @param e
     * @private
     */

  }, {
    key: "_onAddToCartSubmit",
    value: function _onAddToCartSubmit(e) {
      e.preventDefault();
      e.stopPropagation();

      if (this.$sizeSwatch.find(this.SELECTOR_SIZE_OPTIONS).hasClass(this.CLASS_IS_SELECTED) || !this.$sizeSwatch.length || this.oneSizeQuickBuy) {
        var formData = _Utils.default.Form.getData(this.$addToCartForm);

        this.publish(_Enums.default.ACTION.ADD_ITEM_TO_CART, formData);
      } else {
        this._setButtonMessage(this.btnData.textDisabled);
      }
    }
    /**
     * Sets and reverts to original text and style on button
     * @private
     */

  }, {
    key: "_setButtonMessage",
    value: function _setButtonMessage(msg) {
      var _this2 = this;

      this.$btnAddToCart.addClass(_Enums.default.CLASS.HAS_ERROR);
      this.$btnAddToCartSpan.html(msg);
      clearTimeout(this.buttonMsgTimer);
      this.buttonMsgTimer = setTimeout(function () {
        _this2.$btnAddToCartSpan.html(_this2.btnData.textDefault);

        _this2.$btnAddToCart.removeClass(_Enums.default.CLASS.HAS_ERROR);
      }, this.BUTTON_MSG_TIMEOUT);
    }
    /**
     * Resets button text and style if size is selected
     * @private
     */

  }, {
    key: "_onSizeChanged",
    value: function _onSizeChanged() {
      if (this.$sizeDropdown.find('option:selected').hasClass(this.CLASS_SELECT_LABEL)) {
        this.$btnAddToCart.removeClass(_Enums.default.CLASS.HAS_ERROR);
        this.$btnAddToCart.blur();
      }
    }
    /**
     * Closes the containing lightbox
     * @private
     */

  }, {
    key: "_close",
    value: function _close() {
      this.publish(_Enums.default.ACTION.HIDE_LIGHTBOX);
    }
  }, {
    key: "_onSizeDropdownClick",
    value: function _onSizeDropdownClick() {
      this.$lightBoxWrapper.animate({
        scrollTop: this.$lightBoxWrapper[0].scrollHeight - Math.floor(this.$lightBoxWrapper.outerHeight())
      }, 400);
    }
  }]);

  return OQuickBuy;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OQuickBuy;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66,"./../../utils.js":113}],106:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OSearchSuggestion = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OSearchSuggestion, _AppeaserComponentBas);

  var _super = _createSuper(OSearchSuggestion);

  /**
   * Constructor, will run before page loaded
   */
  function OSearchSuggestion() {
    var _this;

    _classCallCheck(this, OSearchSuggestion);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();

    _this._jQueryScopeBinding();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OSearchSuggestion, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachMQHandlers();

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OSearchSuggestion.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_PAGES_UL = 'ul.pages';
      this.SELECTOR_PRODUCTS_UL = 'ul.products';
      this.SELECTOR_PRODUCT_HEADING = '.product-heading';
      this.SELECTOR_SEARCH_INPUT = '.o-search input.search-field';
      this.SELECTOR_SEARCH_FORM = '.o-search .o-form';
      this.SELECTOR_O_NAVIGATION = '.o-navigation';
      this.SELECTOR_CATEGORY_MENU = '.category-wrapper.is-visible .category-menu';
      this.SELECTOR_CURATED_CONTENT = '.category-wrapper.is-visible .curated-content';
      this.MAX_NO_OF_SUGGESTIONS = 5;
      this.LOCAL_HOST = 'localhost';
      this.SELECTOR_SEARCH = '.o-search'; //Handlebars templates

      this.SELECTOR_SITE_TEMPLATE = '#search-suggestions-site';
      this.SELECTOR_PRODUCT_TEMPLATE = '#search-suggestions-product';
      this.ANIMATION_DELAY = 500;
      this.CLASS_IS_OPEN = 'is-open';
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$pagesUL = this.$el.find(this.SELECTOR_PAGES_UL);
      this.$productsUL = this.$el.find(this.SELECTOR_PRODUCTS_UL);
      this.$suggestionSiteTemplate = $(this.SELECTOR_SITE_TEMPLATE);
      this.$suggestionProductTemplate = $(this.SELECTOR_PRODUCT_TEMPLATE);
      this.$productHeading = this.$el.find(this.SELECTOR_PRODUCT_HEADING);
      this.$searchInput = $(this.SELECTOR_SEARCH_INPUT);
      this.$searchForm = $(this.SELECTOR_SEARCH_FORM);
      this.$categoryMenu = this.$el.parents(this.SELECTOR_O_NAVIGATION).find(this.SELECTOR_CATEGORY_MENU);
      this.$curatedContent = $(this.SELECTOR_CURATED_CONTENT);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onSearchValueKeyUp = this._onSearchValueKeyUp.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_SHOW_SEARCH_SUGGESTIONS, this._onSuggestionsRecieved);
      this.subscribe(_Enums.default.ACTION.HIDE_SEARCH, this._clearSuggestions);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_SHOW_SEARCH_SUGGESTIONS, this._onSuggestionsRecieved);
      this.unsubscribe(_Enums.default.ACTION.HIDE_SEARCH, this._clearSuggestions);
    }
  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._attachMQHandlers();

      this.MIN_SUGGESTION_CHARACTERS = parseInt(this.$searchForm.data('min-characters')) || 3;
    }
  }, {
    key: "_attachMQHandlers",
    value: function _attachMQHandlers() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$searchInput.on('keyup', this._onSearchValueKeyUp);
    }
  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {
      this.$searchInput.off('keyup', this._onSearchValueKeyUp);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Handles key up in search
     * @private
     */

  }, {
    key: "_onSearchValueKeyUp",
    value: function _onSearchValueKeyUp() {
      var _this2 = this;

      var search_string = this.$searchInput.val().trim();

      if (search_string) {
        if (search_string.length >= this.MIN_SUGGESTION_CHARACTERS) {
          clearTimeout(this.TRIGGER_SEARCH_TIMEOUT);
          this.TRIGGER_SEARCH_TIMEOUT = setTimeout(function () {
            _this2.publish(_Enums.default.ACTION.GET_SEARCH_SUGGESTIONS, search_string.toLowerCase());
          }, this.SEARCH_TIMER);
          this.SEARCH_TIMER = 150;
        } else {
          this.SEARCH_TIMER = 0;

          this._clearSuggestions(0);
        }
      } else {
        this._clearSuggestions(0);
      }
    }
    /**
     * Prepares object used by Handlebars to render search suggestions.
     * @param data
     * @private
     */

  }, {
    key: "_onSuggestionsRecieved",
    value: function _onSuggestionsRecieved(data) {
      var inputLength = this.$searchInput.val().length,
          nrOfProductSuggestions = Math.floor(this._calcMaxNoOfProductSuggestions(data.siteSuggestions.length, data.productSuggestions.length)),
          nrOfPageSuggestions = this._calcMaxNoOfPageSuggestions(data.siteSuggestions.length, nrOfProductSuggestions),
          allowedURLRegEx = /^[/]/,
          isUrlSetValid = true,
          allSuggestions = data.siteSuggestions.concat(data.productSuggestions);

      data.productSuggestions.splice(nrOfProductSuggestions);
      data.siteSuggestions.splice(nrOfPageSuggestions);

      for (var i = 0; i < data.siteSuggestions.length; i++) {
        var obj = data.siteSuggestions[i];
        obj.searchString = obj.suggestion.slice(0, inputLength);
        obj.completeText = obj.suggestion.slice(inputLength);
      }

      if (window.location.hostname !== this.LOCAL_HOST) {
        for (var j = 0; j < allSuggestions.length; j++) {
          if (!allSuggestions[j].url.match(allowedURLRegEx)) {
            isUrlSetValid = false;
          }
        }
      }

      if (isUrlSetValid) {
        this._setSuggestions(data);
      }
    }
    /**
     * Populates the ULs with search suggestions based on data passed as a parameter.
     * @private
     */

  }, {
    key: "_setSuggestions",
    value: function _setSuggestions(data) {
      var htmlStringSite = '',
          htmlStringProducts = '';

      if (data.siteSuggestions.length) {
        var suggestionTemplateSite = Handlebars.compile(this.$suggestionSiteTemplate.html());
        htmlStringSite = suggestionTemplateSite({
          suggestions: data.siteSuggestions
        });
      }

      if (data.productSuggestions.length) {
        var suggestionTemplateProducts = Handlebars.compile(this.$suggestionProductTemplate.html());
        htmlStringProducts = suggestionTemplateProducts({
          suggestions: data.productSuggestions
        });
        this.$productHeading.removeClass(_Enums.default.CLASS.DISPLAY_NONE);
      } else {
        this.$productHeading.addClass(_Enums.default.CLASS.DISPLAY_NONE);
      }

      this.$categoryMenu = this.$el.parents(this.SELECTOR_O_NAVIGATION).find(this.SELECTOR_CATEGORY_MENU);
      this.$categoryMenu.addClass(_Enums.default.CLASS.IS_HIDDEN_STATE);

      if (Modernizr.mq(_Enums.default.MQ.IS_MOBILE_HEADER) && $(this.SELECTOR_SEARCH).hasClass(this.CLASS_IS_OPEN)) {
        this.$curatedContent = $(this.SELECTOR_CURATED_CONTENT);
        this.$curatedContent.removeClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
      }

      var scriptRegex = /<script|&lt;script/; //Don't accept script tags.

      if (htmlStringSite.match(scriptRegex) === null && htmlStringProducts.match(scriptRegex) === null) {
        this.$pagesUL.html(htmlStringSite);
        this.$productsUL.html(htmlStringProducts);
      }
    }
    /**
     * Empties the search suggestions.
     * @private
     */

  }, {
    key: "_clearSuggestions",
    value: function _clearSuggestions() {
      var _this3 = this;

      var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.ANIMATION_DELAY;
      setTimeout(function () {
        _this3.$pagesUL.html('');

        _this3.$productsUL.html('');

        _this3.$productHeading.addClass(_Enums.default.CLASS.DISPLAY_NONE);

        if (!Modernizr.mq(_Enums.default.MQ.IS_MOBILE_HEADER) && $(_this3.SELECTOR_SEARCH).hasClass(_this3.CLASS_IS_OPEN)) {
          _this3.$categoryMenu.removeClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
        }
      }, delay);
    }
    /**
     * Calculates the maximum number of Product suggestions to be displayed,
     * based on the amount of total Page suggestions found, and the maximum permitted.
     * @param NoOfPageSuggestions
     * @param NoOfProductSuggestions
     * @private
     */

  }, {
    key: "_calcMaxNoOfProductSuggestions",
    value: function _calcMaxNoOfProductSuggestions(NoOfPageSuggestions, NoOfProductSuggestions) {
      if (NoOfPageSuggestions < this.MAX_NO_OF_SUGGESTIONS / 2) {
        return NoOfProductSuggestions > this.MAX_NO_OF_SUGGESTIONS / 2 ? this.MAX_NO_OF_SUGGESTIONS - NoOfPageSuggestions : NoOfProductSuggestions;
      } else {
        return NoOfProductSuggestions > this.MAX_NO_OF_SUGGESTIONS / 2 ? this.MAX_NO_OF_SUGGESTIONS / 2 : NoOfProductSuggestions;
      }
    }
    /**
     * Calculates the maximum number of Page suggestions to be displayed,
     * based on the amount of calculated Product suggestions, and the maximum permitted.
     * @private
     */

  }, {
    key: "_calcMaxNoOfPageSuggestions",
    value: function _calcMaxNoOfPageSuggestions(NoOfPageSuggestions, NoOfProductSuggestions) {
      var NoOfAvailableSuggestions = this.MAX_NO_OF_SUGGESTIONS - NoOfProductSuggestions;
      return NoOfPageSuggestions > NoOfAvailableSuggestions ? NoOfAvailableSuggestions : NoOfPageSuggestions;
    }
  }]);

  return OSearchSuggestion;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OSearchSuggestion;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],107:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

var _Utils = _interopRequireDefault(require('./../../utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OSearch = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OSearch, _AppeaserComponentBas);

  var _super = _createSuper(OSearch);

  /**
   * Constructor, will run before page loaded
   */
  function OSearch() {
    var _this;

    _classCallCheck(this, OSearch);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._declareConstants();

    _this._jQueryScopeBinding();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OSearch, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachMQHandlers();

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OSearch.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_INPUT_WRAPPER = '.input-field-wrapper';
      this.SELECTOR_SEARCH_INPUT = '.input-field-wrapper .a-input.search-field';
      this.SELECTOR_SEARCH_HINT = '.input-field-wrapper .a-input.text-hint';
      this.SELECTOR_CURATED_SUGGESTIONS = '.curated-search-suggestions';
      this.SELECTOR_ACTIVE_CURATED_SUGGESTION = 'li:not(.is-hidden)';
      this.SELECTOR_HEADER = '.o-header';
      this.SELECTOR_PAGE_CONTENT = '.o-page-content';
      this.SELECTOR_INPUT = 'input';
      this.SELECTOR_SEARCH = '.o-search';
      this.SELECTOR_CURATED_CONTENT = '.category-wrapper.is-visible .curated-content';
      this.REGEX_ALLOWED_TRIGGER_KEYS = /^[a-z|A-Z|0-9]$/;
      this.CLASS_FLY_OUT = 'fly-out';
      this.INPUT_PLACEHOLDER_SHORT = '§ Search';
      this.INPUT_VALUE = '';
      this.ANIMATION_DURATION = 400;
      this.FLY_OUT_DURATOIN = 350;
      this.FLYING_IN_OUT_DURATION = 5000;
      this.SCROLLING_DURATION = 1000;
      this.SELECTOR_SEARCH_ICON = '.search-icon';
      this.SELECTOR_SEARCH_FORM = '.search-form';
      this.CLASS_HAS_OPEN_SEARCH = 'has-open-search';
      this.CLASS_IS_SEARCH_VISIBLE = 'is-search-visible';
      this.CLASS_SEARCH_ICON = 'a-icon-lg-search';
      this.CLASS_CLOSE_ICON = 'a-icon-close';
      this.CLASS_IS_EXTENDED = 'is-extended';
      this.CURRENT_STATE_HEADER = '';
      this.CLASS_IS_OPEN = 'is-open';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._attachSubscribers();

      this._cacheDOMElements();

      this._attachMQHandlers();

      this._attachDOMListeners();

      this._activateCuratedSuggestions();

      this._onInit();
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$body = $('body');
      this.$window = $(window);
      this.$oHeader = $(this.SELECTOR_HEADER);
      this.$searchInput = this.$el.find(this.SELECTOR_SEARCH_INPUT);
      this.$searchHint = this.$el.find(this.SELECTOR_SEARCH_HINT);
      this.$curatedSuggestionsWrapper = $(this.SELECTOR_CURATED_SUGGESTIONS);
      this.$curatedSuggestions = this.$curatedSuggestionsWrapper.find('li');
      this.$input = $(this.SELECTOR_INPUT);
      this.$pageContent = $(this.SELECTOR_PAGE_CONTENT);
      this.$inputFieldWrapper = this.$el.find(this.SELECTOR_INPUT_WRAPPER);
      this.$searchIcon = this.$oHeader.find(this.SELECTOR_SEARCH_ICON);
      this.$searchForm = this.$el.find(this.SELECTOR_SEARCH_FORM);
      this.isTransitioning = false;
      this.animationPauseTiming = 0; // margin for notification

      this.pageContentMarginTop = parseInt(this.$pageContent.css('margin-top'));
      this.$curatedContent = $(this.SELECTOR_CURATED_CONTENT);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onScroll = this._onScroll.bind(this);
      this._onInputChange = this._onInputChange.bind(this);
      this._onSearchInputFocus = this._onSearchInputFocus.bind(this);
      this._onSearchInputBlur = this._onSearchInputBlur.bind(this);
      this._setSearchHint = this._setSearchHint.bind(this);
      this._resumeCuratedSuggestionAnimation = this._resumeCuratedSuggestionAnimation.bind(this);
      this._pauseCuratedSuggestionAnimation = this._pauseCuratedSuggestionAnimation.bind(this);
      this._onSearchSubmit = this._onSearchSubmit.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers'); //Events


      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_PAGE_CONTENT_REPLACED, this._onPageContentReplaced);
      this.subscribe(_Enums.default.EVENT.ON_KEY_DOWN, this._onKeyDown); //Actions

      this.subscribe(_Enums.default.ACTION.SET_SEARCH_HINT, this._setSearchHint);
      this.subscribe(_Enums.default.ACTION.SHOW_SEARCH, this._showSearch);
      this.subscribe(_Enums.default.ACTION.HIDE_SEARCH, this._hideSearch);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers'); //Events


      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_PAGE_CONTENT_REPLACED, this._onPageContentReplaced);
      this.unsubscribe(_Enums.default.EVENT.ON_KEY_DOWN, this._onKeyDown); //Actions

      this.unsubscribe(_Enums.default.ACTION.SET_SEARCH_HINT, this._setSearchHint);
      this.unsubscribe(_Enums.default.ACTION.SHOW_SEARCH, this._showSearch);
      this.unsubscribe(_Enums.default.ACTION.HIDE_SEARCH, this._hideSearch);
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$searchInput.on('focus', this._onSearchInputFocus);
      this.$searchInput.on('blur', this._onSearchInputBlur);
      this.$searchInput.on('input', this._onInputChange);
      this.$searchInput.on('keyup', this._onSearchSubmit);
      this.$curatedSuggestionsWrapper.on('mouseover', this.SELECTOR_ACTIVE_CURATED_SUGGESTION, this._pauseCuratedSuggestionAnimation);
      this.$curatedSuggestionsWrapper.on('mouseleave', this.SELECTOR_ACTIVE_CURATED_SUGGESTION, this._resumeCuratedSuggestionAnimation);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$searchInput.off('focus', this._onSearchInputFocus);
      this.$searchInput.off('blur', this._onSearchInputBlur);
      this.$searchInput.off('input', this._onInputChange);
      this.$searchInput.off('keyup', this._onSearchSubmit);
      this.$window.off('scroll', this._onScroll);
      this.$curatedSuggestionsWrapper.off('mouseover', this.SELECTOR_ACTIVE_CURATED_SUGGESTION, this._pauseCuratedSuggestionAnimation);
      this.$curatedSuggestionsWrapper.off('mouseleave', this.SELECTOR_ACTIVE_CURATED_SUGGESTION, this._resumeCuratedSuggestionAnimation);
    }
    /**
     * Attach media query handlers
     * @private
     */

  }, {
    key: "_attachMQHandlers",
    value: function _attachMQHandlers() {
      this.MQMobileHandler = {
        deferSetup: true
      };
      enquire.register(_Enums.default.MQ.IS_MOBILE_HEADER, this.MQMobileHandler);
    }
    /**
     * Detach media query handlers
     * @private
     */

  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {
      enquire.unregister(_Enums.default.MQ.IS_MOBILE_HEADER, this.MQMobileHandler);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_onInit",
    value: function _onInit() {
      this.publish(_Enums.default.ACTION.SEARCH_INITIALISE);
    }
    /**
     * Handles key event.
     * @param e
     * @private
     */

  }, {
    key: "_onKeyDown",
    value: function _onKeyDown(e) {
      var event = e.originalEvent; //Allow edits e.g. Cmd + C

      if (event.metaKey || event.ctrlKey || $('input:focus').length || $('textarea:focus').length) {
        return;
      } else if (event.key.match(this.REGEX_ALLOWED_TRIGGER_KEYS) && !this.$el.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        this._showSearch();
      } else if (event.key.match(_Enums.default.KEYSTROKE.ESCAPE) && this.$el.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        this.publish(_Enums.default.ACTION.HIDE_HEADER);
      }
    }
    /**
     * On Scroll handler:
     *          - close search on scroll
     * @private
     */

  }, {
    key: "_onScroll",
    value: function _onScroll() {
      if (this.CURRENT_STATE_HEADER == _Enums.default.CLASS.IS_STICKY) {
        return;
      }

      if (this.$el.hasClass(_Enums.default.CLASS.IS_OPEN_STATE) && this.$window.scrollTop() > this.$el.outerHeight(true)) {
        this._hideSearch();
      } else if (!this.$el.hasClass(_Enums.default.CLASS.IS_OPEN_STATE) && this.$window.scrollTop() < this.$el.outerHeight(true)) {
        this._showSearch();
      }
    }
    /**
     * Pauses the curated suggestion animation
     * @private
     */

  }, {
    key: "_pauseCuratedSuggestionAnimation",
    value: function _pauseCuratedSuggestionAnimation() {
      this.$curatedSuggestions.removeClass(_Enums.default.CLASS.IS_FLYING_IN_AND_OUT);
      clearInterval(this.curatedSuggestionsInterval);
      clearInterval(this.resumeCuratedSuggestionAnimationTimer);
      clearInterval(this.tagFlyOutTimer);
      this.animationPauseTiming = this.animationPauseTiming ? this.animationPauseTiming - (Date.now() - this.curatedSuggestionAnimationStartingTime) : this.FLYING_IN_OUT_DURATION - (Date.now() - this.curatedSuggestionAnimationStartingTime);
    }
    /**
     * Resumes the curated suggestion animation
     * @param e
     * @private
     */

  }, {
    key: "_resumeCuratedSuggestionAnimation",
    value: function _resumeCuratedSuggestionAnimation(e) {
      var _this2 = this;

      var $target = $(e.currentTarget);
      this.curatedSuggestionAnimationStartingTime = Date.now();
      this.tagFlyOutTimer = setTimeout(function () {
        $target.addClass(_this2.CLASS_FLY_OUT);
      }, this.animationPauseTiming);
      this.resumeCuratedSuggestionAnimationTimer = setTimeout(function () {
        _this2._animateCuratedSuggestion();

        $target.removeClass(_this2.CLASS_FLY_OUT);
        _this2.curatedSuggestionsInterval = setInterval(function () {
          _this2._animateCuratedSuggestion();
        }, _this2.FLYING_IN_OUT_DURATION);
      }, this.animationPauseTiming + this.FLY_OUT_DURATOIN);
    }
    /**
     * Returns true if the passed string is a single letter a-z or A-Z.
     * @private
     */

  }, {
    key: "_isLetter",
    value: function _isLetter(str) {
      return typeof str === 'string' && str.match(/^[a-zA-Z]$/);
    }
  }, {
    key: "_onInputChange",
    value: function _onInputChange(e) {
      // The IF statement is a fix for an IE11 bug related to the "on input" event
      if (this.INPUT_VALUE !== $(e.currentTarget).val()) {
        this.publish(_Enums.default.EVENT.ON_SEARCH_INPUT, $(e.currentTarget).val());
        this.INPUT_VALUE = $(e.currentTarget).val();
      }

      if ($(e.currentTarget).val().length === 0) {
        this.$curatedSuggestionsWrapper.removeClass(_Enums.default.CLASS.IS_INVISIBLE);
      } else {
        if (!this.$oHeader.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
          this.publish(_Enums.default.ACTION.SHOW_HEADER);
        }

        this.$curatedSuggestionsWrapper.addClass(_Enums.default.CLASS.IS_INVISIBLE);
      }

      if (Modernizr.mq(_Enums.default.MQ.IS_MOBILE_HEADER) && $(this.SELECTOR_SEARCH).hasClass(this.CLASS_IS_OPEN)) {
        this.$curatedContent = $(this.SELECTOR_CURATED_CONTENT);
        this.$curatedContent.addClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
      }
    }
  }, {
    key: "_onSearchInputFocus",
    value: function _onSearchInputFocus() {
      if (_Utils.default.Helpers.isIE11()) {
        this._deactivateCuratedSuggestions();
      }
    }
  }, {
    key: "_onSearchInputBlur",
    value: function _onSearchInputBlur() {
      if (_Utils.default.Helpers.isIE11()) {
        this._activateCuratedSuggestions();
      }
    }
  }, {
    key: "_setSearchHint",
    value: function _setSearchHint(hint, replaceCurrentInput, stringBeingMatched) {
      if (Modernizr.mq(_Enums.default.MQ.IS_MOBILE_HEADER)) return;
      var hintToDisplay = hint,
          amountToSubstract = stringBeingMatched ? stringBeingMatched.length : this.$searchInput.val().length;

      if (replaceCurrentInput) {
        this.$searchInput.css('opacity', 0);
      } else {
        var indexOfAmpersand = hint.indexOf('&');
        this.$searchInput.css('opacity', 1);

        if (indexOfAmpersand > 0 && hint.toLowerCase().substr(indexOfAmpersand + 2, hint.length).lastIndexOf(stringBeingMatched.toLowerCase(), 0) === 0) {
          amountToSubstract = amountToSubstract + indexOfAmpersand + 2;
        }

        hintToDisplay = this.$searchInput.val() + hint.substring(amountToSubstract);
      }

      if (hintToDisplay === '') {
        this.$curatedSuggestionsWrapper.removeClass(_Enums.default.CLASS.IS_INVISIBLE);
      } else {
        this.$curatedSuggestionsWrapper.addClass(_Enums.default.CLASS.IS_INVISIBLE);
      } //Make sure the hint and user input match.


      if (hint && !hint.toLowerCase().lastIndexOf(this.$searchInput.val().toLowerCase(), 0) === 0 && !replaceCurrentInput) {
        hintToDisplay = '';
      }

      this.$searchHint.attr('placeholder', hintToDisplay);
    }
    /**
     * Activates the interval for the curated suggestions
     * @private
     */

  }, {
    key: "_activateCuratedSuggestions",
    value: function _activateCuratedSuggestions() {
      var _this3 = this;

      this.currentIndex = 0;
      this.$curatedSuggestionsWrapper.removeClass(_Enums.default.CLASS.IS_INVISIBLE + ' ' + _Enums.default.CLASS.IS_HIDDEN_STATE);

      if (this.$searchInput.val() !== '') {
        this.$curatedSuggestionsWrapper.addClass(_Enums.default.CLASS.IS_INVISIBLE);
      }

      this.$curatedSuggestions.addClass(_Enums.default.CLASS.IS_HIDDEN_STATE);

      this._animateCuratedSuggestion();

      clearInterval(this.curatedSuggestionsInterval);
      this.curatedSuggestionsInterval = setInterval(function () {
        _this3._animateCuratedSuggestion();
      }, this.FLYING_IN_OUT_DURATION);
    }
    /**
     * Animate the current curated suggestion
     * @private
     */

  }, {
    key: "_animateCuratedSuggestion",
    value: function _animateCuratedSuggestion() {
      this.animationPauseTiming = 0;
      this.curatedSuggestionAnimationStartingTime = Date.now();
      if (this.currentIndex === this.$curatedSuggestions.length) this.currentIndex = 0;
      this.$curatedSuggestions.removeClass(_Enums.default.CLASS.IS_FLYING_IN_AND_OUT);
      this.$curatedSuggestions.addClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
      this.$curatedSuggestions.eq(this.currentIndex).addClass(_Enums.default.CLASS.IS_FLYING_IN_AND_OUT).removeClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
      this.currentIndex++;
    }
  }, {
    key: "_deactivateCuratedSuggestions",
    value: function _deactivateCuratedSuggestions() {
      this.$curatedSuggestionsWrapper.addClass(_Enums.default.CLASS.IS_HIDDEN_STATE);
      clearInterval(this.curatedSuggestionsInterval);
      clearInterval(this.resumeCuratedSuggestionAnimationTimer);
      clearInterval(this.tagFlyOutTimer);
    }
    /**
     * Callback for when the page content has been replaced
     * @private
     */

  }, {
    key: "_onPageContentReplaced",
    value: function _onPageContentReplaced() {
      // margin for notification
      this.$pageContent = $(this.SELECTOR_PAGE_CONTENT);
    }
  }, {
    key: "_showSearch",
    value: function _showSearch(evt) {
      var _this4 = this;

      if (evt) {
        this.CURRENT_STATE_HEADER = evt;
      }

      this.$oHeader.addClass(this.CLASS_HAS_OPEN_SEARCH);
      this.$body.addClass(this.CLASS_IS_SEARCH_VISIBLE);
      this.$el.addClass(_Enums.default.CLASS.IS_OPEN_STATE);
      this.$searchIcon.addClass(_Enums.default.CLASS.IS_OPEN_STATE).attr('aria-label', 'close search');

      if (!this.$oHeader.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        this.publish(_Enums.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, {
          element: this.$el,
          margin: this.$el.outerHeight()
        });
      }

      _Utils.default.Accessibility.show(this.$el);

      this.$searchInput.focus();

      if (!Modernizr.mq(_Enums.default.MQ.IS_MOBILE)) {
        setTimeout(function () {
          _this4.$window.off('scroll', _this4._onScroll);

          _this4.$window.on('scroll', _this4._onScroll);
        }, this.SCROLLING_DURATION);
      } else if (Modernizr.mq(_Enums.default.MQ.IS_MOBILE) && this.CURRENT_STATE_HEADER == this.CLASS_IS_EXTENDED) {
        this.$window.off('scroll', this._onScroll);
        this.$window.on('scroll', this._onScroll);
      }
    }
  }, {
    key: "_hideSearch",
    value: function _hideSearch() {
      var _this5 = this;

      if (!this.$el.hasClass(_Enums.default.CLASS.IS_OPEN_STATE)) {
        return;
      }

      this.$oHeader.removeClass(this.CLASS_HAS_OPEN_SEARCH).addClass('is-closing-search');
      this.$body.removeClass(this.CLASS_IS_SEARCH_VISIBLE);
      this.$el.removeClass(_Enums.default.CLASS.IS_OPEN_STATE).addClass(_Enums.default.CLASS.IS_CLOSING_STATE).on('transitionend', function (event) {
        _this5.$el.removeClass(_Enums.default.CLASS.IS_CLOSING_STATE);

        _this5.$oHeader.removeClass('is-closing-search');

        _this5.$el.off('transitionend');
      });
      this.publish(_Enums.default.ACTION.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, {
        element: this.$el,
        margin: 0
      });
      this.$searchInput.val('');

      this._setSearchHint('', false);

      _Utils.default.Accessibility.hide(this.$el);

      this.$searchInput.blur();
      this.$searchIcon.removeClass(_Enums.default.CLASS.IS_OPEN_STATE).attr('aria-label', 'search');

      if (this.CURRENT_STATE_HEADER != _Enums.default.CLASS.IS_STICKY && this.CURRENT_STATE_HEADER != this.CLASS_IS_EXTENDED) {
        this.$window.off('scroll', this._onScroll);
      }
    }
  }, {
    key: "_onSearchSubmit",
    value: function _onSearchSubmit(event) {
      if (event.key.match(_Enums.default.KEYSTROKE.ENTER)) {
        this.$searchForm.submit();
      }
    }
  }]);

  return OSearch;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OSearch;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66,"./../../utils.js":113}],108:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OShownWith = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OShownWith, _AppeaserComponentBas);

  var _super = _createSuper(OShownWith);

  /**
   * Constructor, will run before page loaded
   */
  function OShownWith() {
    var _this;

    _classCallCheck(this, OShownWith);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OShownWith, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OShownWith.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_DESCRIPTION = '.shown-with-description';
      this.SELECTOR_TOOLTIP = '.a-tooltip';
      this.SELECTOR_WRAPPER = '.o-shown-with-wrapper';
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$wrapper = this.$el.closest(this.SELECTOR_WRAPPER);
      this.$toolTip = this.$wrapper.find(this.SELECTOR_TOOLTIP);
      this.$toolTipTrigger = this.$wrapper.find(this.SELECTOR_DESCRIPTION);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onBodyClicked = this._onBodyClicked.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_BODY_CLICKED, this._onBodyClicked);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_BODY_CLICKED, this._onBodyClicked);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {}
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

  }, {
    key: "_onBodyClicked",
    value: function _onBodyClicked(e) {
      var $target = $(e.target);

      if ($target.closest(this.SELECTOR_DESCRIPTION).length && !this.$toolTip.hasClass(_Enums.default.CLASS.IS_VISIBLE_STATE)) {
        this.$toolTip.addClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
      } else {
        this.$toolTip.removeClass(_Enums.default.CLASS.IS_VISIBLE_STATE);
      }
    }
  }]);

  return OShownWith;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OShownWith;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],109:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _index = _interopRequireDefault(require("common/organisms/o-slider-cofs/index"));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OSliderCofs = /*#__PURE__*/function (_BaseCofsSlider) {
  _inherits(OSliderCofs, _BaseCofsSlider);

  var _super = _createSuper(OSliderCofs);

  /**
   * Constructor, will run before page loaded
   */
  function OSliderCofs() {
    _classCallCheck(this, OSliderCofs);

    return _super.apply(this, arguments);
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OSliderCofs, [{
    key: "destroy",
    value: function destroy() {
      _get(_getPrototypeOf(OSliderCofs.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._attachSubscribers();

      this._cacheDOMElements();

      this._setSliderProperties();

      var amountOfSlides = this.$slider.children().length;

      this._sliderSetUp();

      this._attachMQHandlers(amountOfSlides);

      this._attachDOMListeners();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      _get(_getPrototypeOf(OSliderCofs.prototype), "_jQueryScopeBinding", this).call(this);

      this._slideNext = this._slideNext.bind(this);
      this._slidePrev = this._slidePrev.bind(this);
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      this.$el.on('click', _Enums.default.SWIPER.SELECTOR_ARROW_NEXT, this._slideNext);
      this.$el.on('click', _Enums.default.SWIPER.SELECTOR_ARROW_PREV, this._slidePrev);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$el.off('click', _Enums.default.SWIPER.SELECTOR_ARROW_NEXT, this._slideNext);
      this.$el.off('click', _Enums.default.SWIPER.SELECTOR_ARROW_PREV, this._slidePrev);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Sets up slider HTML
     * @private
     */

  }, {
    key: "_sliderSetUp",
    value: function _sliderSetUp() {
      this.$slider.addClass(_Enums.default.SWIPER.CLASS_CONTAINER); // Wrap the slides

      this.$slider.children().addClass(_Enums.default.SWIPER.CLASS_SLIDE).wrapAll("<div class='" + _Enums.default.SWIPER.CLASS_WRAPPER + "'></div>"); // Add arrows

      this.$el.append("<button type='button' aria-label='next' class='" + _Enums.default.SWIPER.CLASS_ARROW_NEXT + ' ' + _Enums.default.CLASS.HAS_DISABLED_BUTTON_STYLE + "'></button>").append("<button type='button' aria-label='previous' class='" + _Enums.default.SWIPER.CLASS_ARROW_PREV + ' ' + _Enums.default.CLASS.HAS_DISABLED_BUTTON_STYLE + "'></button>");
    }
    /**
     * Sets the properties for Swiper.
     * @private
     */

  }, {
    key: "_setSliderProperties",
    value: function _setSliderProperties() {
      var _this = this;

      var color = this.$slider.css('color'),
          amountOfSlides = Math.max(this.$slider.find(_Enums.default.SWIPER.SELECTOR_SWIPER_WRAPPER).children().length, this.$slider.children().length); //If the swiper has been initialized once, the slides are wrapped in 'swiper-wrapper'.

      var slidesPerView, slidesPerGroup;

      if (Modernizr.mq(_Enums.default.MQ.IS_DESKTOP)) {
        slidesPerView = this.$el.data(this.DATA_DESKTOP_SLIDES);
        slidesPerGroup = this.$el.data(this.DATA_DESKTOP_SLIDES);
      } else if (Modernizr.mq(_Enums.default.MQ.IS_TABLET)) {
        slidesPerView = this.$el.data(this.DATA_TABLET_SLIDES);
        slidesPerGroup = this.$el.data(this.DATA_TABLET_SLIDES);
      } else {
        slidesPerView = this.$el.data(this.DATA_MOBILE_SLIDES);
        slidesPerGroup = this.$el.data(this.DATA_MOBILE_SLIDES);
      }

      this.settings = {
        speed: 200,
        calculateHeight: true,
        slidesPerView: slidesPerView,
        slidesPerGroup: slidesPerGroup,
        loop: amountOfSlides > this.$el.data(this.DATA_DESKTOP_SLIDES),
        on: {
          init: function init() {
            _this.$el.addClass(_Enums.default.SWIPER.CLASS_INITIALIZED);
          }
        }
      };

      if (this.$el.data('slick-autoplay')) {
        this.settings.autoplay = {
          delay: this.$el.data('slick-autoplay-speed') ? this.$el.data('slick-autoplay-speed') : 4000
        };
      }
    }
    /**
     * Slides slider to the next slide
     * @private
     */

  }, {
    key: "_slideNext",
    value: function _slideNext() {
      if (this.slider) {
        this.slider.slideNext();
      }
    }
    /**
     * Slides slider to the previous slide
     * @private
     */

  }, {
    key: "_slidePrev",
    value: function _slidePrev() {
      if (this.slider) {
        this.slider.slidePrev();
      }
    }
  }]);

  return OSliderCofs;
}(_index.default); // Export this so we can pick it up and import in main.js


module.exports = OSliderCofs;

},{"./../../../../js/base/logger.js":51,"./../../enums.js":66,"common/organisms/o-slider-cofs/index":43}],110:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OSlider = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OSlider, _AppeaserComponentBas);

  var _super = _createSuper(OSlider);

  /**
   * Constructor, will run before page loaded
   */
  function OSlider() {
    var _this;

    _classCallCheck(this, OSlider);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OSlider, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this.$slider.redils('destroy');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OSlider.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_SLIDER = '.redils';
      this.SELECTOR_REDILS_SLIDE_CONTAINER = '.redils .slide-cont';
      this.SELECTOR_SLIDE_CONTAINER = '.slide-cont';
      this.SELECTOR_SLIDE_IMAGES = '.slides .a-image';
      this.SELECTOR_PAGINATION = '.pagination';
      this.SELECTOR_SLIDER_CONTENT = '.slides > *:first-child';
      this.SELECTOR_ARROW = '.arrow';
      this.SELECTOR_VIDEO_DUPLICATE = '.redils-duplicated .a-vimeo-video';
      this.SELECTOR_SLIDE = '.slides';
      this.SELECTOR_REDILS_DUPLICATED = '.redils-duplicated';
      this.SELECTOR_REDILS_NOT_DUPLICATED = ':not(' + this.SELECTOR_REDILS_DUPLICATED + ')';
      this.SELECTOR_IS_SUGGESTIONS = '.is-suggestions';
      this.SELECTOR_PRA_SLIDER = '#praOSlider';
      this.SELECTOR_SUPER_SLIDE = '.super-slide';
      this.SELECTOR_REDILS_CONTROL = '.redils-controls';
      this.SELECTOR_STYLE_WITH = '#osliderStyleWith';
      this.SELECTOR_NON_DUPLICATE = this.SELECTOR_SUPER_SLIDE + this.SELECTOR_REDILS_NOT_DUPLICATED;
      this.SELECTOR_STYLE_WITH_CONTROLS = this.SELECTOR_STYLE_WITH + ' ' + this.SELECTOR_REDILS_CONTROL;
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._attachSubscribers();

      this._cacheDOMElements();

      this.hasFloatingPagination = this.$el.data('floating-pagination');

      this._attachDOMListeners();

      this._setListenerImagesReady();
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$slider = this.$el.find(this.SELECTOR_SLIDER);
      this.$sliderContainer = this.$el.find(this.SELECTOR_REDILS_SLIDE_CONTAINER);
      this.$pagination = this.$el.find(this.SELECTOR_PAGINATION);
      this.$arrow = this.$el.find(this.SELECTOR_ARROW);
      this.$slide = this.$el.closest(this.SELECTOR_IS_SUGGESTIONS).find(this.SELECTOR_SLIDE);
      this.$pendingImages = this.$sliderContainer.find(this.SELECTOR_SLIDE_IMAGES);
      this.$imagesReady = $();
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._adjustPositions = this._adjustPositions.bind(this);
      this._setParentToBlock = this._setParentToBlock.bind(this);
      this._setListenerImagesReady = this._setListenerImagesReady.bind(this);
      this._onImagesReady = this._onImagesReady.bind(this);
      this._onInit = this._onInit.bind(this);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.ACTION.RE_INITIALIZE_SLIDER, this._reInit);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.ACTION.RE_INITIALIZE_SLIDER, this._reInit);
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      $(window).on('resize', this._adjustPositions);
      this.$el.on('redils.imagesReady', this._onImagesReady);
      this.$el.on('redils.initiated', this._onInit);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      $(window).off('resize', this._adjustPositions);
      this.$el.off('redils.imagesReady', this._onImagesReady);
      this.$el.off('redils.initiated', this._onInit);
      this.$slider.off('mousemove', function (e) {
        return e.stopPropagation();
      });
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Recursive function, checks if slider images are fully loaded
     * @private
     */

  }, {
    key: "_setListenerImagesReady",
    value: function _setListenerImagesReady() {
      if (this.$pendingImages && this.$pendingImages.length > 0) {
        for (var i = 0; i < this.$pendingImages.length; i++) {
          if (this.$pendingImages[i].complete === true) {
            this.$imagesReady.push(this.$pendingImages.splice(i, 1)[0]);
          }
        }

        if (this.$pendingImages.length > 0) {
          window.requestAnimationFrame(this._setListenerImagesReady);
        } else {
          this.$el.trigger('redils.imagesReady');
        }
      } else {
        this._onImagesReady();
      }
    }
    /**
     * Triggers when slider images are fully loaded
     * @private
     */

  }, {
    key: "_onImagesReady",
    value: function _onImagesReady() {
      this._adjustPositions();

      this._initSlider();
    }
    /**
     * Sets display:block to parent element, so the slider won't break
     * @private
     */

  }, {
    key: "_setParentToBlock",
    value: function _setParentToBlock() {
      this.$el.parent().css('display', 'block');
    }
    /**
     * Callback for when the slider has been initiated.
     * @private
     */

  }, {
    key: "_onInit",
    value: function _onInit() {
      var $videos = this.$el.find(this.SELECTOR_VIDEO_DUPLICATE); //Re-init the duplicate videos so they stay muted.

      $videos.removeAttr('data-component-id');

      this.__mediator._scanNewBlock(this.$el[0]);
    }
    /**
     * Initializes the slider
     * @private
     */

  }, {
    key: "_initSlider",
    value: function _initSlider() {
      var breakpoints;

      if (this.$el.data('multislide')) {
        if (this.$el.data('num-slides') === 'adaptive') {
          var numChilds = this.$sliderContainer.children().length,
              slideWidth = this.$el.data('slide-width'),
              currBreakPoint = slideWidth * 2;
          breakpoints = [{
            breakAfter: 0,
            numSlides: 1
          }];

          for (var i = 2; i <= numChilds; i++) {
            breakpoints.push({
              breakAfter: currBreakPoint,
              numSlides: i
            });
            currBreakPoint += slideWidth;
          }
        } else if (this.$el.data('num-slides') === 'customized-pra') {
          if (Modernizr.mq(_Enums.default.MQ.IS_DESKTOP) || Modernizr.mq(_Enums.default.MQ.IS_TABLET)) {
            breakpoints = [{
              breakAfter: 0,
              numSlides: 4
            }];
          } else {
            breakpoints = [{
              breakAfter: 0,
              numSlides: 2
            }];
            this.$slide.removeAttr('style');
          }
        } else {
          breakpoints = [{
            breakAfter: 0,
            numSlides: this.$el.data('num-slides')
          }];
        }
      }

      this._setParentToBlock();

      this.$slider.redils({
        auto: false,
        attach: 'pre',
        autoResize: true,
        setHeight: false,
        overflow: 1,
        pagination: this.$el.data('pagination'),
        multiSlide: this.$el.data('multislide'),
        breakPoints: breakpoints,
        easing: 'easeInOutSine',
        speed: '500'
      });

      if ($(this.SELECTOR_SUPER_SLIDE)) {
        if ($(this.SELECTOR_NON_DUPLICATE).length === 1) {
          $(this.SELECTOR_STYLE_WITH_CONTROLS).css({
            display: 'none'
          });
        }
      }

      //slide-controler 속성 추가 : 20211015
      if (this.$el.data('slide-controler-hide')) {
          if (this.$el.find(this.SELECTOR_SUPER_SLIDE)) {
              if (this.$el.find(this.SELECTOR_NON_DUPLICATE).length === 1) {
                  this.$el.find(this.SELECTOR_REDILS_CONTROL).css({
                      display: 'none'
                  });
              }
          }
      }

      //slide 갯수 파악 후 o-slide 에 클래스 추가 : 20211015
      var tempNumSlides = this.$el.find(this.SELECTOR_NON_DUPLICATE).eq(0).find(this.SELECTOR_SLIDE).length;
      this.$el.addClass('c-num-slides-' + tempNumSlides)

      if (this.$el.is($(this.SELECTOR_PRA_SLIDER))) {
        this.publish(_Enums.default.ACTION.RESET_IMAGE_CLICK_HANDLER);
      }

      this.$slider.on('mousemove', function (e) {
        return e.stopPropagation();
      });
    }
    /**
     * Adjusts the position of the pagination and arrows according to the image height
     * @private
     */

  }, {
    key: "_adjustPositions",
    value: function _adjustPositions() {
      var arrowHeight = this.$el.find(this.SELECTOR_ARROW).outerHeight();
      var contentHeight = this.$el.find(this.SELECTOR_SLIDER_CONTENT).outerHeight() - arrowHeight;

      if (contentHeight < 0) {
        contentHeight = this.$el.find(this.SELECTOR_SLIDER_CONTENT).children().outerHeight() - arrowHeight;
      }

      if (this.hasFloatingPagination) {
        this.$pagination.css('top', contentHeight);
      }

      this.$arrow.css('top', contentHeight / 2);
    }
    /**
     * Re-initialises slider
     * Extracts slide HTML to prevent loss on .redils('destroy')
     * @param $slider
     * @private
     */

  }, {
    key: "_reInit",
    value: function _reInit($slider) {
      var _this2 = this;

      if (this.$slider.is($slider)) {
        var slideHtml,
            $sliderContainer = $slider.find(this.SELECTOR_SLIDE_CONTAINER),
            $cleanSlides = $sliderContainer.find(this.SELECTOR_REDILS_NOT_DUPLICATED),
            $duplicatedSlides = $slider.find(this.SELECTOR_REDILS_DUPLICATED); // clean up the HTML if initialised already

        if ($duplicatedSlides.length) {
          $cleanSlides = $cleanSlides.find(this.SELECTOR_SLIDE);
        } else {
          $cleanSlides = $cleanSlides.filter(this.SELECTOR_SLIDE);
        } // to avoid loss of HTML on .redils('destroy') keep existing HTML


        slideHtml = $cleanSlides.map(function (i, x) {
          return x.outerHTML;
        }).get().join();
        $slider.redils('destroy');
        $slider.off('mousemove', function (e) {
          return e.stopPropagation();
        });
        $sliderContainer.html(slideHtml).promise().then(function () {
          _this2._cacheDOMElements();

          _this2._initSlider();

          _this2._adjustPositions();
        });
      }
    }
  }]);

  return OSlider;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OSlider;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],111:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OWidth = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OWidth, _AppeaserComponentBas);

  var _super = _createSuper(OWidth);

  /**
   * Constructor, will run before page loaded
   */
  function OWidth() {
    var _this;

    _classCallCheck(this, OWidth);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OWidth, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachDOMListeners();

      this._detachSubscribers();

      _get(_getPrototypeOf(OWidth.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.CLASS_CONTINUE = 'continue';
      this.CLASS_LINK = 'a-link';
      this.SELECTOR_PARAGRAPH = '.text-container .a-paragraph';
      this.ANIMATION_DURATION = 300;
    }
    /**
     * Called on onDomReady, cache DOM elements
     * @private
     */

  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$paragraph = this.$el.find(this.SELECTOR_PARAGRAPH);
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._attachContinueButton = this._attachContinueButton.bind(this);
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {}
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {}
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {}
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._cacheDOMElements();

      this._attachSubscribers();

      this._attachDOMListeners();

      this._attachContinueButton();
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Shows hero video
     * @private
     */

  }, {
    key: "_attachContinueButton",
    value: function _attachContinueButton() {
      if (this.$paragraph.length && this.$el.data('url') && this.$el.data('continue')) {
        var $lastParagraph = $(this.$paragraph[this.$paragraph.length - 1]);
        $lastParagraph.html($lastParagraph.html() + ' ').append($('<a>', {
          href: this.$el.data('url'),
          alt: this.$el.data('continue'),
          html: this.$el.data('continue'),
          class: this.CLASS_LINK + ' ' + this.CLASS_CONTINUE
        }));
      }
    }
  }]);

  return OWidth;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OWidth;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],112:[function(require,module,exports){
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _appeaserComponentBase = _interopRequireDefault(require('./../../../../js/base/appeaser-component-base.js'));

var _Logger = _interopRequireDefault(require('./../../../../js/base/logger.js'));

var _Enums = _interopRequireDefault(require('./../../enums.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var OZoomSlider = /*#__PURE__*/function (_AppeaserComponentBas) {
  _inherits(OZoomSlider, _AppeaserComponentBas);

  var _super = _createSuper(OZoomSlider);

  /**
   * Constructor, will run before page loaded
   */
  function OZoomSlider() {
    var _this;

    _classCallCheck(this, OZoomSlider);

    _this = _super.apply(this, arguments);

    _Logger.default.INFO(_this.constructor.name, ':: Constructor');

    _this._jQueryScopeBinding();

    _this._declareConstants();

    _this.subscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, _this._onDOMReady); // always needed


    return _this;
  }
  /**
   * Destructor, will run after page unload (or destroy)
   */


  _createClass(OZoomSlider, [{
    key: "destroy",
    value: function destroy() {
      _Logger.default.INFO(this.constructor.name, ':: Destructor');

      this._detachMQHandlers();

      this._detachDOMListeners();

      this._detachSubscribers();

      this._unInitSlider();

      _get(_getPrototypeOf(OZoomSlider.prototype), "destroy", this).call(this);
    }
    /************************************************************************************************************
     ******************************************** Internal functions ********************************************
     ************************************************************************************************************/

    /**
     * Declare class constants here
     * @private
     */

  }, {
    key: "_declareConstants",
    value: function _declareConstants() {
      this.SELECTOR_SLIDER = '.slider';
      this.SELECTOR_CLONED_COMPONENTS = '.slick-cloned, .slick-cloned *[data-component-id]';
      this.CLASS_SLICK_ARROW_PREV = 'slick-arrow slick-prev a-icon-lg-accordion';
      this.CLASS_SLICK_ARROW_NEXT = 'slick-arrow slick-next a-icon-lg-accordion';
      this.SELECTOR_IMAGE_COUNTER = '.image-counter';
      this.SELECTOR_A_IMAGE = '.a-image';
      this.CLASS_IMAGE_RESOLVED = 'ResolveComplete';
      this.DEFAULT_IMAGE = 'default-image';
    }
    /**
     * Runs on DOM Ready
     * Should be used to attach DOM listeners etc
     * @private
     */

  }, {
    key: "_onDOMReady",
    value: function _onDOMReady() {
      _Logger.default.INFO(this.constructor.name, ':: _onDOMReady');

      this._attachSubscribers();

      this._cacheDOMElements();

      this._attachDOMListeners();

      this._attachMQHandlers();

      this._initSlider();

      this._updateImageCounter();
    }
  }, {
    key: "_cacheDOMElements",
    value: function _cacheDOMElements() {
      this.$slider = this.$el.find(this.SELECTOR_SLIDER);
      this.$imageCounter = this.$el.find(this.SELECTOR_IMAGE_COUNTER);
      this.totalNumImages = this.$slider.children().length;
      this.tabletSlides = this.$el.data('slides-tablet');
      this.desktopSlides = this.$el.data('slides-desktop');
    }
    /**
     * Scopes "this" to use the "this" of the outside function
     * Since JQuery creates a new function with a new "this"
     * Attach all functions that needs to be binded here
     * @private
     */

  }, {
    key: "_jQueryScopeBinding",
    value: function _jQueryScopeBinding() {
      this._onDOMReady = this._onDOMReady.bind(this);
      this._onMQDesktopMatch = this._onMQDesktopMatch.bind(this);
      this._onMQTabletAndMobileMatch = this._onMQTabletAndMobileMatch.bind(this);
      this._updateImageCounter = this._updateImageCounter.bind(this);
      this._refresh = this._refresh.bind(this);
      this._initCloneSlides = this._initCloneSlides.bind(this);
      this._unInitSlider = this._unInitSlider.bind(this);
      this._initSlider = this._initSlider.bind(this);
      this._onImageLoad = this._onImageLoad.bind(this);
      this._showLoadingWheel = this._showLoadingWheel.bind(this);
    }
    /**
     * At this point the framework is ready.
     * Add all publish events here (if any)
     * @private
     */

  }, {
    key: "_onFrameworkReady",
    value: function _onFrameworkReady() {
      this._initCloneSlides();
    }
    /**
     * Attach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_attachSubscribers",
    value: function _attachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _attachSubscribers');

      this.subscribe(_Enums.default.EVENT.ON_PAGE_CONTENT_SHOW, this._refresh);
      this.subscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.subscribe(_Enums.default.EVENT.ON_PRODUCT_GALLERY_UPDATED, this._reInitSlider);
    }
    /**
     * Detach Event Subscribers within JS (Enums.js)
     * @private
     */

  }, {
    key: "_detachSubscribers",
    value: function _detachSubscribers() {
      _Logger.default.INFO(this.constructor.name, ':: _detachSubscribers');

      this.unsubscribe(_Enums.default.EVENT.ON_DOCUMENT_READY, this._onDOMReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_FRAMEWORK_READY, this._onFrameworkReady); // always needed

      this.unsubscribe(_Enums.default.EVENT.ON_PAGE_CONTENT_SHOW, this._refresh);
      this.unsubscribe(_Enums.default.EVENT.ON_PRODUCT_GALLERY_UPDATED, this._reInitSlider);
    }
    /**
     * Attach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_attachDOMListeners",
    value: function _attachDOMListeners() {
      var _this2 = this;

      this.$sliderImages = this.$slider.find(this.SELECTOR_A_IMAGE);
      $.each(this.$sliderImages, function (idx, val) {
        val.addEventListener('load', _this2._onImageLoad);
      });
    }
  }, {
    key: "_onImageLoad",
    value: function _onImageLoad(e) {
      if (e.currentTarget.currentSrc && e.currentTarget.currentSrc.replace(/(^\w+:|^)\/\//, '').startsWith('lp2.hm.com/hmgoepprod?blank=')) {
        return;
      }

      this.publish(_Enums.default.ACTION.HIDE_SPINNER);
    }
    /**
     * Detach EventListeners in the DOM
     * @private
     */

  }, {
    key: "_detachDOMListeners",
    value: function _detachDOMListeners() {
      this.$slider.off('afterChange', this._updateImageCounter);
    }
    /**
     * Attach media query handlers
     * @private
     */

  }, {
    key: "_attachMQHandlers",
    value: function _attachMQHandlers() {
      this.MQDesktopHandler = {
        match: this._onMQDesktopMatch
      };
      this.MQMobileAndTablet = {
        match: this._onMQTabletAndMobileMatch
      };
      enquire.register(_Enums.default.MQ.MOBILE_AND_TABLET_RANGE, this.MQMobileAndTablet);
      enquire.register(_Enums.default.MQ.IS_DESKTOP, this.MQDesktopHandler);
    }
    /**
     * Detach media query handlers
     * @private
     */

  }, {
    key: "_detachMQHandlers",
    value: function _detachMQHandlers() {
      enquire.unregister(_Enums.default.MQ.MOBILE_AND_TABLET_RANGE, this.MQMobileAndTablet);
      enquire.unregister(_Enums.default.MQ.IS_DESKTOP, this.MQDesktopHandler);
    }
    /************************************************************************************************************
     ****************************************** Implementation functions ****************************************
     ************************************************************************************************************/

    /**
     * Initializes the slider
     * @private
     */

  }, {
    key: "_initSlider",
    value: function _initSlider() {
      var color = this.$slider.css('color');
      this.$slider.slick({
        nextArrow: "<button type='button' class='" + this.CLASS_SLICK_ARROW_NEXT + ' ' + _Enums.default.CLASS.HAS_DISABLED_BUTTON_STYLE + "'></button>",
        prevArrow: "<button type='button' class='" + this.CLASS_SLICK_ARROW_PREV + ' ' + _Enums.default.CLASS.HAS_DISABLED_BUTTON_STYLE + "'></button>",
        cssEase: 'cubic-bezier(0.27,0.18,0.32,1.01)',
        useTransform: true,
        dots: typeof this.$el.data('slick-dots') != 'undefined' ? this.$el.data('slick-dots') : false,
        vertical: typeof this.$el.data('slick-vertical') != 'undefined' ? this.$el.data('slick-vertical') : false,
        arrows: typeof this.$el.data('slick-arrows') != 'undefined' ? this.$el.data('slick-arrows') : true,
        autoplay: this.$el.data('slick-autoplay') || false,
        autoplaySpeed: this.$el.data('slick-autoplay-speed') || 4000,
        slidesToShow: this.$el.data('slides-mobile'),
        slidesToScroll: this.$el.data('slides-mobile'),
        speed: 225,
        waitForAnimate: false,
        rows: 0
      });
      this.$slider.on('afterChange', this._updateImageCounter);
      this.$slider.on('beforeChange', this._showLoadingWheel);
      this.slick = this.$slider.slick('getSlick');

      this._showLoadingWheel();
    }
  }, {
    key: "_showLoadingWheel",
    value: function _showLoadingWheel() {
      var _this3 = this;

      setTimeout(function () {
        var currentImg = _this3.$slider.find('.slick-active > .a-image');

        if (!currentImg.hasClass(_this3.CLASS_IMAGE_RESOLVED) || currentImg[0].currentSrc && currentImg[0].currentSrc.replace(/(^\w+:|^)\/\//, '').startsWith('lp2.hm.com/hmgoepprod?blank=')) {
          if (currentImg.hasClass(_this3.DEFAULT_IMAGE)) {
            _this3.publish(_Enums.default.ACTION.HIDE_SPINNER);
          } else {
            _this3.publish(_Enums.default.ACTION.SHOW_SPINNER);
          }
        }
      }, 500);
    }
    /**
     * Uninitializes the slider, initializes image-listing
     * @private
     */

  }, {
    key: "_unInitSlider",
    value: function _unInitSlider() {
      if (this.$slider.hasClass('slick-initialized')) {
        this.$slider.slick('unslick');
      }

      this.$slider.off('afterChange', this._updateImageCounter);
    }
    /**
     * Uninitializes and then again initializes the slider
     */

  }, {
    key: "_reInitSlider",
    value: function _reInitSlider() {
      this.$slider = this.$el.find(this.SELECTOR_SLIDER);

      this._unInitSlider();

      this._initSlider();
    }
    /**
     *Initializes the slider on mobile or tablet
     * @private
     */

  }, {
    key: "_onMQTabletAndMobileMatch",
    value: function _onMQTabletAndMobileMatch() {
      if (this.slick) {
        this.$slider.slick('slickSetOption', 'slidesToShow', this.tabletSlides, true);
      }
    }
    /**
     * Uninitilizes the slider on desktop
     * @private
     */

  }, {
    key: "_onMQDesktopMatch",
    value: function _onMQDesktopMatch() {
      if (this.slick) {
        this.$slider.slick('slickSetOption', 'slidesToShow', this.desktopSlides, true);
      }
    }
    /**
     * Updates the image counter in the slider
     * @private
     */

  }, {
    key: "_updateImageCounter",
    value: function _updateImageCounter(event, slick) {
      if (slick) {
        var currentSlide = slick.currentSlide + 1;
        this.$imageCounter.text(currentSlide + '/' + slick.slideCount);
      } else {
        this.$imageCounter.text('1/' + this.totalNumImages);
      }
    }
    /**
     * Recalculates the slider
     * @private
     */

  }, {
    key: "_refresh",
    value: function _refresh() {
      this.$slider.slick('setPosition');
    }
    /**
     * When infinite option is true slick will clone slides.
     * We need to initialize our scripts for these clones in order to avoid ugly transitions.
     * @private
     */

  }, {
    key: "_initCloneSlides",
    value: function _initCloneSlides() {
      this.$slider.find(this.SELECTOR_CLONED_COMPONENTS).removeAttr('data-component-id');
      this.scan();
    }
  }]);

  return OZoomSlider;
}(_appeaserComponentBase.default); // Export this so we can pick it up and import in main.js


module.exports = OZoomSlider;

},{"./../../../../js/base/appeaser-component-base.js":47,"./../../../../js/base/logger.js":51,"./../../enums.js":66}],113:[function(require,module,exports){
"use strict";

var _Enums = _interopRequireDefault(require('./enums.js'));

var _Logger = _interopRequireDefault(require('./../../js/base/logger.js'));

var _BaseUtils = _interopRequireDefault(require('./../../js/base/utils.js'));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Utils = $.extend({}, _BaseUtils.default, {
  Markers: {
    iconHover: function iconHover() {
      return {
        url: '/etc/designs/appeaser/p11/clientlibs/pattern-lib/images/indepth_icon_pointer.png',
        fill: '#3f5f3f',
        size: new google.maps.Size(25, 25),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(0, 25),
        scaledSize: new google.maps.Size(25, 25)
      };
    },
    icon: function icon() {
      return {
        url: '/etc/designs/appeaser/p11/clientlibs/pattern-lib/images/indepth_icon_pointer.png',
        fill: '#A509F8',
        size: new google.maps.Size(25, 25),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(0, 25),
        scaledSize: new google.maps.Size(25, 25)
      };
    }
  },
  Http: {
    post: function post(url, data) {
      return $.ajax({
        url: url,
        data: data,
        type: 'POST',
        headers: {
          'Cache-Control': 'no-cache, no-store, must-revalidate'
        }
      });
    },
    get: function get(url, data) {
      return $.ajax({
        url: url,
        data: data,
        type: 'GET',
        headers: {
          'Cache-Control': 'no-cache, no-store, must-revalidate'
        }
      });
    },
    load: function load(url, tag, onSuccess, onError, skipHistory, pushDownContent) {
      var $pageContent = $('.o-page-content'),
          $curtain = $('.navigation-curtain'),
          $header = $('.o-header'),
          $body = $('body'),
          $takeoverHeadline,
          marginTop = $header.outerHeight();
      marginTop += $curtain.height();
      $pageContent.addClass(_Enums.default.CLASS.IS_LOADING);
      $.holdReady(true);
      $.get(url, function (responseText, b, req) {
        var $responseText = $(responseText);
        var $newPageContent = $(responseText).filter(tag);
        $pageContent.addClass(_Enums.default.CLASS.IS_LOADING);
        $pageContent.html($newPageContent.html());
        $pageContent.attr('class', $newPageContent.attr('class'));

        if ($('.o-search').hasClass('is-open')) {
          window.appeaser.publish(window.appeaser.Enums.trigger.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, {
            element: $curtain,
            margin: $curtain.height()
          });
        }

        if (!Modernizr.mq(_Enums.default.MQ.IS_MOBILE)) {
          window.appeaser.publish(window.appeaser.Enums.trigger.UPDATE_PAGE_CONTENT_MARGIN_CONTRIBUTION, {
            element: $curtain,
            margin: $curtain.height()
          });
        }

        $takeoverHeadline = $pageContent.find('.is-takeover-headline');
        $(window).scrollTop(0);
        appeaser.scan();
        $.holdReady(false);

        if ($curtain.hasClass(_Enums.default.CLASS.IS_OPEN_STATE) && $takeoverHeadline.length) {
          $takeoverHeadline.addClass('is-hidden-behind-curtain');
        }

        $pageContent.addClass('fetch-complete is-fading-in');
        $pageContent.removeClass(_Enums.default.CLASS.IS_LOADING);
        setTimeout(function () {
          $pageContent.removeClass('is-fading-in');
        }, 1000); // replace page title

        document.title = $responseText.filter('title').text(); // fetch header and add/remove needed classes

        if ($responseText.find('.o-header').hasClass(_Enums.default.CLASS.IS_INVERTED)) {
          $.merge($body, $header).addClass(_Enums.default.CLASS.IS_INVERTED);
        } else {
          $.merge($body, $header).removeClass(_Enums.default.CLASS.IS_INVERTED);
        }

        if ($responseText.find('.o-header').hasClass(_Enums.default.CLASS.IS_TRANSPARENT)) {
          $.merge($body, $header).addClass(_Enums.default.CLASS.IS_TRANSPARENT);
        } else {
          $.merge($body, $header).removeClass(_Enums.default.CLASS.IS_TRANSPARENT);
        } // copy body styling to current body


        var newBody = $(responseText.match(/\<body.*class=(.*?)\>/gi).join('').replace('body', 'div'));
        $body.attr('style', '');
        $body.attr('style', newBody.attr('style'));

        if (!skipHistory) {
          history.pushState(null, document.title, url);
        } else {
          history.replaceState(null, document.title, url);
        } // notify system we've replaced the page content


        appeaser.publish(_Enums.default.EVENT.ON_PAGE_CONTENT_REPLACED);

        if (typeof onSuccess === 'function') {
          onSuccess();
        }
      }).fail(function () {
        appeaser.publish(_Enums.default.EVENT.ON_PAGE_LOAD_ERROR);
        if (typeof onError === 'function') onError();
      });
    }
  },
  Navigate: {
    to: function to(data, title, url) {
      history.pushState(data, title, url);
    }
  },
  Helpers: {
    isIE11: function isIE11() {
      return window.navigator.userAgent.indexOf('Trident/7.0') > 0;
    },
    removeSpecialCharacters: function removeSpecialCharacters(str) {
      return str.replace(/[`~!@#$%^*()_|+=?;:'",.<>\{\}\[\]\\\/]/gi, '');
    }
  }
}); //Override setting for displaying global messages.

Utils.Form.displayGlobalmessages = false;
module.exports = Utils;

},{"./../../js/base/logger.js":51,"./../../js/base/utils.js":58,"./enums.js":66}]},{},[5,67,61,62])
